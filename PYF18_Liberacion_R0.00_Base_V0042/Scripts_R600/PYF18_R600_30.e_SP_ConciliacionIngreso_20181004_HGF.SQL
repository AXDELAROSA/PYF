-- //////////////////////////////////////////////////////////////
-- // ARCHIVO:			
-- //////////////////////////////////////////////////////////////
-- // BASE DE DATOS:	PYF18_Finanzas
-- // MODULO:			INGRESOS / CONCILIACION
-- // OPERACION:		LIBERACION / STORED PROCEDURE
-- //////////////////////////////////////////////////////////////
-- // Autor:			HECTOR A. GONZALEZ DE LA FUENTE
-- // Fecha creación:	04/OCT/2018
-- ////////////////////////////////////////////////////////////// 

USE [PYF18_Finanzas_V9999_R0]
GO

-- //////////////////////////////////////////////////////////////




-- //////////////////////////////////////////////////////////////
-- // STORED PROCEDURE --->  LISTADO
-- //////////////////////////////////////////////////////////////
-- SELECT * FROM MOVIMIENTO_BANCO

--	EXECUTE [dbo].[PG_LI_CONCILIACION_INGRESO]	0,0,0,	'',		-1,-1,	'01/OCT/2018', 0

--	EXECUTE [dbo].[PG_LI_CONCILIACION_INGRESO]	0,0,0,	'',		-1,-1,-1,	NULL, 0


IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[PG_LI_CONCILIACION_INGRESO]') AND type in (N'P', N'PC'))
	DROP PROCEDURE [dbo].[PG_LI_CONCILIACION_INGRESO]
GO	


CREATE PROCEDURE [dbo].[PG_LI_CONCILIACION_INGRESO]
	@PP_L_DEBUG						INT,
	@PP_K_SISTEMA_EXE				INT,
	@PP_K_USUARIO_ACCION			INT,
	-- ===========================
	@PP_BUSCAR						VARCHAR(255),
	-- ===========================
	@PP_K_ZONA_UO					INT,
	@PP_K_CUENTA_BANCO				INT,
	@PP_K_ESTATUS_CONCILIACION		INT,
	-- ===========================
	@PP_F_MOVIMIENTO_BANCO			DATE,
	@PP_L_EXCLUIR_CONCILIADOS		INT
AS			

	DECLARE @VP_MENSAJE		VARCHAR(300)
	
	SET		@VP_MENSAJE		= ''
	
	-- ///////////////////////////////////////////

	IF @VP_MENSAJE=''
		EXECUTE [dbo].[PG_RN_DATA_ACCESO_SELECT]	@PP_L_DEBUG, @PP_K_SISTEMA_EXE, @PP_K_USUARIO_ACCION,	
													8, -- @PP_K_DATA_SISTEMA,	
													@OU_RESULTADO_VALIDACION = @VP_MENSAJE		OUTPUT
	-- ///////////////////////////////////////////

	DECLARE @VP_LI_N_REGISTROS		INT
	
	SET @VP_LI_N_REGISTROS = 1000
	
	EXECUTE [dbo].[PG_SK_CONFIGURACION_LI_N_REGISTROS_GET]	@PP_L_DEBUG, @PP_K_SISTEMA_EXE,
															1, -- WIWI // @VP_L_APLICAR_MAX_ROWS,
															@OU_LI_N_REGISTROS = @VP_LI_N_REGISTROS		OUTPUT		
	-- =========================================	
	
	IF NOT (@VP_MENSAJE='')
		SET @VP_LI_N_REGISTROS = 0

	-- ///////////////////////////////////////////
	
	CREATE TABLE	#VP_TA_RAZON_SOCIAL
					(	TA_K_RAZON_SOCIAL		INT		)
	
	-- ==========================================

	INSERT INTO #VP_TA_RAZON_SOCIAL
			(	TA_K_RAZON_SOCIAL	)
		SELECT DISTINCT	K_RAZON_SOCIAL
		FROM	UNIDAD_OPERATIVA
		WHERE	( @PP_K_ZONA_UO=-1	OR	@PP_K_ZONA_UO=UNIDAD_OPERATIVA.K_ZONA_UO )
		OR		UNIDAD_OPERATIVA.K_UNIDAD_OPERATIVA=0 

	-- ///////////////////////////////////////////

	SELECT	TOP ( @VP_LI_N_REGISTROS )		
			F_MOV.D_TIEMPO_FECHA	AS F_MOVIMIENTO_DDMMMYYYY,
			F_OPE.D_TIEMPO_FECHA	AS F_OPERACION_DDMMMYYYY,
			F_LIQ.D_TIEMPO_FECHA	AS F_LIQ_DDMMMYYYY,	
			MOVIMIENTO_BANCO.*,
			CUENTA_BANCO.CUENTA, 
			-- ==============================
			D_CUENTA_BANCO, D_TIPO_MOVIMIENTO_BANCO, D_ESTATUS_MOVIMIENTO_BANCO, D_FORMA_MOVIMIENTO_BANCO, 			
			UNIDAD_OPERATIVA.D_UNIDAD_OPERATIVA, D_ESTATUS_CONCILIACION, D_TIPO_LIBRO_INGRESOS,
			-- ==============================
			S_CUENTA_BANCO, S_TIPO_MOVIMIENTO_BANCO, S_ESTATUS_MOVIMIENTO_BANCO, S_FORMA_MOVIMIENTO_BANCO, 			
			UNIDAD_OPERATIVA.S_UNIDAD_OPERATIVA, S_ESTATUS_CONCILIACION, S_TIPO_LIBRO_INGRESOS,			
			-- ==============================
			USR_UPD.D_USUARIO AS D_USUARIO_CAMBIO,		USR_UPD.S_USUARIO AS S_USUARIO_CAMBIO,
			USR_CON.D_USUARIO AS D_USUARIO_CONICLIO,	USR_CON.S_USUARIO AS S_USUARIO_CONCILIO
	FROM	MOVIMIENTO_BANCO	LEFT JOIN	USUARIO AS USR_CON
									ON		MOVIMIENTO_BANCO.K_USUARIO_CONCILIO=USR_CON.K_USUARIO, 
			-- ====================================
			CUENTA_BANCO, #VP_TA_RAZON_SOCIAL,
			TIPO_MOVIMIENTO_BANCO, 	ESTATUS_MOVIMIENTO_BANCO,
			FORMA_MOVIMIENTO_BANCO, 			
			UNIDAD_OPERATIVA, ESTATUS_CONCILIACION, TIPO_LIBRO_INGRESOS,			
			-- ====================================
			TIEMPO_FECHA AS F_MOV, TIEMPO_FECHA AS F_OPE, TIEMPO_FECHA AS F_LIQ,
			USUARIO AS USR_UPD
			-- ====================================
	WHERE	MOVIMIENTO_BANCO.K_CUENTA_BANCO=CUENTA_BANCO.K_CUENTA_BANCO
	AND		CUENTA_BANCO.K_RAZON_SOCIAL=TA_K_RAZON_SOCIAL

	AND		MOVIMIENTO_BANCO.K_TIPO_MOVIMIENTO_BANCO=TIPO_MOVIMIENTO_BANCO.K_TIPO_MOVIMIENTO_BANCO
	AND		MOVIMIENTO_BANCO.K_ESTATUS_MOVIMIENTO_BANCO=ESTATUS_MOVIMIENTO_BANCO.K_ESTATUS_MOVIMIENTO_BANCO
	AND		MOVIMIENTO_BANCO.K_FORMA_MOVIMIENTO_BANCO=FORMA_MOVIMIENTO_BANCO.K_FORMA_MOVIMIENTO_BANCO
	
	AND		( MOVIMIENTO_BANCO.K_UNIDAD_OPERATIVA=UNIDAD_OPERATIVA.K_UNIDAD_OPERATIVA
			--	OR	UNIDAD_OPERATIVA.K_UNIDAD_OPERATIVA=0
				 )

	AND		MOVIMIENTO_BANCO.K_ESTATUS_CONCILIACION=ESTATUS_CONCILIACION.K_ESTATUS_CONCILIACION 
	AND		MOVIMIENTO_BANCO.K_TIPO_LIBRO_INGRESOS=TIPO_LIBRO_INGRESOS.K_TIPO_LIBRO_INGRESOS
			-- =====================
	AND		MOVIMIENTO_BANCO.K_USUARIO_CAMBIO=USR_UPD.K_USUARIO
			-- =====================
	AND		MOVIMIENTO_BANCO.F_MOVIMIENTO_BANCO=F_MOV.F_TIEMPO_FECHA
	AND		MOVIMIENTO_BANCO.F_OPERACION=F_OPE.F_TIEMPO_FECHA
	AND		MOVIMIENTO_BANCO.F_LIQ=F_LIQ.F_TIEMPO_FECHA
			-- =====================
	AND		(	
				D_CUENTA_BANCO				LIKE '%'+@PP_BUSCAR+'%'	
			OR	COD_DESCRIPCION				LIKE '%'+@PP_BUSCAR+'%' 
			OR	REFERENCIA					LIKE '%'+@PP_BUSCAR+'%' 
			OR	CIE_CLIENTE					LIKE '%'+@PP_BUSCAR+'%' 	
			OR	CUENTA						LIKE '%'+@PP_BUSCAR+'%'	
			)			
			-- =====================
	AND		( @PP_F_MOVIMIENTO_BANCO IS NULL	OR	
				(	YEAR(@PP_F_MOVIMIENTO_BANCO)=YEAR(MOVIMIENTO_BANCO.F_MOVIMIENTO_BANCO) 
				AND	MONTH(@PP_F_MOVIMIENTO_BANCO)=MONTH(MOVIMIENTO_BANCO.F_MOVIMIENTO_BANCO)	)
			)
			-- =====================
			--	 K_ESTATUS_CONCILIACION = #0 PENDIENTE || #1 INVESTIGACION || #2 ACLARACION || #3 CONCILIADO || #4 NO CONCILIABLE
--	AND		MOVIMIENTO_BANCO.K_ESTATUS_CONCILIACION<>3\
	AND		( @PP_L_EXCLUIR_CONCILIADOS=0			OR	MOVIMIENTO_BANCO.K_ESTATUS_CONCILIACION<>3 )
	AND		( @PP_K_ESTATUS_CONCILIACION=-1			OR	@PP_K_ESTATUS_CONCILIACION=MOVIMIENTO_BANCO.K_ESTATUS_CONCILIACION )
	AND		( @PP_K_CUENTA_BANCO=-1					OR	@PP_K_CUENTA_BANCO=MOVIMIENTO_BANCO.K_CUENTA_BANCO )

	AND		( @PP_K_ZONA_UO=-1						OR	@PP_K_ZONA_UO=UNIDAD_OPERATIVA.K_ZONA_UO
													OR UNIDAD_OPERATIVA.K_UNIDAD_OPERATIVA=0		)	
	AND		MOVIMIENTO_BANCO.L_BORRADO=0
			-- =====================
	ORDER BY F_MOVIMIENTO_BANCO DESC, K_MOVIMIENTO_BANCO DESC

	-- ///////////////////////////////////////////

	DROP TABLE #VP_TA_RAZON_SOCIAL
	
	-- //////////////////////////////////////////////////////////////
GO



/*
SELECT * FROM MOVIMIENTO_BANCO

EXECUTE [dbo].[PG_LI_CONCILIACION_INGRESO]	0,0,0,	'',		-1,-1,-1,	NULL, 0

EXECUTE [dbo].[PG_LI_CONCILIACION_INGRESO]	0,0,0,	'',		10,-1,-1,	NULL, 0
EXECUTE [dbo].[PG_LI_CONCILIACION_INGRESO]	0,0,0,	'',		20,-1,-1,	NULL, 0
EXECUTE [dbo].[PG_LI_CONCILIACION_INGRESO]	0,0,0,	'',		30,-1,-1,	NULL, 0

EXECUTE [dbo].[PG_LI_CONCILIACION_INGRESO]	0,0,0,	'',		40,-1,-1,	NULL, 0		-- JALISCO

EXECUTE [dbo].[PG_LI_CONCILIACION_INGRESO]	0,0,0,	'',		50,-1,-1,	NULL, 0
EXECUTE [dbo].[PG_LI_CONCILIACION_INGRESO]	0,0,0,	'',		60,-1,-1,	NULL, 0
EXECUTE [dbo].[PG_LI_CONCILIACION_INGRESO]	0,0,0,	'',		70,-1,-1,	NULL, 0

*/






-- //////////////////////////////////////////////////////////////
-- // STORED PROCEDURE --->  LISTADO
-- //////////////////////////////////////////////////////////////
--	
/*

EXECUTE [dbo].[PG_LI_CONCILIACION_INGRESO_RESUMEN]	0,0,0,		0,	'30/SEP/2018'

EXECUTE [dbo].[PG_LI_CONCILIACION_INGRESO_RESUMEN]	0,0,0,		0,	'01/OCT/2018'

EXECUTE [dbo].[PG_LI_CONCILIACION_INGRESO_RESUMEN]	0,0,0,		-1,-1,	'06/OCT/2018'

*/


IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[PG_LI_CONCILIACION_INGRESO_RESUMEN]') AND type in (N'P', N'PC'))
	DROP PROCEDURE [dbo].[PG_LI_CONCILIACION_INGRESO_RESUMEN]
GO	


CREATE PROCEDURE [dbo].[PG_LI_CONCILIACION_INGRESO_RESUMEN]
	@PP_L_DEBUG						INT,
	@PP_K_SISTEMA_EXE				INT,
	@PP_K_USUARIO_ACCION			INT,
	-- ===========================
	@PP_K_RAZON_SOCIAL				INT,
	@PP_K_UNIDAD_OPERATIVA			INT,
	@PP_F_MOVIMIENTO_BANCO			DATE
AS			

	DECLARE @VP_MENSAJE		VARCHAR(300)
	
	SET		@VP_MENSAJE		= ''
	
	-- ///////////////////////////////////////////

	IF @VP_MENSAJE=''
		EXECUTE [dbo].[PG_RN_DATA_ACCESO_SELECT]	@PP_L_DEBUG, @PP_K_SISTEMA_EXE, @PP_K_USUARIO_ACCION,	
													8, -- @PP_K_DATA_SISTEMA,	
													@OU_RESULTADO_VALIDACION = @VP_MENSAJE		OUTPUT
	-- ///////////////////////////////////////////

	DECLARE @VP_LI_N_REGISTROS		INT
	
	SET @VP_LI_N_REGISTROS = 1000
	
	EXECUTE [dbo].[PG_SK_CONFIGURACION_LI_N_REGISTROS_GET]	@PP_L_DEBUG, @PP_K_SISTEMA_EXE,
															1, -- WIWI // @VP_L_APLICAR_MAX_ROWS,
															@OU_LI_N_REGISTROS = @VP_LI_N_REGISTROS		OUTPUT		
	-- =========================================	
	
	IF NOT (@VP_MENSAJE='')
		SET @VP_LI_N_REGISTROS = 0

	-- ///////////////////////////////////////////

	SELECT	YEAR(F_OPERACION) AS F_YYYY, MONTH(F_OPERACION) AS F_MM,
			RAZON_SOCIAL.K_RAZON_SOCIAL, D_RAZON_SOCIAL, S_RAZON_SOCIAL,
			D_UNIDAD_OPERATIVA, S_UNIDAD_OPERATIVA,
			D_TIPO_LIBRO_INGRESOS, S_TIPO_LIBRO_INGRESOS,	
			123.45 AS TOTAL,
			456.78 AS POR_CONCILIAR,
			SUM(MONTO_MOVIMIENTO) AS CONCILIADO
	FROM	MOVIMIENTO_BANCO, USUARIO,
			TIEMPO_FECHA AS F_OPE, TIEMPO_FECHA AS F_LIQ,
			TIPO_MOVIMIENTO_BANCO, ESTATUS_MOVIMIENTO_BANCO,
			CUENTA_BANCO, FORMA_MOVIMIENTO_BANCO, 
			ESTATUS_CONCILIACION, TIPO_LIBRO_INGRESOS,
			UNIDAD_OPERATIVA, RAZON_SOCIAL
	WHERE	MOVIMIENTO_BANCO.K_TIPO_MOVIMIENTO_BANCO=TIPO_MOVIMIENTO_BANCO.K_TIPO_MOVIMIENTO_BANCO
	AND		MOVIMIENTO_BANCO.K_ESTATUS_MOVIMIENTO_BANCO=ESTATUS_MOVIMIENTO_BANCO.K_ESTATUS_MOVIMIENTO_BANCO
	AND		MOVIMIENTO_BANCO.K_CUENTA_BANCO=CUENTA_BANCO.K_CUENTA_BANCO
	AND		MOVIMIENTO_BANCO.K_TIPO_MOVIMIENTO_BANCO=TIPO_MOVIMIENTO_BANCO.K_TIPO_MOVIMIENTO_BANCO
	AND		MOVIMIENTO_BANCO.K_FORMA_MOVIMIENTO_BANCO=FORMA_MOVIMIENTO_BANCO.K_FORMA_MOVIMIENTO_BANCO
	AND		MOVIMIENTO_BANCO.K_USUARIO_CAMBIO=USUARIO.K_USUARIO
	AND		MOVIMIENTO_BANCO.K_ESTATUS_CONCILIACION=ESTATUS_CONCILIACION.K_ESTATUS_CONCILIACION 
	AND		MOVIMIENTO_BANCO.K_TIPO_LIBRO_INGRESOS=TIPO_LIBRO_INGRESOS.K_TIPO_LIBRO_INGRESOS
	AND		MOVIMIENTO_BANCO.K_UNIDAD_OPERATIVA=UNIDAD_OPERATIVA.K_UNIDAD_OPERATIVA 
	AND		UNIDAD_OPERATIVA.K_RAZON_SOCIAL=RAZON_SOCIAL.K_RAZON_SOCIAL
			-- =====================
	AND		MOVIMIENTO_BANCO.F_OPERACION=F_OPE.F_TIEMPO_FECHA
	AND		MOVIMIENTO_BANCO.F_LIQ=F_LIQ.F_TIEMPO_FECHA
			-- =====================
		--	 K_ESTATUS_CONCILIACION = #0 PENDIENTE || #1 INVESTIGACION || #2 ACLARACION || #3 CONCILIADO || #4 NO CONCILIABLE
	AND		MOVIMIENTO_BANCO.K_ESTATUS_CONCILIACION=3

	AND		MOVIMIENTO_BANCO.F_OPERACION=@PP_F_MOVIMIENTO_BANCO
			-- =====================
	AND		( @PP_K_RAZON_SOCIAL=-1			OR		UNIDAD_OPERATIVA.K_RAZON_SOCIAL=@PP_K_RAZON_SOCIAL	)
	AND		( @PP_K_UNIDAD_OPERATIVA=-1		OR		MOVIMIENTO_BANCO.K_UNIDAD_OPERATIVA=@PP_K_UNIDAD_OPERATIVA )
	AND		MOVIMIENTO_BANCO.L_BORRADO=0
			-- =====================
	GROUP BY	YEAR(F_OPERACION), MONTH(F_OPERACION),
				RAZON_SOCIAL.K_RAZON_SOCIAL, D_RAZON_SOCIAL, S_RAZON_SOCIAL,
				D_UNIDAD_OPERATIVA, S_UNIDAD_OPERATIVA,
				D_TIPO_LIBRO_INGRESOS, S_TIPO_LIBRO_INGRESOS

	-- //////////////////////////////////////////////////////////////
GO




-- //////////////////////////////////////////////////////////////
-- // STORED PROCEDURE --->  LISTADO
-- //////////////////////////////////////////////////////////////
--	
/*

EXECUTE [dbo].[PG_LI_MOVIMIENTO_BANCO_SIN_CONCILIAR]	0,0,0,		1	

*/


IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[PG_LI_MOVIMIENTO_BANCO_SIN_CONCILIAR]') AND type in (N'P', N'PC'))
	DROP PROCEDURE [dbo].[PG_LI_MOVIMIENTO_BANCO_SIN_CONCILIAR]
GO	


CREATE PROCEDURE [dbo].[PG_LI_MOVIMIENTO_BANCO_SIN_CONCILIAR]
	@PP_L_DEBUG						INT,
	@PP_K_SISTEMA_EXE				INT,
	@PP_K_USUARIO_ACCION			INT,
	-- ===========================
	@PP_K_CUENTA_BANCO				INT
--	@PP_K_UNIDAD_OPERATIVA			INT ,
--	@PP_F_MOVIMIENTO_BANCO			DATE
AS			
	-- ===========================

	DECLARE @VP_MENSAJE		VARCHAR(300)
	
	SET		@VP_MENSAJE		= ''
	
	-- ///////////////////////////////////////////

	IF @VP_MENSAJE=''
		EXECUTE [dbo].[PG_RN_DATA_ACCESO_SELECT]	@PP_L_DEBUG, @PP_K_SISTEMA_EXE, @PP_K_USUARIO_ACCION,	
													8, -- @PP_K_DATA_SISTEMA,	
													@OU_RESULTADO_VALIDACION = @VP_MENSAJE		OUTPUT
	-- ///////////////////////////////////////////

	DECLARE @VP_LI_N_REGISTROS		INT
	
	SET @VP_LI_N_REGISTROS = 1000
	
	EXECUTE [dbo].[PG_SK_CONFIGURACION_LI_N_REGISTROS_GET]	@PP_L_DEBUG, @PP_K_SISTEMA_EXE,
															1, -- WIWI // @VP_L_APLICAR_MAX_ROWS,
															@OU_LI_N_REGISTROS = @VP_LI_N_REGISTROS		OUTPUT		
	-- =========================================	
	
	IF NOT (@VP_MENSAJE='')
		SET @VP_LI_N_REGISTROS = 0

	-- ///////////////////////////////////////////

	SELECT	YEAR(F_MOVIMIENTO_BANCO) AS F_YYYY, MONTH(F_MOVIMIENTO_BANCO) AS F_MM,
			D_CUENTA_BANCO, S_CUENTA_BANCO,
			D_ESTATUS_CONCILIACION, S_ESTATUS_CONCILIACION,	
			SUM(MONTO_MOVIMIENTO) AS SUM_MONTO_MOVIMIENTO
	FROM	MOVIMIENTO_BANCO, USUARIO,
			TIEMPO_FECHA AS F_OPE, TIEMPO_FECHA AS F_LIQ,
			TIPO_MOVIMIENTO_BANCO, ESTATUS_MOVIMIENTO_BANCO,
			CUENTA_BANCO, FORMA_MOVIMIENTO_BANCO, 
			UNIDAD_OPERATIVA, ESTATUS_CONCILIACION, TIPO_LIBRO_INGRESOS
	WHERE	MOVIMIENTO_BANCO.K_TIPO_MOVIMIENTO_BANCO=TIPO_MOVIMIENTO_BANCO.K_TIPO_MOVIMIENTO_BANCO
	AND		MOVIMIENTO_BANCO.K_ESTATUS_MOVIMIENTO_BANCO=ESTATUS_MOVIMIENTO_BANCO.K_ESTATUS_MOVIMIENTO_BANCO
	AND		MOVIMIENTO_BANCO.K_CUENTA_BANCO=CUENTA_BANCO.K_CUENTA_BANCO
	AND		MOVIMIENTO_BANCO.K_TIPO_MOVIMIENTO_BANCO=TIPO_MOVIMIENTO_BANCO.K_TIPO_MOVIMIENTO_BANCO
	AND		MOVIMIENTO_BANCO.K_FORMA_MOVIMIENTO_BANCO=FORMA_MOVIMIENTO_BANCO.K_FORMA_MOVIMIENTO_BANCO
	AND		MOVIMIENTO_BANCO.K_USUARIO_CAMBIO=USUARIO.K_USUARIO
	AND		MOVIMIENTO_BANCO.K_UNIDAD_OPERATIVA=UNIDAD_OPERATIVA.K_UNIDAD_OPERATIVA 
	AND		MOVIMIENTO_BANCO.K_ESTATUS_CONCILIACION=ESTATUS_CONCILIACION.K_ESTATUS_CONCILIACION 
	AND		MOVIMIENTO_BANCO.K_TIPO_LIBRO_INGRESOS=TIPO_LIBRO_INGRESOS.K_TIPO_LIBRO_INGRESOS
			-- =====================
	AND		MOVIMIENTO_BANCO.F_MOVIMIENTO_BANCO=F_OPE.F_TIEMPO_FECHA
	AND		MOVIMIENTO_BANCO.F_LIQ=F_LIQ.F_TIEMPO_FECHA
			-- =====================
--	AND		MOVIMIENTO_BANCO.F_OPERACION=@PP_F_MOVIMIENTO_BANCO
			-- =====================
	--	 K_ESTATUS_CONCILIACION = #0 PENDIENTE || #1 INVESTIGACION || #2 ACLARACION || #3 CONCILIADO || #4 NO CONCILIABLE
	AND		MOVIMIENTO_BANCO.K_ESTATUS_CONCILIACION<>3

--	AND		MOVIMIENTO_BANCO.K_CUENTA_BANCO=@PP_K_CUENTA_BANCO

	AND		( @PP_K_CUENTA_BANCO=-1		OR MOVIMIENTO_BANCO.K_CUENTA_BANCO=@PP_K_CUENTA_BANCO	)
	
	AND		MOVIMIENTO_BANCO.L_BORRADO=0
			-- =====================
	GROUP BY	YEAR(F_MOVIMIENTO_BANCO), MONTH(F_MOVIMIENTO_BANCO),
				D_CUENTA_BANCO, S_CUENTA_BANCO,
				D_ESTATUS_CONCILIACION, S_ESTATUS_CONCILIACION
	ORDER BY	YEAR(F_MOVIMIENTO_BANCO) DESC, MONTH(F_MOVIMIENTO_BANCO) DESC,
				D_CUENTA_BANCO, S_ESTATUS_CONCILIACION

	-- //////////////////////////////////////////////////////////////
GO







-- //////////////////////////////////////////////////////////////
-- // STORED PROCEDURE ---> 
-- //////////////////////////////////////////////////////////////


IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[PG_UP_CONCILIACION_INGRESO_AGREGAR]') AND type in (N'P', N'PC'))
	DROP PROCEDURE [dbo].[PG_UP_CONCILIACION_INGRESO_AGREGAR]
GO


CREATE PROCEDURE [dbo].[PG_UP_CONCILIACION_INGRESO_AGREGAR]
	@PP_L_DEBUG					INT,
	@PP_K_SISTEMA_EXE			INT,
	@PP_K_USUARIO_ACCION		INT,
	-- ===========================
	@PP_K_MOVIMIENTO_BANCO		INT,
	@PP_K_UNIDAD_OPERATIVA		INT,
	@PP_K_TIPO_LIBRO_INGRESOS	INT,
	@PP_F_OPERACION				DATE
/*
	@PP_K_TIPO_MOVIMIENTO_BANCO		INT,
	@PP_K_FORMA_MOVIMIENTO_BANCO				INT, 
	@PP_CIE_CLIENTE					VARCHAR(100),
	@PP_K_CUENTA_BANCO				INT,
	-- =============================
	@PP_F_OPERACION					DATE, 
	@PP_F_LIQ						DATE, 
	@PP_COD_DESCRIPCION				VARCHAR(500),
	@PP_REFERENCIA					VARCHAR(500), 
	@PP_MONTO_MOVIMIENTO			DECIMAL(19,4)
*/
AS

	DECLARE @VP_MENSAJE		VARCHAR(300)
	
	SET		@VP_MENSAJE		= ''

	-- /////////////////////////////////////////////////////////////////////
/*	
-- WIWI // HGF
	IF @VP_MENSAJE=''
		EXECUTE [dbo].[PG_RN_MOVIMIENTO_BANCO_UPDATE]		@PP_L_DEBUG, @PP_K_SISTEMA_EXE, @PP_K_USUARIO_ACCION,
															@PP_K_MOVIMIENTO_BANCO, 
															@OU_RESULTADO_VALIDACION = @VP_MENSAJE		OUTPUT
*/															
	-- /////////////////////////////////////////////////////////////////////

	IF @VP_MENSAJE=''
		BEGIN
	
		UPDATE	MOVIMIENTO_BANCO
		SET		
				-- =============================== CONCILIACION
				[K_UNIDAD_OPERATIVA]			= @PP_K_UNIDAD_OPERATIVA,
				[K_ESTATUS_CONCILIACION]		= 3,	--	K_ESTATUS_CONCILIACION = #0 PENDIENTE || #1 INVESTIGACION || #2 ACLARACION || #3 CONCILIADO || #4 NO CONCILIABLE
				[K_TIPO_LIBRO_INGRESOS]			= @PP_K_TIPO_LIBRO_INGRESOS,
				[F_OPERACION]					= @PP_F_OPERACION,	
				[K_USUARIO_CONCILIO]			= @PP_K_USUARIO_ACCION,
				[F_CONCILIACION]				= GETDATE(),
				-- ====================
				[F_CAMBIO]				= GETDATE(), 
				[K_USUARIO_CAMBIO]		= @PP_K_USUARIO_ACCION
		WHERE	K_MOVIMIENTO_BANCO=@PP_K_MOVIMIENTO_BANCO
		AND		L_BORRADO=0

		END

	-- /////////////////////////////////////////////////////////////////////
	
	IF @VP_MENSAJE<>''
		BEGIN

		SET		@VP_MENSAJE = 'No es posible [Conciliar] el [Movimiento Banco]: ' + @VP_MENSAJE 
		SET		@VP_MENSAJE = @VP_MENSAJE + ' ( '
		SET		@VP_MENSAJE = @VP_MENSAJE + '[#MOB.'+CONVERT(VARCHAR(10),@PP_K_MOVIMIENTO_BANCO)+']'
		SET		@VP_MENSAJE = @VP_MENSAJE + ' )'
		
		END
	
	SELECT	@VP_MENSAJE AS MENSAJE, @PP_K_MOVIMIENTO_BANCO AS CLAVE

	-- /////////////////////////////////////////////////////////////////////
GO





-- //////////////////////////////////////////////////////////////
-- // STORED PROCEDURE ---> 
-- //////////////////////////////////////////////////////////////


IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[PG_UP_CONCILIACION_INGRESO_QUITAR]') AND type in (N'P', N'PC'))
	DROP PROCEDURE [dbo].[PG_UP_CONCILIACION_INGRESO_QUITAR]
GO


CREATE PROCEDURE [dbo].[PG_UP_CONCILIACION_INGRESO_QUITAR]
	@PP_L_DEBUG					INT,
	@PP_K_SISTEMA_EXE			INT,
	@PP_K_USUARIO_ACCION		INT,
	-- ===========================
	@PP_K_MOVIMIENTO_BANCO		INT
AS

	DECLARE @VP_MENSAJE		VARCHAR(300)
	
	SET		@VP_MENSAJE		= ''

	-- /////////////////////////////////////////////////////////////////////
/*	
-- WIWI // HGF
	IF @VP_MENSAJE=''
		EXECUTE [dbo].[PG_RN_MOVIMIENTO_BANCO_UPDATE]		@PP_L_DEBUG, @PP_K_SISTEMA_EXE, @PP_K_USUARIO_ACCION,
															@PP_K_MOVIMIENTO_BANCO, 
															@OU_RESULTADO_VALIDACION = @VP_MENSAJE		OUTPUT
*/															
	-- /////////////////////////////////////////////////////////////////////

	IF @VP_MENSAJE=''
		BEGIN
	
		UPDATE	MOVIMIENTO_BANCO
		SET		
				-- =============================== CONCILIACION
		--		[K_UNIDAD_OPERATIVA]			= NULL	DEFAULT 0,
				[K_ESTATUS_CONCILIACION]		=  0,	--	K_ESTATUS_CONCILIACION = #0 PENDIENTE || #1 INVESTIGACION || #2 ACLARACION || #3 CONCILIADO || #4 NO CONCILIABLE
		--		[K_TIPO_LIBRO_INGRESOS]			= NULL	DEFAULT 0,
		--		[F_OPERACION]					= NULL,	
		--		[K_USUARIO_CONCILIO]			= NULL,
		--		[F_CONCILIACION]				= NULL,
				-- ====================
				[F_CAMBIO]				= GETDATE(), 
				[K_USUARIO_CAMBIO]		= @PP_K_USUARIO_ACCION
		WHERE	K_MOVIMIENTO_BANCO=@PP_K_MOVIMIENTO_BANCO
		AND		L_BORRADO=0

		END

	-- /////////////////////////////////////////////////////////////////////
	
	IF @VP_MENSAJE<>''
		BEGIN
		
		SET		@VP_MENSAJE = 'No es posible [Des/Conciliar] el [Movimiento Banco]: ' + @VP_MENSAJE 
		SET		@VP_MENSAJE = @VP_MENSAJE + ' ( '
		SET		@VP_MENSAJE = @VP_MENSAJE + '[#MOB.'+CONVERT(VARCHAR(10),@PP_K_MOVIMIENTO_BANCO)+']'
		SET		@VP_MENSAJE = @VP_MENSAJE + ' )'
	
		END

	-- ==========================

	SELECT	@VP_MENSAJE AS MENSAJE, @PP_K_MOVIMIENTO_BANCO AS CLAVE

	-- /////////////////////////////////////////////////////////////////////
GO





-- //////////////////////////////////////////////////////////////
-- // STORED PROCEDURE ---> 
-- //////////////////////////////////////////////////////////////


IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[PG_UP_CONCILIACION_INGRESO_FLAG]') AND type in (N'P', N'PC'))
	DROP PROCEDURE [dbo].[PG_UP_CONCILIACION_INGRESO_FLAG]
GO


CREATE PROCEDURE [dbo].[PG_UP_CONCILIACION_INGRESO_FLAG]
	@PP_L_DEBUG					INT,
	@PP_K_SISTEMA_EXE			INT,
	@PP_K_USUARIO_ACCION		INT,
	-- ===========================
	@PP_K_MOVIMIENTO_BANCO		INT,
	@PP_K_ESTATUS_CONCILIACION	INT
AS

	DECLARE @VP_MENSAJE		VARCHAR(300)
	
	SET		@VP_MENSAJE		= ''

	-- /////////////////////////////////////////////////////////////////////
/*	
-- WIWI // HGF
	IF @VP_MENSAJE=''
		EXECUTE [dbo].[PG_RN_MOVIMIENTO_BANCO_UPDATE]		@PP_L_DEBUG, @PP_K_SISTEMA_EXE, @PP_K_USUARIO_ACCION,
															@PP_K_MOVIMIENTO_BANCO, 
															@OU_RESULTADO_VALIDACION = @VP_MENSAJE		OUTPUT
*/															
	-- /////////////////////////////////////////////////////////////////////

	IF @VP_MENSAJE=''
		BEGIN
	
		UPDATE	MOVIMIENTO_BANCO
		SET		
				-- =============================== CONCILIACION
		--		[K_UNIDAD_OPERATIVA]			= NULL	DEFAULT 0,
			--	 K_ESTATUS_CONCILIACION = #0 PENDIENTE || #1 INVESTIGACION || #2 ACLARACION || #3 CONCILIADO || #4 NO CONCILIABLE
				[K_ESTATUS_CONCILIACION]		=  @PP_K_ESTATUS_CONCILIACION,	
		--		[K_TIPO_LIBRO_INGRESOS]			= NULL	DEFAULT 0,
		--		[F_OPERACION]					= NULL,	
		--		[K_USUARIO_CONCILIO]			= NULL,
		--		[F_CONCILIACION]				= NULL,
				-- ====================
				[F_CAMBIO]				= GETDATE(), 
				[K_USUARIO_CAMBIO]		= @PP_K_USUARIO_ACCION
		WHERE	K_MOVIMIENTO_BANCO=@PP_K_MOVIMIENTO_BANCO
		AND		L_BORRADO=0

		END

	-- /////////////////////////////////////////////////////////////////////
	
	IF @VP_MENSAJE<>''
		BEGIN
		
		SET		@VP_MENSAJE = 'No es posible [Flag/Conciliar] el [Movimiento Banco]: ' + @VP_MENSAJE 
		SET		@VP_MENSAJE = @VP_MENSAJE + ' ( '
		SET		@VP_MENSAJE = @VP_MENSAJE + '[#MOB.'+CONVERT(VARCHAR(10),@PP_K_MOVIMIENTO_BANCO)+']'
		SET		@VP_MENSAJE = @VP_MENSAJE + ' )'
	
		END

	-- ==========================

	SELECT	@VP_MENSAJE AS MENSAJE, @PP_K_MOVIMIENTO_BANCO AS CLAVE

	-- /////////////////////////////////////////////////////////////////////
GO




-- ************************************************************************************************
-- ************************************************************************************************
-- ************************************************************************************************


/*

-- //////////////////////////////////////////////////////////////
-- // STORED PROCEDURE --->  LISTADO
-- //////////////////////////////////////////////////////////////
--	EXECUTE [dbo].[PG_LI_MOVIMIENTO_BANCO]	0,0,69,		0,'',		-1,-1,-1,	NULL, NULL


IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[PG_UP_MOVIMIENTO_BANCO_PAGO_APLICADO]') AND type in (N'P', N'PC'))
	DROP PROCEDURE [dbo].[PG_UP_MOVIMIENTO_BANCO_PAGO_APLICADO]
GO	


CREATE PROCEDURE [dbo].[PG_UP_MOVIMIENTO_BANCO_PAGO_APLICADO]
	@PP_L_DEBUG				INT,
	@PP_K_SISTEMA_EXE		INT,
	@PP_K_USUARIO_ACCION	INT,
	-- ===========================
	@PP_K_SOLICITUD			INT,
	@PP_FECHA_PAGO			DATE,
	@PP_K_MOVIMIENTO_BANCO	INT
AS

	-- K_ESTATUS_MOVIMIENTO_BANCO	
	-- 1 REPORTADO // 2 PAGO POR APLICAR // 3 APLICADO A COBRANZA // 4 CANCELADO
	
	UPDATE	MOVIMIENTO_BANCO
	SET		
			K_ESTATUS_MOVIMIENTO_BANCO = 3
	WHERE	K_MOVIMIENTO_BANCO=@PP_K_MOVIMIENTO_BANCO
	AND		L_BORRADO=0
	
GO





-- //////////////////////////////////////////////////////////////
-- // STORED PROCEDURE ---> SEEK 
-- //////////////////////////////////////////////////////////////

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[PG_SK_MOVIMIENTO_BANCO]') AND type in (N'P', N'PC'))
	DROP PROCEDURE [dbo].[PG_SK_MOVIMIENTO_BANCO]
GO	

CREATE PROCEDURE [dbo].[PG_SK_MOVIMIENTO_BANCO]
	@PP_L_DEBUG						INT,
	@PP_K_SISTEMA_EXE				INT,
	@PP_K_USUARIO_ACCION			INT,
	-- ===========================
	@PP_K_MOVIMIENTO_BANCO			INT
AS			

	DECLARE @VP_MENSAJE		VARCHAR(300)
	
	SET		@VP_MENSAJE		= ''
	
	-- ///////////////////////////////////////////

	IF @VP_MENSAJE=''
		EXECUTE [dbo].[PG_RN_DATA_ACCESO_SELECT]	@PP_L_DEBUG, @PP_K_SISTEMA_EXE, @PP_K_USUARIO_ACCION,	
													8, -- @PP_K_DATA_SISTEMA,	
													@OU_RESULTADO_VALIDACION = @VP_MENSAJE		OUTPUT
	-- ///////////////////////////////////////////

	DECLARE @VP_N_LINEAS	INT = 1000
	
	IF NOT (@VP_MENSAJE='')
		SET @VP_N_LINEAS = 0

	-- ///////////////////////////////////////////

	SELECT	TOP ( @VP_N_LINEAS )		
			MOVIMIENTO_BANCO.*,
			D_TIPO_MOVIMIENTO_BANCO, D_ESTATUS_MOVIMIENTO_BANCO,
			S_TIPO_MOVIMIENTO_BANCO, S_ESTATUS_MOVIMIENTO_BANCO,
			CUENTA_BANCO.CUENTA, D_FORMA_MOVIMIENTO_BANCO
	FROM	MOVIMIENTO_BANCO, 
			TIPO_MOVIMIENTO_BANCO, ESTATUS_MOVIMIENTO_BANCO,
			CUENTA_BANCO, FORMA_MOVIMIENTO_BANCO
	WHERE	MOVIMIENTO_BANCO.K_TIPO_MOVIMIENTO_BANCO=TIPO_MOVIMIENTO_BANCO.K_TIPO_MOVIMIENTO_BANCO
	AND		MOVIMIENTO_BANCO.K_ESTATUS_MOVIMIENTO_BANCO=ESTATUS_MOVIMIENTO_BANCO.K_ESTATUS_MOVIMIENTO_BANCO
	AND		MOVIMIENTO_BANCO.K_TIPO_MOVIMIENTO_BANCO=TIPO_MOVIMIENTO_BANCO.K_TIPO_MOVIMIENTO_BANCO
	AND		MOVIMIENTO_BANCO.K_CUENTA_BANCO=CUENTA_BANCO.K_CUENTA_BANCO
	AND		MOVIMIENTO_BANCO.K_FORMA_MOVIMIENTO_BANCO=FORMA_MOVIMIENTO_BANCO.K_FORMA_MOVIMIENTO_BANCO
	AND		MOVIMIENTO_BANCO.K_MOVIMIENTO_BANCO=@PP_K_MOVIMIENTO_BANCO
	AND		MOVIMIENTO_BANCO.L_BORRADO=0
			-- =====================
	ORDER BY K_MOVIMIENTO_BANCO

	-- //////////////////////////////////////////////////////////////
GO



-- //////////////////////////////////////////////////////////////
-- // STORED PROCEDURE ---> 
-- //////////////////////////////////////////////////////////////

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[PG_IN_MOVIMIENTO_BANCO_SQL]') AND type in (N'P', N'PC'))
	DROP PROCEDURE [dbo].[PG_IN_MOVIMIENTO_BANCO_SQL]
GO


CREATE PROCEDURE [dbo].[PG_IN_MOVIMIENTO_BANCO_SQL] 
	@PP_L_DEBUG						INT,
	@PP_K_SISTEMA_EXE				INT,
	@PP_K_USUARIO_ACCION			INT,
	-- ===========================
	@PP_K_MOVIMIENTO_BANCO			INT,
	@PP_K_TIPO_MOVIMIENTO_BANCO		INT,
	@VP_K_ESTATUS_MOVIMIENTO_BANCO	INT,
	@PP_K_FORMA_MOVIMIENTO_BANCO				INT, 
	@VP_L_CAPTURA_MANUAL			INT,
	@PP_CIE_CLIENTE					VARCHAR(100),
	@PP_K_CUENTA_BANCO				INT,
	-- =============================
	@PP_F_OPERACION					DATE, 
	@PP_F_LIQ						DATE, 
	@PP_COD_DESCRIPCION				VARCHAR(500),
	@PP_REFERENCIA					VARCHAR(500), 
	@PP_MONTO_MOVIMIENTO			DECIMAL(19,4),
	@PP_SALDO						DECIMAL(19,4)
AS			

	INSERT INTO [MOVIMIENTO_BANCO]	
			(	[K_MOVIMIENTO_BANCO],
				[K_TIPO_MOVIMIENTO_BANCO], [K_ESTATUS_MOVIMIENTO_BANCO],
				[K_FORMA_MOVIMIENTO_BANCO], [L_CAPTURA_MANUAL], 
				[CIE_CLIENTE], [K_CUENTA_BANCO],
				-- =============================
				[F_OPERACION], [F_LIQ], [COD_DESCRIPCION],
				[REFERENCIA], [MONTO_MOVIMIENTO],
				[SALDO],			
				-- ===========================
				[K_USUARIO_ALTA], [F_ALTA], [K_USUARIO_CAMBIO], [F_CAMBIO],
				[L_BORRADO], [K_USUARIO_BAJA], [F_BAJA]  )	
			VALUES
			(	@PP_K_MOVIMIENTO_BANCO,
				@PP_K_TIPO_MOVIMIENTO_BANCO, @VP_K_ESTATUS_MOVIMIENTO_BANCO,
				@PP_K_FORMA_MOVIMIENTO_BANCO, @VP_L_CAPTURA_MANUAL,
				@PP_CIE_CLIENTE, @PP_K_CUENTA_BANCO,
				-- =============================
				@PP_F_OPERACION, @PP_F_LIQ, @PP_COD_DESCRIPCION,
				@PP_REFERENCIA, @PP_MONTO_MOVIMIENTO,
				@PP_SALDO,				
				-- ===========================
				@PP_K_USUARIO_ACCION, GETDATE(), @PP_K_USUARIO_ACCION, GETDATE(),
				0, NULL, NULL )

	-- //////////////////////////////////////////////////////////////
GO




-- //////////////////////////////////////////////////////////////
-- // STORED PROCEDURE ---> 
-- //////////////////////////////////////////////////////////////

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[PG_IN_MOVIMIENTO_BANCO]') AND type in (N'P', N'PC'))
	DROP PROCEDURE [dbo].[PG_IN_MOVIMIENTO_BANCO]
GO


CREATE PROCEDURE [dbo].[PG_IN_MOVIMIENTO_BANCO] 
	-- ESTE SP ES PARA LA CAPTURA DE MOVIMIENTOS MANUAL,
	-- PARA LOS DE XML SE USA OTRO.
	@PP_L_DEBUG						INT,
	@PP_K_SISTEMA_EXE				INT,
	@PP_K_USUARIO_ACCION			INT,
	-- ===========================
	@PP_K_TIPO_MOVIMIENTO_BANCO		INT,
	@PP_K_FORMA_MOVIMIENTO_BANCO				INT, 
	@PP_CIE_CLIENTE					VARCHAR(100),
	@PP_K_CUENTA_BANCO				INT,
	-- =============================
	@PP_F_OPERACION					DATE, 
	@PP_F_LIQ						DATE, 
	@PP_COD_DESCRIPCION				VARCHAR(500),
	@PP_REFERENCIA					VARCHAR(500), 
	@PP_MONTO_MOVIMIENTO			DECIMAL(19,4)
AS			

	DECLARE @VP_MENSAJE		VARCHAR(300)
	
	SET		@VP_MENSAJE		= ''

	-- /////////////////////////////////////////////////////////////////////
	IF @VP_MENSAJE=''
		EXECUTE [dbo].[PG_RN_MOVIMIENTO_BANCO_INSERT]		@PP_L_DEBUG, @PP_K_SISTEMA_EXE, @PP_K_USUARIO_ACCION,
															@PP_K_CUENTA_BANCO, @PP_K_CUENTA_BANCO,
															@OU_RESULTADO_VALIDACION = @VP_MENSAJE		OUTPUT
														
	-- /////////////////////////////////////////////////////////////////////

	DECLARE @VP_K_MOVIMIENTO_BANCO			INT = 0

	-- /////////////////////////////////////////////////////////////////////
	
	IF @VP_MENSAJE=''
		BEGIN

		EXECUTE [dbo].[PG_SK_CATALOGO_K_MAX_GET]	@PP_L_DEBUG, @PP_K_SISTEMA_EXE,
													'MOVIMIENTO_BANCO', 
													@OU_K_TABLA_DISPONIBLE = @VP_K_MOVIMIENTO_BANCO			OUTPUT
		-- ================================

		DECLARE @VP_L_CAPTURA_MANUAL	INT
	
		SET		@VP_L_CAPTURA_MANUAL = 1

		-- ================================
												
		DECLARE @VP_K_ESTATUS_MOVIMIENTO_BANCO	INT
	
		-- K_TIPO_MOVIMIENTO_BANCO		
		-- AFECTAN PRESTAMOS >>>>	1 DESCUENTO-CONDONACION	// 101 PAGO
		-- 102 DEPOSITO		-- 201 RETIRO // 202 COMISION
		-- K_ESTATUS_MOVIMIENTO_BANCO	
		-- 1 REPORTADO // 2 PAGO POR APLICAR // 3 APLICADO A COBRANZA // 4 CANCELADO
		IF @PP_K_TIPO_MOVIMIENTO_BANCO IN ( 1, 101 ) 
			SET	 @VP_K_ESTATUS_MOVIMIENTO_BANCO = 2		-- K_ESTATUS_MOVIMIENTO_BANCO = 2 PAGO POR APLICAR
		ELSE
			SET	 @VP_K_ESTATUS_MOVIMIENTO_BANCO = 1		-- K_ESTATUS_MOVIMIENTO_BANCO = 1 REPORTADO // 2 PAGO POR APLICAR

		-- =======================================

		DECLARE @VP_SALDO		DECIMAL (19,4)

		SET		@VP_SALDO = 0

		-- =======================================
		
		EXECUTE [dbo].[PG_IN_MOVIMIENTO_BANCO_SQL]	@PP_L_DEBUG, @PP_K_SISTEMA_EXE, @PP_K_USUARIO_ACCION,
													-- ===========================
													@VP_K_MOVIMIENTO_BANCO, @PP_K_TIPO_MOVIMIENTO_BANCO, @VP_K_ESTATUS_MOVIMIENTO_BANCO,
													@PP_K_FORMA_MOVIMIENTO_BANCO, @VP_L_CAPTURA_MANUAL, @PP_CIE_CLIENTE, @PP_K_CUENTA_BANCO,
													-- =============================
													@PP_F_OPERACION, @PP_F_LIQ, @PP_COD_DESCRIPCION,
													@PP_REFERENCIA, @PP_MONTO_MOVIMIENTO, @VP_SALDO
		END

-- /////////////////////////////////////////////////////////////////////
	
	IF @VP_MENSAJE<>''
		BEGIN
		
		SET		@VP_MENSAJE = 'No es posible [Crear] el [MovimientoBanco]: ' + @VP_MENSAJE 
		SET		@VP_MENSAJE = @VP_MENSAJE + ' ( '
		SET		@VP_MENSAJE = @VP_MENSAJE + '[#MOB.'+CONVERT(VARCHAR(10),@VP_K_MOVIMIENTO_BANCO)+']'
		SET		@VP_MENSAJE = @VP_MENSAJE + ' )'

		SELECT	@VP_MENSAJE AS MENSAJE, @VP_K_MOVIMIENTO_BANCO AS CLAVE
		
		END
	ELSE
		SELECT	@VP_MENSAJE AS MENSAJE, @VP_K_MOVIMIENTO_BANCO AS CLAVE

	-- //////////////////////////////////////////////////////////////
GO




-- //////////////////////////////////////////////////////////////
-- // STORED PROCEDURE ---> 
-- //////////////////////////////////////////////////////////////

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[PG_IN_MOVIMIENTO_BANCO_X_K_SOLICITUD]') AND type in (N'P', N'PC'))
	DROP PROCEDURE [dbo].[PG_IN_MOVIMIENTO_BANCO_X_K_SOLICITUD]
GO


CREATE PROCEDURE [dbo].[PG_IN_MOVIMIENTO_BANCO_X_K_SOLICITUD] 
	@PP_L_DEBUG						INT,
	@PP_K_SISTEMA_EXE				INT,
	@PP_K_USUARIO_ACCION			INT,
	-- ===========================
	@PP_K_SOLICITUD					INT,
	@PP_K_FORMA_MOVIMIENTO_BANCO				INT, 
	-- =============================
	@PP_F_OPERACION					DATE, 
	@PP_MONTO_MOVIMIENTO			DECIMAL(19,4)
AS			

	DECLARE @VP_K_TIPO_MOVIMIENTO_BANCO		INT = 101		-- 101	PAGO
	DECLARE @VP_F_LIQ						DATE = GETDATE() 	
	DECLARE @VP_COD_DESCRIPCION				VARCHAR(500) = 'PAGO MANUAL DESDE [MO-PRE]'
	DECLARE @VP_REFERENCIA					VARCHAR(500) = 'N/A'

	-- =====================

	DECLARE @VP_CIE_CLIENTE			VARCHAR(100)

	SELECT	@VP_CIE_CLIENTE =		CIE_CLIENTE
									FROM	SOLICITUD, CLIENTE
									WHERE	SOLICITUD.K_CLIENTE=CLIENTE.K_CLIENTE
									AND		SOLICITUD.K_SOLICITUD=@PP_K_SOLICITUD
	-- =====================

	DECLARE @VP_K_CUENTA_BANCO		INT
	
	SELECT	@VP_K_CUENTA_BANCO =	MIN(K_CUENTA_BANCO)
									FROM	SOLICITUD, PLANTA, EMPRESA, CUENTA_BANCO
									WHERE	SOLICITUD.K_SOLICITUD=@PP_K_SOLICITUD
									AND		SOLICITUD.K_PLANTA=PLANTA.K_PLANTA
									AND		PLANTA.K_EMPRESA=EMPRESA.K_EMPRESA
									AND		EMPRESA.K_EMPRESA=CUENTA_BANCO.K_EMPRESA
	-- =====================

	EXECUTE [dbo].[PG_IN_MOVIMIENTO_BANCO]	@PP_L_DEBUG, @PP_K_SISTEMA_EXE, @PP_K_USUARIO_ACCION,
											@VP_K_TIPO_MOVIMIENTO_BANCO, @PP_K_FORMA_MOVIMIENTO_BANCO, @VP_CIE_CLIENTE, @VP_K_CUENTA_BANCO,
											@PP_F_OPERACION, @VP_F_LIQ, @VP_COD_DESCRIPCION, @VP_REFERENCIA, @PP_MONTO_MOVIMIENTO

	-- //////////////////////////////////////////////////////////////
GO






-- //////////////////////////////////////////////////////////////
-- // STORED PROCEDURE ---> 
-- //////////////////////////////////////////////////////////////

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[PG_IN_MOVIMIENTO_BANCO_NEUTRO_X_K_SOLICITUD]') AND type in (N'P', N'PC'))
	DROP PROCEDURE [dbo].[PG_IN_MOVIMIENTO_BANCO_NEUTRO_X_K_SOLICITUD]
GO


CREATE PROCEDURE [dbo].[PG_IN_MOVIMIENTO_BANCO_NEUTRO_X_K_SOLICITUD] 
	@PP_L_DEBUG						INT,
	@PP_K_SISTEMA_EXE				INT,
	@PP_K_USUARIO_ACCION			INT,
	-- ===========================
	@PP_K_SOLICITUD					INT,
	-- =============================
	@PP_F_OPERACION					DATE, 
	@PP_MONTO_MOVIMIENTO			DECIMAL(19,4),
	@OU_K_MOVIMIENTO_BANCO			INT			OUTPUT
AS			

	DECLARE @VP_K_TIPO_MOVIMIENTO_BANCO		INT = 2			-- 2	CONDONACION
	DECLARE @VP_K_ESTATUS_MOVIMIENTO_BANCO	INT = 2			-- 2	PAGO X APLICAR
	DECLARE @VP_F_LIQ						DATE = GETDATE() 	
	DECLARE @VP_COD_DESCRIPCION				VARCHAR(500) = 'CONDONACION MANUAL DESDE [MO-PRE]'
	DECLARE @VP_REFERENCIA					VARCHAR(500) = 'N/A'
	DECLARE @VP_K_FORMA_MOVIMIENTO_BANCO				INT = 4			-- CONDONACION, 
	DECLARE @VP_L_CAPTURA_MANUAL			INT = 1
	DECLARE @VP_SALDO						DECIMAL(19,4) = 0

	-- =====================

	DECLARE @VP_CIE_CLIENTE			VARCHAR(100)

	SELECT	@VP_CIE_CLIENTE =		CIE_CLIENTE
									FROM	SOLICITUD, CLIENTE
									WHERE	SOLICITUD.K_CLIENTE=CLIENTE.K_CLIENTE
									AND		SOLICITUD.K_SOLICITUD=@PP_K_SOLICITUD
	-- =====================

	DECLARE @VP_K_CUENTA_BANCO		INT
	
	SELECT	@VP_K_CUENTA_BANCO =	MIN(K_CUENTA_BANCO)
									FROM	SOLICITUD, PLANTA, EMPRESA, CUENTA_BANCO
									WHERE	SOLICITUD.K_SOLICITUD=@PP_K_SOLICITUD
									AND		SOLICITUD.K_PLANTA=PLANTA.K_PLANTA
									AND		PLANTA.K_EMPRESA=EMPRESA.K_EMPRESA
									AND		EMPRESA.K_EMPRESA=CUENTA_BANCO.K_EMPRESA
	-- =====================
	
	DECLARE @VP_K_MOVIMIENTO_BANCO			INT = 0

	EXECUTE [dbo].[PG_SK_CATALOGO_K_MAX_GET]	@PP_L_DEBUG, @PP_K_SISTEMA_EXE,
												'MOVIMIENTO_BANCO', 
												@OU_K_TABLA_DISPONIBLE = @VP_K_MOVIMIENTO_BANCO			OUTPUT
	-- ================================

	EXECUTE [dbo].[PG_IN_MOVIMIENTO_BANCO_SQL]	@PP_L_DEBUG, @PP_K_SISTEMA_EXE, @PP_K_USUARIO_ACCION,
												-- ===========================
												@VP_K_MOVIMIENTO_BANCO, @VP_K_TIPO_MOVIMIENTO_BANCO, @VP_K_ESTATUS_MOVIMIENTO_BANCO,
												@VP_K_FORMA_MOVIMIENTO_BANCO, @VP_L_CAPTURA_MANUAL, @VP_CIE_CLIENTE, @VP_K_CUENTA_BANCO,
												-- =============================
												@PP_F_OPERACION, @VP_F_LIQ, @VP_COD_DESCRIPCION,
												@VP_REFERENCIA, @PP_MONTO_MOVIMIENTO, @VP_SALDO
	-- =====================================
	 
	SET @OU_K_MOVIMIENTO_BANCO = @VP_K_MOVIMIENTO_BANCO

	-- //////////////////////////////////////////////////////////////
GO





-- //////////////////////////////////////////////////////////////
-- // STORED PROCEDURE ---> 
-- //////////////////////////////////////////////////////////////


IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[PG_UP_MOVIMIENTO_BANCO]') AND type in (N'P', N'PC'))
	DROP PROCEDURE [dbo].[PG_UP_MOVIMIENTO_BANCO]
GO


CREATE PROCEDURE [dbo].[PG_UP_MOVIMIENTO_BANCO]
	@PP_L_DEBUG					INT,
	@PP_K_SISTEMA_EXE			INT,
	@PP_K_USUARIO_ACCION		INT,
	-- ===========================
	@PP_K_MOVIMIENTO_BANCO			INT,
	@PP_K_TIPO_MOVIMIENTO_BANCO		INT,
	@PP_K_FORMA_MOVIMIENTO_BANCO				INT, 
	@PP_CIE_CLIENTE					VARCHAR(100),
	@PP_K_CUENTA_BANCO				INT,
	-- =============================
	@PP_F_OPERACION					DATE, 
	@PP_F_LIQ						DATE, 
	@PP_COD_DESCRIPCION				VARCHAR(500),
	@PP_REFERENCIA					VARCHAR(500), 
	@PP_MONTO_MOVIMIENTO			DECIMAL(19,4)
AS

	DECLARE @VP_MENSAJE		VARCHAR(300)
	
	SET		@VP_MENSAJE		= ''

	-- /////////////////////////////////////////////////////////////////////

	IF @VP_MENSAJE=''
		EXECUTE [dbo].[PG_RN_MOVIMIENTO_BANCO_UPDATE]		@PP_L_DEBUG, @PP_K_SISTEMA_EXE, @PP_K_USUARIO_ACCION,
															@PP_K_MOVIMIENTO_BANCO, 
															@OU_RESULTADO_VALIDACION = @VP_MENSAJE		OUTPUT
															
	-- /////////////////////////////////////////////////////////////////////

	IF @VP_MENSAJE=''
		BEGIN
	
		UPDATE	MOVIMIENTO_BANCO
		SET		
				K_TIPO_MOVIMIENTO_BANCO = @PP_K_TIPO_MOVIMIENTO_BANCO,
				K_FORMA_MOVIMIENTO_BANCO			= @PP_K_FORMA_MOVIMIENTO_BANCO, 
				CIE_CLIENTE				= @PP_CIE_CLIENTE,
				K_CUENTA_BANCO			= @PP_K_CUENTA_BANCO,
				-- =============================
				F_OPERACION				= @PP_F_OPERACION, 
				F_LIQ					= @PP_F_LIQ, 
				COD_DESCRIPCION			= @PP_COD_DESCRIPCION,
				REFERENCIA				= @PP_REFERENCIA,
				MONTO_MOVIMIENTO		= @PP_MONTO_MOVIMIENTO,
				-- ====================
				[F_CAMBIO]				= GETDATE(), 
				[K_USUARIO_CAMBIO]		= @PP_K_USUARIO_ACCION
		WHERE	K_MOVIMIENTO_BANCO=@PP_K_MOVIMIENTO_BANCO
		AND		L_BORRADO=0

		END

	-- /////////////////////////////////////////////////////////////////////
	
	IF @VP_MENSAJE<>''
		BEGIN
		
		SET		@VP_MENSAJE = 'No es posible [Actualizar] el [Movimiento Banco]: ' + @VP_MENSAJE 
		SET		@VP_MENSAJE = @VP_MENSAJE + ' ( '
		SET		@VP_MENSAJE = @VP_MENSAJE + '[#MOB.'+CONVERT(VARCHAR(10),@PP_K_MOVIMIENTO_BANCO)+']'
		SET		@VP_MENSAJE = @VP_MENSAJE + ' )'

		SELECT	@VP_MENSAJE AS MENSAJE, @PP_K_MOVIMIENTO_BANCO AS CLAVE
		
		END
	ELSE
		SELECT	@VP_MENSAJE AS MENSAJE, @PP_K_MOVIMIENTO_BANCO AS CLAVE

	-- /////////////////////////////////////////////////////////////////////
GO



-- //////////////////////////////////////////////////////////////
-- // STORED PROCEDURE ---> DELETE / FICHA
-- //////////////////////////////////////////////////////////////


IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[PG_DL_MOVIMIENTO_BANCO]') AND type in (N'P', N'PC'))
	DROP PROCEDURE [dbo].[PG_DL_MOVIMIENTO_BANCO]
GO


CREATE PROCEDURE [dbo].[PG_DL_MOVIMIENTO_BANCO]
	@PP_L_DEBUG					INT,
	@PP_K_SISTEMA_EXE			INT,
	@PP_K_USUARIO_ACCION		INT,
	-- ===========================
	@PP_K_MOVIMIENTO_BANCO		INT
AS

	DECLARE @VP_MENSAJE		VARCHAR(300)
	
	SET		@VP_MENSAJE		= ''

	-- /////////////////////////////////////////////////////////////////////
	
	IF @VP_MENSAJE=''
		EXECUTE [dbo].[PG_RN_MOVIMIENTO_BANCO_DELETE]		@PP_L_DEBUG, @PP_K_SISTEMA_EXE, @PP_K_USUARIO_ACCION,
															@PP_K_MOVIMIENTO_BANCO, 
															@OU_RESULTADO_VALIDACION = @VP_MENSAJE		OUTPUT
															
	-- /////////////////////////////////////////////////////////////////////

	IF @VP_MENSAJE=''
		BEGIN
	
		UPDATE	MOVIMIENTO_BANCO
		SET		
				[L_BORRADO]				= 1,
				-- ====================
				[F_BAJA]				= GETDATE(), 
				[K_USUARIO_BAJA]		= @PP_K_USUARIO_ACCION
		WHERE	K_MOVIMIENTO_BANCO=@PP_K_MOVIMIENTO_BANCO
		AND		L_BORRADO=0

		END

	-- /////////////////////////////////////////////////////////////////////
	
	IF @VP_MENSAJE<>''
		BEGIN
		
		SET		@VP_MENSAJE = 'No es posible [Borrar] el [Movimiento Banco]: ' + @VP_MENSAJE 
		SET		@VP_MENSAJE = @VP_MENSAJE + ' ( '
		SET		@VP_MENSAJE = @VP_MENSAJE + '[#MOB.'+CONVERT(VARCHAR(10),@PP_K_MOVIMIENTO_BANCO)+']'
		SET		@VP_MENSAJE = @VP_MENSAJE + ' )'

		SELECT	@VP_MENSAJE AS MENSAJE, @PP_K_MOVIMIENTO_BANCO AS CLAVE
		
		END
	ELSE
		SELECT	@VP_MENSAJE AS MENSAJE, @PP_K_MOVIMIENTO_BANCO AS CLAVE

	-- /////////////////////////////////////////////////////////////////////
GO

*/






-- *****************************************************************************	
-- *****************************************************************************	
-- *****************************************************************************	
-- *****************************************************************************	
