-- //////////////////////////////////////////////////////////////
-- // ARCHIVO:			
-- //////////////////////////////////////////////////////////////
-- // BASE DE DATOS:	PYF18_Finanzas
-- // MODULO:			MOVIMIENTOS BANCO
-- // OPERACION:		LIBERACION / TABLAS
-- //////////////////////////////////////////////////////////////
-- // Autor:			HECTOR A. GONZALEZ DE LA FUENTE
-- // Fecha creación:	18/SEP/2018
-- ////////////////////////////////////////////////////////////// 

USE [PYF18_Finanzas_V9999_R0]
GO

-- //////////////////////////////////////////////////////////////



-- //////////////////////////////////////////////////////////////
-- // DROPs
-- //////////////////////////////////////////////////////////////

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MOVIMIENTO_BANCO]') AND type in (N'U'))
	DROP TABLE [dbo].[MOVIMIENTO_BANCO] 
GO

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[FORMA_MOVIMIENTO_BANCO]') AND type in (N'U'))
	DROP TABLE [dbo].[FORMA_MOVIMIENTO_BANCO]
GO

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ESTATUS_MOVIMIENTO_BANCO]') AND type in (N'U'))
	DROP TABLE [dbo].[ESTATUS_MOVIMIENTO_BANCO]
GO

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TIPO_MOVIMIENTO_BANCO]') AND type in (N'U'))
	DROP TABLE [dbo].[TIPO_MOVIMIENTO_BANCO]
GO

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[CLASE_MOVIMIENTO_BANCO]') AND type in (N'U'))
	DROP TABLE [dbo].[CLASE_MOVIMIENTO_BANCO]
GO

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ESTATUS_CONCILIACION]') AND type in (N'U'))
	DROP TABLE [dbo].[ESTATUS_CONCILIACION]
GO




-- ///////////////////////////////////////////////////////////////
-- // ESTATUS_CONCILIACION
-- ///////////////////////////////////////////////////////////////
			

CREATE TABLE [dbo].[ESTATUS_CONCILIACION] (
	[K_ESTATUS_CONCILIACION]			INT NOT NULL,
	[D_ESTATUS_CONCILIACION]			VARCHAR (100) NOT NULL,
	[S_ESTATUS_CONCILIACION]			VARCHAR (10) NOT NULL,
	[O_ESTATUS_CONCILIACION]			INT NOT NULL,
	[C_ESTATUS_CONCILIACION]			VARCHAR (255) NOT NULL,
	[L_ESTATUS_CONCILIACION]			INT NOT NULL
) ON [PRIMARY]
GO


-- //////////////////////////////////////////////////////////////


ALTER TABLE [dbo].[ESTATUS_CONCILIACION]
	ADD CONSTRAINT [PK_ESTATUS_CONCILIACION]
		PRIMARY KEY CLUSTERED ([K_ESTATUS_CONCILIACION])
GO


CREATE UNIQUE NONCLUSTERED 
	INDEX [UN_ESTATUS_CONCILIACION_01_DESCRIPCION] 
	   ON [dbo].[ESTATUS_CONCILIACION] ( [D_ESTATUS_CONCILIACION] )
GO


ALTER TABLE [dbo].[ESTATUS_CONCILIACION] ADD 
	CONSTRAINT [FK_ESTATUS_CONCILIACION_01] 
		FOREIGN KEY ( [L_ESTATUS_CONCILIACION] ) 
		REFERENCES [dbo].[ESTATUS_ACTIVO] ( [K_ESTATUS_ACTIVO] )
GO


-- //////////////////////////////////////////////////////////////


IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[PG_CI_ESTATUS_CONCILIACION]') AND type in (N'P', N'PC'))
	DROP PROCEDURE [dbo].[PG_CI_ESTATUS_CONCILIACION]
GO


CREATE PROCEDURE [dbo].[PG_CI_ESTATUS_CONCILIACION]
	@PP_L_DEBUG								INT,
	@PP_K_SISTEMA_EXE						INT,
	@PP_K_ESTATUS_CONCILIACION		INT,
	@PP_D_ESTATUS_CONCILIACION		VARCHAR(100),
	@PP_S_ESTATUS_CONCILIACION		VARCHAR(10),
	@PP_O_ESTATUS_CONCILIACION		INT,
	@PP_C_ESTATUS_CONCILIACION		VARCHAR(255),
	@PP_L_ESTATUS_CONCILIACION		INT
AS
	
	INSERT INTO ESTATUS_CONCILIACION	
		(	K_ESTATUS_CONCILIACION,				D_ESTATUS_CONCILIACION, 
			S_ESTATUS_CONCILIACION,				O_ESTATUS_CONCILIACION,
			C_ESTATUS_CONCILIACION,
			L_ESTATUS_CONCILIACION				)		
	VALUES	
		(	@PP_K_ESTATUS_CONCILIACION,			@PP_D_ESTATUS_CONCILIACION,	
			@PP_S_ESTATUS_CONCILIACION,			@PP_O_ESTATUS_CONCILIACION,
			@PP_C_ESTATUS_CONCILIACION,
			@PP_L_ESTATUS_CONCILIACION			)

	-- =========================================================
GO

-- ///////////////////////////////////////////////////////////////


-- ===============================================
SET NOCOUNT ON
-- ===============================================

EXECUTE [dbo].[PG_CI_ESTATUS_CONCILIACION] 0, 0, 0, 'PENDIENTE',		'PENDN', 0, '', 1
EXECUTE [dbo].[PG_CI_ESTATUS_CONCILIACION] 0, 0, 1, 'INVESTIGACION',	'INVES', 1, '', 1
EXECUTE [dbo].[PG_CI_ESTATUS_CONCILIACION] 0, 0, 2, 'ACLARACION',		'ACLRA', 2, '', 1
EXECUTE [dbo].[PG_CI_ESTATUS_CONCILIACION] 0, 0, 3, 'CONCILIADO',		'CONCI', 3, '', 1
EXECUTE [dbo].[PG_CI_ESTATUS_CONCILIACION] 0, 0, 4, 'NO CONCILIABLE',	'NOCON', 4, '', 1
GO

-- ===============================================
SET NOCOUNT OFF
-- ===============================================



-- ///////////////////////////////////////////////////////////////
-- // CLASE_MOVIMIENTO_BANCO
-- ///////////////////////////////////////////////////////////////

CREATE TABLE [dbo].[CLASE_MOVIMIENTO_BANCO] (
	[K_CLASE_MOVIMIENTO_BANCO]			INT NOT NULL,
	[D_CLASE_MOVIMIENTO_BANCO]			VARCHAR (100) NOT NULL,
	[S_CLASE_MOVIMIENTO_BANCO]			VARCHAR (10) NOT NULL,
	[O_CLASE_MOVIMIENTO_BANCO]			INT NOT NULL,
	[C_CLASE_MOVIMIENTO_BANCO]			VARCHAR (255) NOT NULL,
	[L_CLASE_MOVIMIENTO_BANCO]			INT NOT NULL
) ON [PRIMARY]
GO


-- //////////////////////////////////////////////////////////////


ALTER TABLE [dbo].[CLASE_MOVIMIENTO_BANCO]
	ADD CONSTRAINT [PK_CLASE_MOVIMIENTO_BANCO]
		PRIMARY KEY CLUSTERED ([K_CLASE_MOVIMIENTO_BANCO])
GO


CREATE UNIQUE NONCLUSTERED 
	INDEX [UN_CLASE_MOVIMIENTO_BANCO_01_DESCRIPCION] 
	   ON [dbo].[CLASE_MOVIMIENTO_BANCO] ( [D_CLASE_MOVIMIENTO_BANCO] )
GO


ALTER TABLE [dbo].[CLASE_MOVIMIENTO_BANCO] ADD 
	CONSTRAINT [FK_CLASE_MOVIMIENTO_BANCO_01] 
		FOREIGN KEY ( [L_CLASE_MOVIMIENTO_BANCO] ) 
		REFERENCES [dbo].[ESTATUS_ACTIVO] ( [K_ESTATUS_ACTIVO] )
GO


-- //////////////////////////////////////////////////////////////


IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[PG_CI_CLASE_MOVIMIENTO_BANCO]') AND type in (N'P', N'PC'))
	DROP PROCEDURE [dbo].[PG_CI_CLASE_MOVIMIENTO_BANCO]
GO


CREATE PROCEDURE [dbo].[PG_CI_CLASE_MOVIMIENTO_BANCO]
	@PP_L_DEBUG							INT,
	@PP_K_SISTEMA_EXE					INT,
	@PP_K_CLASE_MOVIMIENTO_BANCO		INT,
	@PP_D_CLASE_MOVIMIENTO_BANCO		VARCHAR(100),
	@PP_S_CLASE_MOVIMIENTO_BANCO		VARCHAR(10),
	@PP_O_CLASE_MOVIMIENTO_BANCO		INT,
	@PP_C_CLASE_MOVIMIENTO_BANCO		VARCHAR(255),
	@PP_L_CLASE_MOVIMIENTO_BANCO		INT
AS
	
	INSERT INTO CLASE_MOVIMIENTO_BANCO
		(	K_CLASE_MOVIMIENTO_BANCO,			D_CLASE_MOVIMIENTO_BANCO, 
			S_CLASE_MOVIMIENTO_BANCO,			O_CLASE_MOVIMIENTO_BANCO,
			C_CLASE_MOVIMIENTO_BANCO,
			L_CLASE_MOVIMIENTO_BANCO			)		
	VALUES	
		(	@PP_K_CLASE_MOVIMIENTO_BANCO,		@PP_D_CLASE_MOVIMIENTO_BANCO,	
			@PP_S_CLASE_MOVIMIENTO_BANCO,		@PP_O_CLASE_MOVIMIENTO_BANCO,
			@PP_C_CLASE_MOVIMIENTO_BANCO,
			@PP_L_CLASE_MOVIMIENTO_BANCO		)

	-- =========================================================
GO


-- ///////////////////////////////////////////////////////////////


-- ===============================================
SET NOCOUNT ON
-- ===============================================

EXECUTE [dbo].[PG_CI_CLASE_MOVIMIENTO_BANCO] 0, 0, -1, 'CARGO',  'CRGO', 1, '', 1
EXECUTE [dbo].[PG_CI_CLASE_MOVIMIENTO_BANCO] 0, 0,  0, 'NEUTRO', 'NEUT', 1, '', 1
EXECUTE [dbo].[PG_CI_CLASE_MOVIMIENTO_BANCO] 0, 0,  1, 'ABONO',  'ABNO', 1, '', 1
GO

-- ===============================================
SET NOCOUNT OFF
-- ===============================================



-- ///////////////////////////////////////////////////////////////
-- //					TIPO_MOVIMIENTO_BANCO
-- ///////////////////////////////////////////////////////////////

CREATE TABLE [dbo].[TIPO_MOVIMIENTO_BANCO] (
	[K_TIPO_MOVIMIENTO_BANCO]			INT NOT NULL,
	[D_TIPO_MOVIMIENTO_BANCO]			VARCHAR (100) NOT NULL,
	[S_TIPO_MOVIMIENTO_BANCO]			VARCHAR (10) NOT NULL,
	[O_TIPO_MOVIMIENTO_BANCO]			INT NOT NULL,
	[C_TIPO_MOVIMIENTO_BANCO]			VARCHAR (255) NOT NULL,
	[L_TIPO_MOVIMIENTO_BANCO]			INT NOT NULL,
	[K_CLASE_MOVIMIENTO_BANCO]			INT NOT NULL
) ON [PRIMARY]
GO


-- //////////////////////////////////////////////////////////////


ALTER TABLE [dbo].[TIPO_MOVIMIENTO_BANCO]
	ADD CONSTRAINT [PK_TIPO_MOVIMIENTO_BANCO]
		PRIMARY KEY CLUSTERED ([K_TIPO_MOVIMIENTO_BANCO])
GO


CREATE UNIQUE NONCLUSTERED 
	INDEX [UN_TIPO_MOVIMIENTO_BANCO_01_DESCRIPCION] 
	   ON [dbo].[TIPO_MOVIMIENTO_BANCO] ( [D_TIPO_MOVIMIENTO_BANCO] )
GO


ALTER TABLE [dbo].[TIPO_MOVIMIENTO_BANCO] ADD 
	CONSTRAINT [FK_TIPO_MOVIMIENTO_BANCO_01] 
		FOREIGN KEY ( [L_TIPO_MOVIMIENTO_BANCO] ) 
		REFERENCES [dbo].[ESTATUS_ACTIVO] ( [K_ESTATUS_ACTIVO] ),
	CONSTRAINT [FK_TIPO_MOVIMIENTO_BANCO_02] 
		FOREIGN KEY ( [K_CLASE_MOVIMIENTO_BANCO] ) 
		REFERENCES [dbo].[CLASE_MOVIMIENTO_BANCO] ( [K_CLASE_MOVIMIENTO_BANCO] )
GO



-- //////////////////////////////////////////////////////////////


IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[PG_CI_TIPO_MOVIMIENTO_BANCO]') AND type in (N'P', N'PC'))
	DROP PROCEDURE [dbo].[PG_CI_TIPO_MOVIMIENTO_BANCO]
GO


CREATE PROCEDURE [dbo].[PG_CI_TIPO_MOVIMIENTO_BANCO]
	@PP_L_DEBUG							INT,
	@PP_K_SISTEMA_EXE					INT,
	@PP_K_TIPO_MOVIMIENTO_BANCO			INT,
	@PP_D_TIPO_MOVIMIENTO_BANCO			VARCHAR(100),
	@PP_S_TIPO_MOVIMIENTO_BANCO			VARCHAR(10),
	@PP_O_TIPO_MOVIMIENTO_BANCO			INT,
	@PP_C_TIPO_MOVIMIENTO_BANCO			VARCHAR(255),
	@PP_L_TIPO_MOVIMIENTO_BANCO			INT,
	@PP_K_CLASE_MOVIMIENTO_BANCO		INT		
AS

	INSERT INTO TIPO_MOVIMIENTO_BANCO
		(	K_TIPO_MOVIMIENTO_BANCO,				D_TIPO_MOVIMIENTO_BANCO, 
			S_TIPO_MOVIMIENTO_BANCO,				O_TIPO_MOVIMIENTO_BANCO,
			C_TIPO_MOVIMIENTO_BANCO,
			L_TIPO_MOVIMIENTO_BANCO,
			K_CLASE_MOVIMIENTO_BANCO				)
	VALUES	
		(	@PP_K_TIPO_MOVIMIENTO_BANCO,			@PP_D_TIPO_MOVIMIENTO_BANCO,	
			@PP_S_TIPO_MOVIMIENTO_BANCO,			@PP_O_TIPO_MOVIMIENTO_BANCO,
			@PP_C_TIPO_MOVIMIENTO_BANCO,
			@PP_L_TIPO_MOVIMIENTO_BANCO,
			@PP_K_CLASE_MOVIMIENTO_BANCO			)

	-- =========================================================
GO


-- ///////////////////////////////////////////////////////////////


-- ===============================================
SET NOCOUNT ON
-- ===============================================

EXECUTE [dbo].[PG_CI_TIPO_MOVIMIENTO_BANCO] 0, 0,  101, 'PAGO',				'PAGO',  101, '', 1,  1
EXECUTE [dbo].[PG_CI_TIPO_MOVIMIENTO_BANCO] 0, 0,  102, 'DEPOSITO',			'DEPST', 101, '', 1,  1

EXECUTE [dbo].[PG_CI_TIPO_MOVIMIENTO_BANCO] 0, 0,  001, 'DESCUENTO',		'DESCT', 001, '', 1,  0
EXECUTE [dbo].[PG_CI_TIPO_MOVIMIENTO_BANCO] 0, 0,  002, 'CONDONACION',		'CONDO', 002, '', 1,  0

EXECUTE [dbo].[PG_CI_TIPO_MOVIMIENTO_BANCO] 0, 0,  201, 'RETIRO',			'RETRO', 201, '', 1, -1
EXECUTE [dbo].[PG_CI_TIPO_MOVIMIENTO_BANCO] 0, 0,  202, 'COMISION',			'COMSN', 202, '', 1, -1
GO
-- ===============================================
SET NOCOUNT OFF
-- ===============================================



-- ///////////////////////////////////////////////////////////////
-- //				ESTATUS_MOVIMIENTO_BANCO				
-- ///////////////////////////////////////////////////////////////
			

CREATE TABLE [dbo].[ESTATUS_MOVIMIENTO_BANCO] (
	[K_ESTATUS_MOVIMIENTO_BANCO]			INT NOT NULL,
	[D_ESTATUS_MOVIMIENTO_BANCO]			VARCHAR (100) NOT NULL,
	[S_ESTATUS_MOVIMIENTO_BANCO]			VARCHAR (10) NOT NULL,
	[O_ESTATUS_MOVIMIENTO_BANCO]			INT NOT NULL,
	[C_ESTATUS_MOVIMIENTO_BANCO]			VARCHAR (255) NOT NULL,
	[L_ESTATUS_MOVIMIENTO_BANCO]			INT NOT NULL
) ON [PRIMARY]
GO


-- //////////////////////////////////////////////////////////////


ALTER TABLE [dbo].[ESTATUS_MOVIMIENTO_BANCO]
	ADD CONSTRAINT [PK_ESTATUS_MOVIMIENTO_BANCO]
		PRIMARY KEY CLUSTERED ([K_ESTATUS_MOVIMIENTO_BANCO])
GO


CREATE UNIQUE NONCLUSTERED 
	INDEX [UN_ESTATUS_MOVIMIENTO_BANCO_01_DESCRIPCION] 
	   ON [dbo].[ESTATUS_MOVIMIENTO_BANCO] ( [D_ESTATUS_MOVIMIENTO_BANCO] )
GO


ALTER TABLE [dbo].[ESTATUS_MOVIMIENTO_BANCO] ADD 
	CONSTRAINT [FK_ESTATUS_MOVIMIENTO_BANCO_01] 
		FOREIGN KEY ( [L_ESTATUS_MOVIMIENTO_BANCO] ) 
		REFERENCES [dbo].[ESTATUS_ACTIVO] ( [K_ESTATUS_ACTIVO] )
GO


-- //////////////////////////////////////////////////////////////


IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[PG_CI_ESTATUS_MOVIMIENTO_BANCO]') AND type in (N'P', N'PC'))
	DROP PROCEDURE [dbo].[PG_CI_ESTATUS_MOVIMIENTO_BANCO]
GO


CREATE PROCEDURE [dbo].[PG_CI_ESTATUS_MOVIMIENTO_BANCO]
	@PP_L_DEBUG							INT,
	@PP_K_SISTEMA_EXE					INT,
	@PP_K_ESTATUS_MOVIMIENTO_BANCO		INT,
	@PP_D_ESTATUS_MOVIMIENTO_BANCO		VARCHAR(100),
	@PP_S_ESTATUS_MOVIMIENTO_BANCO		VARCHAR(10),
	@PP_O_ESTATUS_MOVIMIENTO_BANCO		INT,
	@PP_C_ESTATUS_MOVIMIENTO_BANCO		VARCHAR(255),
	@PP_L_ESTATUS_MOVIMIENTO_BANCO		INT
AS
	
	INSERT INTO ESTATUS_MOVIMIENTO_BANCO	
		(	K_ESTATUS_MOVIMIENTO_BANCO,				D_ESTATUS_MOVIMIENTO_BANCO, 
			S_ESTATUS_MOVIMIENTO_BANCO,				O_ESTATUS_MOVIMIENTO_BANCO,
			C_ESTATUS_MOVIMIENTO_BANCO,
			L_ESTATUS_MOVIMIENTO_BANCO				)		
	VALUES	
		(	@PP_K_ESTATUS_MOVIMIENTO_BANCO,			@PP_D_ESTATUS_MOVIMIENTO_BANCO,	
			@PP_S_ESTATUS_MOVIMIENTO_BANCO,			@PP_O_ESTATUS_MOVIMIENTO_BANCO,
			@PP_C_ESTATUS_MOVIMIENTO_BANCO,
			@PP_L_ESTATUS_MOVIMIENTO_BANCO			)

	-- =========================================================
GO

-- ///////////////////////////////////////////////////////////////


-- ===============================================
SET NOCOUNT ON
-- ===============================================

EXECUTE [dbo].[PG_CI_ESTATUS_MOVIMIENTO_BANCO] 0, 0, 1, 'REPORTADO',			'RPRTD', 1, '', 1
EXECUTE [dbo].[PG_CI_ESTATUS_MOVIMIENTO_BANCO] 0, 0, 2, 'PAGO POR APLICAR',		'XAPLC', 1, '', 1
EXECUTE [dbo].[PG_CI_ESTATUS_MOVIMIENTO_BANCO] 0, 0, 3, 'APLICADO A COBRANZA',	'APLCD', 1, '', 1
EXECUTE [dbo].[PG_CI_ESTATUS_MOVIMIENTO_BANCO] 0, 0, 4, 'CANCELADO',			'CANCL', 1, '', 1
GO

-- ===============================================
SET NOCOUNT OFF
-- ===============================================



-- ///////////////////////////////////////////////////////////////
-- //					FORMA_MOVIMIENTO_BANCO
-- ///////////////////////////////////////////////////////////////

CREATE TABLE [dbo].[FORMA_MOVIMIENTO_BANCO] (
	[K_FORMA_MOVIMIENTO_BANCO]			INT NOT NULL,
	[D_FORMA_MOVIMIENTO_BANCO]			VARCHAR (100) NOT NULL,
	[S_FORMA_MOVIMIENTO_BANCO]			VARCHAR (10) NOT NULL,
	[O_FORMA_MOVIMIENTO_BANCO]			INT NOT NULL,
	[C_FORMA_MOVIMIENTO_BANCO]			VARCHAR (255) NOT NULL,
	[L_FORMA_MOVIMIENTO_BANCO]			INT NOT NULL
) ON [PRIMARY]
GO


-- //////////////////////////////////////////////////////////////


ALTER TABLE [dbo].[FORMA_MOVIMIENTO_BANCO]
	ADD CONSTRAINT [PK_FORMA_MOVIMIENTO_BANCO]
		PRIMARY KEY CLUSTERED ([K_FORMA_MOVIMIENTO_BANCO])
GO


CREATE UNIQUE NONCLUSTERED 
	INDEX [UN_FORMA_MOVIMIENTO_BANCO_01_DESCRIPCION] 
	   ON [dbo].[FORMA_MOVIMIENTO_BANCO] ( [D_FORMA_MOVIMIENTO_BANCO] )
GO


ALTER TABLE [dbo].[FORMA_MOVIMIENTO_BANCO] ADD 
	CONSTRAINT [FK_FORMA_MOVIMIENTO_BANCO_01] 
		FOREIGN KEY ( [L_FORMA_MOVIMIENTO_BANCO] ) 
		REFERENCES [dbo].[ESTATUS_ACTIVO] ( [K_ESTATUS_ACTIVO] )
GO


-- //////////////////////////////////////////////////////////////


IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[PG_CI_FORMA_MOVIMIENTO_BANCO]') AND type in (N'P', N'PC'))
	DROP PROCEDURE [dbo].[PG_CI_FORMA_MOVIMIENTO_BANCO]
GO


CREATE PROCEDURE [dbo].[PG_CI_FORMA_MOVIMIENTO_BANCO]
	@PP_L_DEBUG				INT,
	@PP_K_SISTEMA_EXE		INT,
	@PP_K_FORMA_MOVIMIENTO_BANCO		INT,
	@PP_D_FORMA_MOVIMIENTO_BANCO		VARCHAR(100),
	@PP_S_FORMA_MOVIMIENTO_BANCO		VARCHAR(10),
	@PP_O_FORMA_MOVIMIENTO_BANCO		INT,
	@PP_C_FORMA_MOVIMIENTO_BANCO		VARCHAR(255),
	@PP_L_FORMA_MOVIMIENTO_BANCO		INT
AS
	
	INSERT INTO FORMA_MOVIMIENTO_BANCO
		(	K_FORMA_MOVIMIENTO_BANCO,			D_FORMA_MOVIMIENTO_BANCO, 
			S_FORMA_MOVIMIENTO_BANCO,			O_FORMA_MOVIMIENTO_BANCO,
			C_FORMA_MOVIMIENTO_BANCO,
			L_FORMA_MOVIMIENTO_BANCO			)		
	VALUES	
		(	@PP_K_FORMA_MOVIMIENTO_BANCO,		@PP_D_FORMA_MOVIMIENTO_BANCO,	
			@PP_S_FORMA_MOVIMIENTO_BANCO,		@PP_O_FORMA_MOVIMIENTO_BANCO,
			@PP_C_FORMA_MOVIMIENTO_BANCO,
			@PP_L_FORMA_MOVIMIENTO_BANCO		)

	-- =========================================================
GO

-- ///////////////////////////////////////////////////////////////


-- ===============================================
SET NOCOUNT ON
-- ===============================================

EXECUTE [dbo].[PG_CI_FORMA_MOVIMIENTO_BANCO] 0, 0, 1, 'EFECTIVO',		'EFE', 1, '', 1
EXECUTE [dbo].[PG_CI_FORMA_MOVIMIENTO_BANCO] 0, 0, 2, 'CHEQUE',			'CHE', 1, '', 1
EXECUTE [dbo].[PG_CI_FORMA_MOVIMIENTO_BANCO] 0, 0, 3, 'TRANSFERENCIA',	'TRA', 1, '', 1
EXECUTE [dbo].[PG_CI_FORMA_MOVIMIENTO_BANCO] 0, 0, 4, 'CONDONACION',	'CON', 1, '', 1
GO

-- ===============================================
SET NOCOUNT OFF
-- ===============================================



-- ///////////////////////////////////////////////////////////////
-- //					MOVIMIENTO_BANCO					
-- ///////////////////////////////////////////////////////////////
	

CREATE TABLE [dbo].[MOVIMIENTO_BANCO] (
	-- =============================== CONTROL
	[K_MOVIMIENTO_BANCO]				INT NOT NULL,
	[K_TIPO_MOVIMIENTO_BANCO]			INT NOT NULL,
	[K_ESTATUS_MOVIMIENTO_BANCO]		INT NOT NULL,
	[K_FORMA_MOVIMIENTO_BANCO]			INT NOT NULL,
	[L_CAPTURA_MANUAL]					INT NOT NULL,
	[CIE_CLIENTE]						VARCHAR(100) NOT NULL,
	-- =============================== CONCILIACION
	[K_UNIDAD_OPERATIVA]				INT NOT NULL	DEFAULT 0,
	[K_ESTATUS_CONCILIACION]			INT NOT NULL	DEFAULT 0,
	[K_TIPO_LIBRO_INGRESOS]				INT NOT NULL	DEFAULT 0,
	[F_OPERACION]						DATE	NULL,	
	[K_USUARIO_CONCILIO]				INT		NULL,
	[F_CONCILIACION]					DATE	NULL,
	-- =============================== SEGUN PDF
	[K_CUENTA_BANCO]					INT NOT NULL,
	[F_MOVIMIENTO_BANCO]				DATE NOT NULL,	
	[F_LIQ]								DATE NOT NULL,	
	[COD_DESCRIPCION]					VARCHAR(500) NOT NULL,
	[REFERENCIA]						VARCHAR(500) NOT NULL,
	[MONTO_MOVIMIENTO]					DECIMAL(19,4) NOT NULL,
	[SALDO]								DECIMAL(19,4) NOT NULL
	-- =============================== PENDIENTE
--	[D_MOVIMIENTO_BANCO]				VARCHAR(100) NOT NULL,
--	[N_RENGLON]							[INT] NOT NULL,
--	[FOLIO_TRANSACCION]					[INT] NOT NULL,
--	[F_PRORROGA]						[DATETIME] NOT NULL,
--	[L_LIQUIDADO]						[INT] NOT NULL,
) ON [PRIMARY]
GO

-- //////////////////////////////////////////////////////

ALTER TABLE [dbo].[MOVIMIENTO_BANCO]
	ADD CONSTRAINT [PK_MOVIMIENTO_BANCO]
		PRIMARY KEY CLUSTERED ([K_MOVIMIENTO_BANCO])
GO

-- //////////////////////////////////////////////////////
/*
WIWI // HGF
ALTER TABLE [dbo].[MOVIMIENTO_BANCO] ADD 
	CONSTRAINT [FK_MOVIMIENTO_BANCO_K_CUENTA_BANCO] 
		FOREIGN KEY ([K_CUENTA_BANCO])
		REFERENCES [dbo].[CUENTA_BANCO] ([K_CUENTA_BANCO])
GO
*/

ALTER TABLE [dbo].[MOVIMIENTO_BANCO] ADD 
	CONSTRAINT [FK_MOVIMIENTO_BANCO_K_UNIDAD_OPERATIVA]
		FOREIGN KEY ([K_UNIDAD_OPERATIVA])
		REFERENCES [dbo].[UNIDAD_OPERATIVA] ([K_UNIDAD_OPERATIVA])
GO


-- //////////////////////////////////////////////////////


ALTER TABLE [dbo].[MOVIMIENTO_BANCO] ADD 
	CONSTRAINT [FK_MOVIMIENTO_BANCO_01] 
		FOREIGN KEY ([K_ESTATUS_MOVIMIENTO_BANCO]) 
		REFERENCES [dbo].[ESTATUS_MOVIMIENTO_BANCO] ([K_ESTATUS_MOVIMIENTO_BANCO]),
	CONSTRAINT [FK_MOVIMIENTO_BANCO_02] 
		FOREIGN KEY ([K_TIPO_MOVIMIENTO_BANCO]) 
		REFERENCES [dbo].[TIPO_MOVIMIENTO_BANCO] ([K_TIPO_MOVIMIENTO_BANCO]),
	CONSTRAINT [FK_MOVIMIENTO_BANCO_03] 
		FOREIGN KEY ([K_FORMA_MOVIMIENTO_BANCO]) 
		REFERENCES [dbo].[FORMA_MOVIMIENTO_BANCO] ([K_FORMA_MOVIMIENTO_BANCO]),
	CONSTRAINT [FK_MOVIMIENTO_BANCO_04] 
		FOREIGN KEY ([K_ESTATUS_CONCILIACION]) 
		REFERENCES [dbo].[ESTATUS_CONCILIACION] ([K_ESTATUS_CONCILIACION]),
	CONSTRAINT [FK_MOVIMIENTO_BANCO_05] 
		FOREIGN KEY ([K_TIPO_LIBRO_INGRESOS]) 
		REFERENCES [dbo].[TIPO_LIBRO_INGRESOS] ([K_TIPO_LIBRO_INGRESOS])
GO


-- //////////////////////////////////////////////////////////////


ALTER TABLE [dbo].[MOVIMIENTO_BANCO] 
	ADD		[K_USUARIO_ALTA]				[INT] NOT NULL,
			[F_ALTA]						[DATETIME] NOT NULL,
			[K_USUARIO_CAMBIO]				[INT] NOT NULL,
			[F_CAMBIO]						[DATETIME] NOT NULL,
			[L_BORRADO]						[INT] NOT NULL,
			[K_USUARIO_BAJA]				[INT] NULL,
			[F_BAJA]						[DATETIME] NULL;
GO


ALTER TABLE [dbo].[MOVIMIENTO_BANCO] ADD 
	CONSTRAINT [FK_MOVIMIENTO_BANCO_USUARIO_ALTA]  
		FOREIGN KEY ([K_USUARIO_ALTA]) 
		REFERENCES [dbo].[USUARIO] ([K_USUARIO]),
	CONSTRAINT [FK_MOVIMIENTO_BANCO_USUARIO_CAMBIO]  
		FOREIGN KEY ([K_USUARIO_CAMBIO]) 
		REFERENCES [dbo].[USUARIO] ([K_USUARIO]),
	CONSTRAINT [FK_MOVIMIENTO_BANCO_USUARIO_BAJA]  
		FOREIGN KEY ([K_USUARIO_BAJA]) 
		REFERENCES [dbo].[USUARIO] ([K_USUARIO])
GO


-- //////////////////////////////////////////////////////////////
-- //////////////////////////////////////////////////////////////
-- //////////////////////////////////////////////////////////////
