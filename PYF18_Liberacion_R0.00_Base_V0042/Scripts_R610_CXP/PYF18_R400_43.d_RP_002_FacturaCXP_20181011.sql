-- //////////////////////////////////////////////////////////////
-- // ARCHIVO:			
-- //////////////////////////////////////////////////////////////
-- // BASE DE DATOS:	PYF18_Finanzas
-- // MODULO:			FACTURA_CXP
-- // OPERACION:		LIBERACION // STORED PROCEDURE
-- ////////////////////////////////////////////////////////////// 
-- // Autor:			HGF
-- // Fecha creación:	27/SEP/2018
-- ////////////////////////////////////////////////////////////// 

USE [PYF18_Finanzas_V9999_R0] 
GO



-- //////////////////////////////////////////////////////////////





/*

EXECUTE [PG_RP_002_ANTIGUEDAD_SALDOS]	0,0,0, 
										1,		-- 1 PROV // 2 RAZON SOCIAL // 3 UNIDAD OPERATIVO
										'',		-- @PP_D_BUSCAR					VARCHAR(255),
										-1,		-- @PP_K_CATEGORIA_PROVEEDOR	INT,
										-1,		-- @PP_K_RAZON_SOCIAL			INT,
										NULL,	-- @PP_F_INICIO					DATE,
										NULL,	-- @PP_F_FIN					DATE,
										NULL	-- @PP_F_PIVOTE					DATE	-- MANDAR SIEMPRE UN NULO
										
*/


-- //////////////////////////////////////////////////////////////
-- // STORED PROCEDURE ---> 
-- //////////////////////////////////////////////////////////////

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[APG_RP_002A_ANTIGUEDAD_SALDOS_X_PROVEEDOR]') AND type in (N'P', N'PC'))
	DROP PROCEDURE [dbo].[APG_RP_002A_ANTIGUEDAD_SALDOS_X_PROVEEDOR]
GO



CREATE PROCEDURE [dbo].[APG_RP_002A_ANTIGUEDAD_SALDOS_X_PROVEEDOR]
	@PP_L_DEBUG					INT,
	@PP_K_SISTEMA_EXE			INT,
	@PP_K_USUARIO_ACCION		INT,
	-- ===========================
	@PP_D_BUSCAR				VARCHAR(255),
	@PP_K_CATEGORIA_PROVEEDOR	INT,
	@PP_K_RAZON_SOCIAL			INT,
	@PP_F_INICIO				DATE,
	@PP_F_FIN					DATE,
	-- ===========================
	@PP_F_PIVOTE				DATE	-- MANDAR SIEMPRE UN NULO
AS			
	
	DECLARE		@VP_F_PIVOTE	AS DATE

	IF @PP_F_PIVOTE IS NULL 
		SET		@VP_F_PIVOTE = GETDATE()		
	ELSE
		SET		@VP_F_PIVOTE = @PP_F_PIVOTE	

	-- =========================================		

	DECLARE @VP_K_FOLIO		INT

	EXECUTE [dbo].[PG_RN_OBTENER_ID_X_REFERENCIA]		@PP_D_BUSCAR, 
														@OU_K_ELEMENTO = @VP_K_FOLIO	OUTPUT
	-- =========================================

	DECLARE		@TA_FACTURA_CXP		AS TABLE
			(	CXP_K_FACTURA_CXP				INT,
				CXP_S_RAZON_SOCIAL				VARCHAR(100),
				CXP_D_RAZON_SOCIAL				VARCHAR(100),
				CXP_D_PROVEEDOR					VARCHAR(100),
				CXP_D_CATEGORIA_PROVEEDOR		VARCHAR(100),
				CXP_ANTIGUEDAD					INT,
				CXP_SALDO						DECIMAL(19,4)	 )

	-- =========================================

	INSERT INTO @TA_FACTURA_CXP
		(		CXP_K_FACTURA_CXP,
				CXP_S_RAZON_SOCIAL, CXP_D_RAZON_SOCIAL,
				CXP_D_PROVEEDOR,	CXP_D_CATEGORIA_PROVEEDOR,
				CXP_ANTIGUEDAD,		
				CXP_SALDO	 )
		SELECT	CXP.K_FACTURA_CXP, 
				RAZ.S_RAZON_SOCIAL, RAZ.D_RAZON_SOCIAL,
				PRO.D_PROVEEDOR,	CAT.D_CATEGORIA_PROVEEDOR,
				DATEDIFF(dd,@VP_F_PIVOTE,CXP.F_VENCIMIENTO), 
				CXP.SALDO
		FROM	FACTURA_CXP				AS CXP, 
				RAZON_SOCIAL			AS RAZ,
				PROVEEDOR				AS PRO,
				CATEGORIA_PROVEEDOR		AS CAT
		WHERE	CXP.K_RAZON_SOCIAL=RAZ.K_RAZON_SOCIAL
		AND		CXP.K_PROVEEDOR=PRO.K_PROVEEDOR
		AND		PRO.K_CATEGORIA_PROVEEDOR=CAT.K_CATEGORIA_PROVEEDOR
		AND		PRO.K_CATEGORIA_PROVEEDOR IN ( 1, 2 )		-- K_CATEGORIA_PROVEEDOR = #1 GAS // #2 FLETE
--WIWI	AND		SOL.K_ESTATUS_SOLICITUD IN ( 2, 3, 4 )				--  #2 AUTORIZADO / #3 OTORGADO / #4 PAGOS
		AND		CXP.SALDO>0
		AND		( @PP_F_INICIO IS NULL			OR	@PP_F_INICIO<=CXP.F_VENCIMIENTO )
		AND		( @PP_F_FIN	IS NULL				OR	@PP_F_FIN>=CXP.F_VENCIMIENTO )
		AND		( @PP_K_RAZON_SOCIAL=-1			OR	@PP_K_RAZON_SOCIAL=CXP.K_RAZON_SOCIAL)
		AND		( @PP_K_CATEGORIA_PROVEEDOR=-1	OR	@PP_K_CATEGORIA_PROVEEDOR=CAT.K_CATEGORIA_PROVEEDOR )
		AND		(	
				PRO.D_PROVEEDOR		LIKE '%'+@PP_D_BUSCAR+'%'	
			AND	PRO.RFC_PROVEEDOR	LIKE '%'+@PP_D_BUSCAR+'%'	
--			OR	SOL.K_SOLICITUD=@VP_K_FOLIO
				)
-- WIWI
	--	K_TIPO_MOVIMIENTO_PRESTAMO	
	--  #100 RECIBO / #101 PAGO / #102 CONDONACION RECIBO / #200 MORATORIOS / #201 PAGO MORATORIOS / #202 CONDONACION MORATORIOS
	--	K_ESTATUS_SOLICITUD	
	--  #1 PROPUESTA / #2 AUTORIZADO / #3 OTORGADO / #4 PAGOS / #5 LIQUIDADO / #6 CANCELADO / #7 REESTRUCTURADO
	
	-- =========================================

	SELECT	
			CXP_S_RAZON_SOCIAL			AS VI_S_RAZON_SOCIAL, 
			CXP_D_RAZON_SOCIAL			AS VI_D_RAZON_SOCIAL,
			CXP_D_CATEGORIA_PROVEEDOR	AS VI_D_CATEGORIA,
			CXP_D_PROVEEDOR				AS VI_D_NOMBRE,
			-- =========================
			SUM( CASE   WHEN                          CXP_ANTIGUEDAD< 000 THEN CXP_SALDO ELSE 0 END )  AS VI_VENCIDO_TOTAL, 
			SUM( CASE   WHEN  000<=CXP_ANTIGUEDAD                         THEN CXP_SALDO ELSE 0 END )  AS VI_VIGENTE_TOTAL, 
			-- =========================
			SUM( CASE   WHEN                          CXP_ANTIGUEDAD<-028 THEN CXP_SALDO ELSE 0 END )  AS VI_VENCIDO_MAS_DE_028,
			SUM( CASE   WHEN -028<=CXP_ANTIGUEDAD AND CXP_ANTIGUEDAD<-021 THEN CXP_SALDO ELSE 0 END )  AS VI_VENCIDO_022_A_028, 	
			SUM( CASE   WHEN -021<=CXP_ANTIGUEDAD AND CXP_ANTIGUEDAD<-014 THEN CXP_SALDO ELSE 0 END )  AS VI_VENCIDO_015_A_021, 	
			SUM( CASE   WHEN -014<=CXP_ANTIGUEDAD AND CXP_ANTIGUEDAD<-007 THEN CXP_SALDO ELSE 0 END )  AS VI_VENCIDO_008_A_014, 
			SUM( CASE   WHEN -007<=CXP_ANTIGUEDAD AND CXP_ANTIGUEDAD< 000 THEN CXP_SALDO ELSE 0 END )  AS VI_VENCIDO_001_A_007, 
			-- =========================
			SUM( CASE   WHEN  000<=CXP_ANTIGUEDAD AND CXP_ANTIGUEDAD<=007 THEN CXP_SALDO ELSE 0 END )  AS VI_VIGENTE_000_HASTA_007, 
			SUM( CASE   WHEN  007< CXP_ANTIGUEDAD AND CXP_ANTIGUEDAD<=014 THEN CXP_SALDO ELSE 0 END )  AS VI_VIGENTE_008_HASTA_014, 
			SUM( CASE   WHEN  014< CXP_ANTIGUEDAD AND CXP_ANTIGUEDAD<=021 THEN CXP_SALDO ELSE 0 END )  AS VI_VIGENTE_015_HASTA_021, 
			SUM( CASE   WHEN  021< CXP_ANTIGUEDAD AND CXP_ANTIGUEDAD<=028 THEN CXP_SALDO ELSE 0 END )  AS VI_VIGENTE_022_HASTA_028, 
			SUM( CASE   WHEN  028< CXP_ANTIGUEDAD                         THEN CXP_SALDO ELSE 0 END )  AS VI_VIGENTE_MAYOR_A_028
	FROM	@TA_FACTURA_CXP AS TBL
	GROUP BY CXP_S_RAZON_SOCIAL, CXP_D_RAZON_SOCIAL, CXP_D_CATEGORIA_PROVEEDOR, CXP_D_PROVEEDOR	-- , CXP.REC_D_CLIENTE
	ORDER BY CXP_S_RAZON_SOCIAL, CXP_D_RAZON_SOCIAL, CXP_D_CATEGORIA_PROVEEDOR, CXP_D_PROVEEDOR

	-- /////////////////////////////////////
GO





-- //////////////////////////////////////////////////////////////
-- // STORED PROCEDURE ---> 
-- //////////////////////////////////////////////////////////////

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[APG_RP_002B_ANTIGUEDAD_SALDOS_X_RAZON_SOCIAL]') AND type in (N'P', N'PC'))
	DROP PROCEDURE [dbo].[APG_RP_002B_ANTIGUEDAD_SALDOS_X_RAZON_SOCIAL]
GO


CREATE PROCEDURE [dbo].[APG_RP_002B_ANTIGUEDAD_SALDOS_X_RAZON_SOCIAL]
	@PP_L_DEBUG					INT,
	@PP_K_SISTEMA_EXE			INT,
	@PP_K_USUARIO_ACCION		INT,
	-- ===========================
	@PP_D_BUSCAR				VARCHAR(255),
	@PP_K_CATEGORIA_PROVEEDOR	INT,
	@PP_K_RAZON_SOCIAL			INT,
	@PP_F_INICIO				DATE,
	@PP_F_FIN					DATE,
	-- ===========================
	@PP_F_PIVOTE				DATE	-- MANDAR SIEMPRE UN NULO
AS			
	
	DECLARE		@VP_F_PIVOTE	AS DATE

	IF @PP_F_PIVOTE IS NULL 
		SET		@VP_F_PIVOTE = GETDATE()		
	ELSE
		SET		@VP_F_PIVOTE = @PP_F_PIVOTE	

	-- =========================================		

	DECLARE @VP_K_FOLIO		INT

	EXECUTE [dbo].[PG_RN_OBTENER_ID_X_REFERENCIA]		@PP_D_BUSCAR, 
														@OU_K_ELEMENTO = @VP_K_FOLIO	OUTPUT
	-- =========================================

	DECLARE		@TA_FACTURA_CXP		AS TABLE
			(	CXP_K_FACTURA_CXP				INT,
				CXP_S_RAZON_SOCIAL				VARCHAR(100),
				CXP_D_RAZON_SOCIAL				VARCHAR(100),
				CXP_D_CATEGORIA_PROVEEDOR		VARCHAR(100),
				CXP_ANTIGUEDAD					INT,
				CXP_SALDO						DECIMAL(19,4)	 )

	-- =========================================

	INSERT INTO @TA_FACTURA_CXP
		(		CXP_K_FACTURA_CXP,
				CXP_S_RAZON_SOCIAL,
				CXP_D_RAZON_SOCIAL,	CXP_D_CATEGORIA_PROVEEDOR,
				CXP_ANTIGUEDAD,		
				CXP_SALDO	 )
		SELECT	CXP.K_FACTURA_CXP, 
				RAZ.S_RAZON_SOCIAL,
				RAZ.D_RAZON_SOCIAL,	CAT.D_CATEGORIA_PROVEEDOR,
				DATEDIFF(dd,@VP_F_PIVOTE,CXP.F_VENCIMIENTO), 
				CXP.SALDO
		FROM	FACTURA_CXP				AS CXP, 
				RAZON_SOCIAL			AS RAZ,
				PROVEEDOR				AS PRO,
				CATEGORIA_PROVEEDOR		AS CAT
		WHERE	CXP.K_RAZON_SOCIAL=RAZ.K_RAZON_SOCIAL
		AND		CXP.K_PROVEEDOR=PRO.K_PROVEEDOR
		AND		PRO.K_CATEGORIA_PROVEEDOR=CAT.K_CATEGORIA_PROVEEDOR
		AND		PRO.K_CATEGORIA_PROVEEDOR IN ( 1, 2 )		-- K_CATEGORIA_PROVEEDOR = #1 GAS // #2 FLETE
--WIWI	AND		SOL.K_ESTATUS_SOLICITUD IN ( 2, 3, 4 )				--  #2 AUTORIZADO / #3 OTORGADO / #4 PAGOS
		AND		CXP.SALDO>0
		AND		( @PP_F_INICIO IS NULL			OR	@PP_F_INICIO<=CXP.F_VENCIMIENTO )
		AND		( @PP_F_FIN	IS NULL				OR	@PP_F_FIN>=CXP.F_VENCIMIENTO )
		AND		( @PP_K_RAZON_SOCIAL=-1			OR	@PP_K_RAZON_SOCIAL=CXP.K_RAZON_SOCIAL)
		AND		( @PP_K_CATEGORIA_PROVEEDOR=-1	OR	@PP_K_CATEGORIA_PROVEEDOR=CAT.K_CATEGORIA_PROVEEDOR )
		AND		(	
				RAZ.D_RAZON_SOCIAL	LIKE '%'+@PP_D_BUSCAR+'%'	
			OR	PRO.D_PROVEEDOR		LIKE '%'+@PP_D_BUSCAR+'%'	
			OR	PRO.RFC_PROVEEDOR	LIKE '%'+@PP_D_BUSCAR+'%'	
--			OR	SOL.K_SOLICITUD=@VP_K_FOLIO
				)
-- WIWI
	--	K_TIPO_MOVIMIENTO_PRESTAMO	
	--  #100 RECIBO / #101 PAGO / #102 CONDONACION RECIBO / #200 MORATORIOS / #201 PAGO MORATORIOS / #202 CONDONACION MORATORIOS
	--	K_ESTATUS_SOLICITUD	
	--  #1 PROPUESTA / #2 AUTORIZADO / #3 OTORGADO / #4 PAGOS / #5 LIQUIDADO / #6 CANCELADO / #7 REESTRUCTURADO
	
	-- =========================================

	SELECT	
	--		CXP_K_FACTURA_CXP			AS VI_K_SOLICITUD,
			CXP_S_RAZON_SOCIAL			AS VI_S_RAZON_SOCIAL,
			CXP_D_RAZON_SOCIAL			AS VI_D_RAZON_SOCIAL,
			CXP_D_CATEGORIA_PROVEEDOR	AS VI_D_CATEGORIA,
			CXP_D_RAZON_SOCIAL			AS VI_D_NOMBRE,
			-- =========================
			SUM( CASE   WHEN                          CXP_ANTIGUEDAD< 000 THEN CXP_SALDO ELSE 0 END )  AS VI_VENCIDO_TOTAL, 
			SUM( CASE   WHEN  000<=CXP_ANTIGUEDAD                         THEN CXP_SALDO ELSE 0 END )  AS VI_VIGENTE_TOTAL, 
			-- =========================
			SUM( CASE   WHEN                          CXP_ANTIGUEDAD< 000 THEN CXP_SALDO ELSE 0 END )  AS VI_VENCIDO_TOTAL, 
			SUM( CASE   WHEN  000<=CXP_ANTIGUEDAD                         THEN CXP_SALDO ELSE 0 END )  AS VI_VIGENTE_TOTAL, 
			-- =========================
			SUM( CASE   WHEN                          CXP_ANTIGUEDAD<-028 THEN CXP_SALDO ELSE 0 END )  AS VI_VENCIDO_MAS_DE_028,
			SUM( CASE   WHEN -028<=CXP_ANTIGUEDAD AND CXP_ANTIGUEDAD<-021 THEN CXP_SALDO ELSE 0 END )  AS VI_VENCIDO_022_A_028, 	
			SUM( CASE   WHEN -021<=CXP_ANTIGUEDAD AND CXP_ANTIGUEDAD<-014 THEN CXP_SALDO ELSE 0 END )  AS VI_VENCIDO_015_A_021, 	
			SUM( CASE   WHEN -014<=CXP_ANTIGUEDAD AND CXP_ANTIGUEDAD<-007 THEN CXP_SALDO ELSE 0 END )  AS VI_VENCIDO_008_A_014, 
			SUM( CASE   WHEN -007<=CXP_ANTIGUEDAD AND CXP_ANTIGUEDAD< 000 THEN CXP_SALDO ELSE 0 END )  AS VI_VENCIDO_001_A_007, 
			-- =========================
			SUM( CASE   WHEN  000<=CXP_ANTIGUEDAD AND CXP_ANTIGUEDAD<=007 THEN CXP_SALDO ELSE 0 END )  AS VI_VIGENTE_000_HASTA_007, 
			SUM( CASE   WHEN  007< CXP_ANTIGUEDAD AND CXP_ANTIGUEDAD<=014 THEN CXP_SALDO ELSE 0 END )  AS VI_VIGENTE_008_HASTA_014, 
			SUM( CASE   WHEN  014< CXP_ANTIGUEDAD AND CXP_ANTIGUEDAD<=021 THEN CXP_SALDO ELSE 0 END )  AS VI_VIGENTE_015_HASTA_021, 
			SUM( CASE   WHEN  021< CXP_ANTIGUEDAD AND CXP_ANTIGUEDAD<=028 THEN CXP_SALDO ELSE 0 END )  AS VI_VIGENTE_022_HASTA_028, 
			SUM( CASE   WHEN  028< CXP_ANTIGUEDAD                         THEN CXP_SALDO ELSE 0 END )  AS VI_VIGENTE_MAYOR_A_028
			-- =========================
	FROM	@TA_FACTURA_CXP AS TBL
	GROUP BY CXP_D_CATEGORIA_PROVEEDOR, CXP_S_RAZON_SOCIAL, CXP_D_RAZON_SOCIAL
	ORDER BY CXP_D_CATEGORIA_PROVEEDOR, CXP_S_RAZON_SOCIAL, CXP_D_RAZON_SOCIAL

	-- /////////////////////////////////////
GO




-- //////////////////////////////////////////////////////////////
-- // STORED PROCEDURE ---> 
-- //////////////////////////////////////////////////////////////

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[APG_RP_002C_ANTIGUEDAD_SALDOS_X_UNIDAD_OPERATIVA]') AND type in (N'P', N'PC'))
	DROP PROCEDURE [dbo].[APG_RP_002C_ANTIGUEDAD_SALDOS_X_UNIDAD_OPERATIVA]
GO


CREATE PROCEDURE [dbo].[APG_RP_002C_ANTIGUEDAD_SALDOS_X_UNIDAD_OPERATIVA]
	@PP_L_DEBUG					INT,
	@PP_K_SISTEMA_EXE			INT,
	@PP_K_USUARIO_ACCION		INT,
	-- ===========================
	@PP_D_BUSCAR				VARCHAR(255),
	@PP_K_CATEGORIA_PROVEEDOR	INT,
	@PP_K_RAZON_SOCIAL			INT,
	@PP_F_INICIO				DATE,
	@PP_F_FIN					DATE,
	-- ===========================
	@PP_F_PIVOTE				DATE	-- MANDAR SIEMPRE UN NULO
AS			
	
	DECLARE		@VP_F_PIVOTE	AS DATE

	IF @PP_F_PIVOTE IS NULL 
		SET		@VP_F_PIVOTE = GETDATE()		
	ELSE
		SET		@VP_F_PIVOTE = @PP_F_PIVOTE	

	-- =========================================		

	DECLARE @VP_K_FOLIO		INT

	EXECUTE [dbo].[PG_RN_OBTENER_ID_X_REFERENCIA]		@PP_D_BUSCAR, 
														@OU_K_ELEMENTO = @VP_K_FOLIO	OUTPUT
	-- =========================================

	DECLARE		@TA_FACTURA_CXP		AS TABLE
			(	CXP_K_FACTURA_CXP				INT,
				CXP_S_RAZON_SOCIAL				VARCHAR(100),
				CXP_D_RAZON_SOCIAL				VARCHAR(100),
				CXP_D_PROVEEDOR					VARCHAR(100),
				CXP_D_CATEGORIA_PROVEEDOR		VARCHAR(100),
				CXP_ANTIGUEDAD					INT,
				CXP_SALDO						DECIMAL(19,4)	 )

	-- =========================================

	INSERT INTO @TA_FACTURA_CXP
		(		CXP_K_FACTURA_CXP,
				CXP_S_RAZON_SOCIAL, CXP_D_RAZON_SOCIAL,
				CXP_D_PROVEEDOR,	CXP_D_CATEGORIA_PROVEEDOR,
				CXP_ANTIGUEDAD,		
				CXP_SALDO	 )
		SELECT	CXP.K_FACTURA_CXP, 
				RAZ.S_RAZON_SOCIAL, RAZ.D_RAZON_SOCIAL,
				PRO.D_PROVEEDOR,	CAT.D_CATEGORIA_PROVEEDOR,
				DATEDIFF(dd,@VP_F_PIVOTE,CXP.F_VENCIMIENTO), 
				CXP.SALDO
		FROM	FACTURA_CXP				AS CXP, 
				RAZON_SOCIAL			AS RAZ,
				PROVEEDOR				AS PRO,
				CATEGORIA_PROVEEDOR		AS CAT
		WHERE	CXP.K_RAZON_SOCIAL=RAZ.K_RAZON_SOCIAL
		AND		CXP.K_PROVEEDOR=PRO.K_PROVEEDOR
		AND		PRO.K_CATEGORIA_PROVEEDOR=CAT.K_CATEGORIA_PROVEEDOR
		AND		PRO.K_CATEGORIA_PROVEEDOR IN ( 1, 2 )		-- K_CATEGORIA_PROVEEDOR = #1 GAS // #2 FLETE
--WIWI	AND		SOL.K_ESTATUS_SOLICITUD IN ( 2, 3, 4 )				--  #2 AUTORIZADO / #3 OTORGADO / #4 PAGOS
		AND		CXP.SALDO>0
		AND		( @PP_F_INICIO IS NULL			OR	@PP_F_INICIO<=CXP.F_VENCIMIENTO )
		AND		( @PP_F_FIN	IS NULL				OR	@PP_F_FIN>=CXP.F_VENCIMIENTO )
		AND		( @PP_K_RAZON_SOCIAL=-1			OR	@PP_K_RAZON_SOCIAL=CXP.K_RAZON_SOCIAL)
		AND		( @PP_K_CATEGORIA_PROVEEDOR=-1	OR	@PP_K_CATEGORIA_PROVEEDOR=CAT.K_CATEGORIA_PROVEEDOR )
		AND		(	
				PRO.D_PROVEEDOR		LIKE '%'+@PP_D_BUSCAR+'%'	
			AND	PRO.RFC_PROVEEDOR	LIKE '%'+@PP_D_BUSCAR+'%'	
--			OR	SOL.K_SOLICITUD=@VP_K_FOLIO
				)
-- WIWI
	--	K_TIPO_MOVIMIENTO_PRESTAMO	
	--  #100 RECIBO / #101 PAGO / #102 CONDONACION RECIBO / #200 MORATORIOS / #201 PAGO MORATORIOS / #202 CONDONACION MORATORIOS
	--	K_ESTATUS_SOLICITUD	
	--  #1 PROPUESTA / #2 AUTORIZADO / #3 OTORGADO / #4 PAGOS / #5 LIQUIDADO / #6 CANCELADO / #7 REESTRUCTURADO
	
	-- =========================================

	SELECT	
			CXP_S_RAZON_SOCIAL			AS VI_S_RAZON_SOCIAL,
			CXP_D_RAZON_SOCIAL			AS VI_D_RAZON_SOCIAL,
			CXP_D_CATEGORIA_PROVEEDOR	AS VI_D_CATEGORIA,
			CXP_D_PROVEEDOR				AS VI_D_NOMBRE,
			-- =========================
			SUM( CASE   WHEN                          CXP_ANTIGUEDAD< 000 THEN CXP_SALDO ELSE 0 END )  AS VI_VENCIDO_TOTAL, 
			SUM( CASE   WHEN  000<=CXP_ANTIGUEDAD                         THEN CXP_SALDO ELSE 0 END )  AS VI_VIGENTE_TOTAL, 
			-- =========================
			SUM( CASE   WHEN                          CXP_ANTIGUEDAD< 000 THEN CXP_SALDO ELSE 0 END )  AS VI_VENCIDO_TOTAL, 
			SUM( CASE   WHEN  000<=CXP_ANTIGUEDAD                         THEN CXP_SALDO ELSE 0 END )  AS VI_VIGENTE_TOTAL, 
			-- =========================
			SUM( CASE   WHEN                          CXP_ANTIGUEDAD<-028 THEN CXP_SALDO ELSE 0 END )  AS VI_VENCIDO_MAS_DE_028,
			SUM( CASE   WHEN -028<=CXP_ANTIGUEDAD AND CXP_ANTIGUEDAD<-021 THEN CXP_SALDO ELSE 0 END )  AS VI_VENCIDO_022_A_028, 	
			SUM( CASE   WHEN -021<=CXP_ANTIGUEDAD AND CXP_ANTIGUEDAD<-014 THEN CXP_SALDO ELSE 0 END )  AS VI_VENCIDO_015_A_021, 	
			SUM( CASE   WHEN -014<=CXP_ANTIGUEDAD AND CXP_ANTIGUEDAD<-007 THEN CXP_SALDO ELSE 0 END )  AS VI_VENCIDO_008_A_014, 
			SUM( CASE   WHEN -007<=CXP_ANTIGUEDAD AND CXP_ANTIGUEDAD< 000 THEN CXP_SALDO ELSE 0 END )  AS VI_VENCIDO_001_A_007, 
			-- =========================
			SUM( CASE   WHEN  000<=CXP_ANTIGUEDAD AND CXP_ANTIGUEDAD<=007 THEN CXP_SALDO ELSE 0 END )  AS VI_VIGENTE_000_HASTA_007, 
			SUM( CASE   WHEN  007< CXP_ANTIGUEDAD AND CXP_ANTIGUEDAD<=014 THEN CXP_SALDO ELSE 0 END )  AS VI_VIGENTE_008_HASTA_014, 
			SUM( CASE   WHEN  014< CXP_ANTIGUEDAD AND CXP_ANTIGUEDAD<=021 THEN CXP_SALDO ELSE 0 END )  AS VI_VIGENTE_015_HASTA_021, 
			SUM( CASE   WHEN  021< CXP_ANTIGUEDAD AND CXP_ANTIGUEDAD<=028 THEN CXP_SALDO ELSE 0 END )  AS VI_VIGENTE_022_HASTA_028, 
			SUM( CASE   WHEN  028< CXP_ANTIGUEDAD                         THEN CXP_SALDO ELSE 0 END )  AS VI_VIGENTE_MAYOR_A_028
			-- =========================
	FROM	@TA_FACTURA_CXP AS TBL
	GROUP BY CXP_S_RAZON_SOCIAL, CXP_D_RAZON_SOCIAL, CXP_D_CATEGORIA_PROVEEDOR, CXP_D_PROVEEDOR	-- , CXP.REC_D_CLIENTE
	ORDER BY CXP_S_RAZON_SOCIAL, CXP_D_RAZON_SOCIAL, CXP_D_CATEGORIA_PROVEEDOR, CXP_D_PROVEEDOR

	-- /////////////////////////////////////
GO




-- //////////////////////////////////////////////////////////////
-- // STORED PROCEDURE ---> 
-- //////////////////////////////////////////////////////////////
/*

[dbo].[PG_RP_002_ANTIGUEDAD_SALDOS] 0,0,0, 1,	'',-1,-1, NULL, NULL, NULL

[dbo].[PG_RP_002_ANTIGUEDAD_SALDOS] 0,0,0, 2,	'',-1,-1, NULL, NULL, NULL

[dbo].[PG_RP_002_ANTIGUEDAD_SALDOS] 0,0,0, 3,	'',-1,-1, NULL, NULL, NULL

*/


IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[APG_RP_002_ANTIGUEDAD_SALDOS]') AND type in (N'P', N'PC'))
	DROP PROCEDURE [dbo].[APG_RP_002_ANTIGUEDAD_SALDOS]
GO


CREATE PROCEDURE [dbo].[APG_RP_002_ANTIGUEDAD_SALDOS]
	@PP_L_DEBUG					INT,
	@PP_K_SISTEMA_EXE			INT,
	@PP_K_USUARIO_ACCION		INT,
	-- ===========================
	@PP_TIPO_VISTA_DATOS		INT,
	-- ===========================
	@PP_D_BUSCAR				VARCHAR(255),
	@PP_K_CATEGORIA_PROVEEDOR	INT,
	@PP_K_RAZON_SOCIAL			INT,
	@PP_F_INICIO				DATE,
	@PP_F_FIN					DATE,
	-- ===========================
	@PP_F_PIVOTE				DATE	-- MANDAR SIEMPRE UN NULO
AS			
	
	IF @PP_TIPO_VISTA_DATOS=1
		EXECUTE [dbo].[APG_RP_002A_ANTIGUEDAD_SALDOS_X_PROVEEDOR]		@PP_L_DEBUG, @PP_K_SISTEMA_EXE, @PP_K_USUARIO_ACCION,
																		@PP_D_BUSCAR, @PP_K_CATEGORIA_PROVEEDOR, @PP_K_RAZON_SOCIAL, 
																		@PP_F_INICIO, @PP_F_FIN, @PP_F_PIVOTE				
	-- =======================================================	

	IF @PP_TIPO_VISTA_DATOS=2
		EXECUTE [dbo].[APG_RP_002B_ANTIGUEDAD_SALDOS_X_RAZON_SOCIAL]		@PP_L_DEBUG, @PP_K_SISTEMA_EXE, @PP_K_USUARIO_ACCION,
																		@PP_D_BUSCAR, @PP_K_CATEGORIA_PROVEEDOR, @PP_K_RAZON_SOCIAL, 
																		@PP_F_INICIO, @PP_F_FIN, @PP_F_PIVOTE				
	-- =======================================================

	IF @PP_TIPO_VISTA_DATOS=3		-- WIWI // HGF // PENDIENTE
		EXECUTE [dbo].[APG_RP_002C_ANTIGUEDAD_SALDOS_X_UNIDAD_OPERATIVA]		@PP_L_DEBUG, @PP_K_SISTEMA_EXE, @PP_K_USUARIO_ACCION,
																			@PP_D_BUSCAR, @PP_K_CATEGORIA_PROVEEDOR, @PP_K_RAZON_SOCIAL, 
																			@PP_F_INICIO, @PP_F_FIN, @PP_F_PIVOTE				
	-- =======================================================
GO



-- //////////////////////////////////////////////////////////////
-- //////////////////////////////////////////////////////////////
-- //////////////////////////////////////////////////////////////
