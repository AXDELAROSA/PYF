-- //////////////////////////////////////////////////////////////
-- // ARCHIVO:			
-- //////////////////////////////////////////////////////////////
-- // BASE DE DATOS:	PYF18_Finanzas
-- // MODULO:			FACTURA_CXP
-- // OPERACION:		LIBERACION // STORED PROCEDURE
-- ////////////////////////////////////////////////////////////// 
-- // Autor:			HGF
-- // Fecha creación:	27/SEP/2018
-- ////////////////////////////////////////////////////////////// 

USE [PYF18_Finanzas_V9999_R0] 
GO



-- //////////////////////////////////////////////////////////////





/*

EXECUTE [PG_RP_001_ANTIGUEDAD_SALDOS]	0,0,0, 
										2,
										'DSA130408AM2',		-- @PP_D_BUSCAR					VARCHAR(255),
										-1,		-- @PP_K_CATEGORIA_PROVEEDOR	INT,
										-1,		-- @PP_K_RAZON_SOCIAL			INT,
										NULL,	-- @PP_F_INICIO					DATE,
										NULL,	-- @PP_F_FIN					DATE,
										NULL	-- @PP_F_PIVOTE					DATE	-- MANDAR SIEMPRE UN NULO
										
*/


-- //////////////////////////////////////////////////////////////
-- // STORED PROCEDURE ---> 
-- //////////////////////////////////////////////////////////////

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[PG_RP_001A_ANTIGUEDAD_SALDOS_X_PROVEEDOR]') AND type in (N'P', N'PC'))
	DROP PROCEDURE [dbo].[PG_RP_001A_ANTIGUEDAD_SALDOS_X_PROVEEDOR]
GO


CREATE PROCEDURE [dbo].[PG_RP_001A_ANTIGUEDAD_SALDOS_X_PROVEEDOR]
	@PP_L_DEBUG					INT,
	@PP_K_SISTEMA_EXE			INT,
	@PP_K_USUARIO_ACCION		INT,
	-- ===========================
	@PP_D_BUSCAR				VARCHAR(255),
	@PP_K_CATEGORIA_PROVEEDOR	INT,
	@PP_K_RAZON_SOCIAL			INT,
	@PP_F_INICIO				DATE,
	@PP_F_FIN					DATE,
	-- ===========================
	@PP_F_PIVOTE				DATE	-- MANDAR SIEMPRE UN NULO
AS			
	
	DECLARE		@VP_F_PIVOTE	AS DATE

	IF @PP_F_PIVOTE IS NULL 
		SET		@VP_F_PIVOTE = GETDATE()		
	ELSE
		SET		@VP_F_PIVOTE = @PP_F_PIVOTE	

	-- =========================================		

	DECLARE @VP_K_FOLIO		INT

	EXECUTE [dbo].[PG_RN_OBTENER_ID_X_REFERENCIA]		@PP_D_BUSCAR, 
														@OU_K_ELEMENTO = @VP_K_FOLIO	OUTPUT
	-- =========================================

	DECLARE		@TA_FACTURA_CXP		AS TABLE
			(	CXP_K_FACTURA_CXP				INT,
				CXP_D_PROVEEDOR					VARCHAR(100),
				CXP_D_CATEGORIA_PROVEEDOR		VARCHAR(100),
				CXP_ANTIGUEDAD					INT,
				CXP_SALDO						DECIMAL(19,4)	 )

	-- =========================================

	INSERT INTO @TA_FACTURA_CXP
		(		CXP_K_FACTURA_CXP,
				CXP_D_PROVEEDOR,	CXP_D_CATEGORIA_PROVEEDOR,
				CXP_ANTIGUEDAD,		
				CXP_SALDO	 )
		SELECT	CXP.K_FACTURA_CXP, 
				PRO.D_PROVEEDOR,	CAT.D_CATEGORIA_PROVEEDOR,
				DATEDIFF(dd,@VP_F_PIVOTE,CXP.F_VENCIMIENTO), 
				CXP.SALDO
		FROM	FACTURA_CXP				AS CXP, 
				PROVEEDOR				AS PRO,
				CATEGORIA_PROVEEDOR		AS CAT
		WHERE	CXP.K_PROVEEDOR=PRO.K_PROVEEDOR
		AND		PRO.K_CATEGORIA_PROVEEDOR=CAT.K_CATEGORIA_PROVEEDOR
--WIWI	AND		SOL.K_ESTATUS_SOLICITUD IN ( 2, 3, 4 )				--  #2 AUTORIZADO / #3 OTORGADO / #4 PAGOS
		AND		CXP.SALDO>0
		AND		( @PP_F_INICIO IS NULL			OR	@PP_F_INICIO<=CXP.F_VENCIMIENTO )
		AND		( @PP_F_FIN	IS NULL				OR	@PP_F_FIN>=CXP.F_VENCIMIENTO )
		AND		( @PP_K_RAZON_SOCIAL=-1			OR	@PP_K_RAZON_SOCIAL=CXP.K_RAZON_SOCIAL)
		AND		( @PP_K_CATEGORIA_PROVEEDOR=-1	OR	@PP_K_CATEGORIA_PROVEEDOR=CAT.K_CATEGORIA_PROVEEDOR )
		AND		(	
				PRO.D_PROVEEDOR		LIKE '%'+@PP_D_BUSCAR+'%'	
			AND	PRO.RFC_PROVEEDOR	LIKE '%'+@PP_D_BUSCAR+'%'	
--			OR	SOL.K_SOLICITUD=@VP_K_FOLIO
				)
	
	-- =========================================

	SELECT	
	--		CXP_K_FACTURA_CXP		AS VI_K_SOLICITUD,
			CXP_D_PROVEEDOR			AS VI_D_NOMBRE,
			-- =========================
			SUM( CASE   WHEN                          CXP_ANTIGUEDAD< 000 THEN CXP_SALDO ELSE 0 END )  AS VI_VENCIDO_TOTAL, 
			SUM( CASE   WHEN  000<=CXP_ANTIGUEDAD                         THEN CXP_SALDO ELSE 0 END )  AS VI_VIGENTE_TOTAL, 
			-- =========================
			SUM( CASE   WHEN                          CXP_ANTIGUEDAD<-120 THEN CXP_SALDO ELSE 0 END )  AS VI_VENCIDO_MAS_DE_120,
			SUM( CASE   WHEN -120<=CXP_ANTIGUEDAD AND CXP_ANTIGUEDAD<-090 THEN CXP_SALDO ELSE 0 END )  AS VI_VENCIDO_091_A_120, 	
			SUM( CASE   WHEN -090<=CXP_ANTIGUEDAD AND CXP_ANTIGUEDAD<-060 THEN CXP_SALDO ELSE 0 END )  AS VI_VENCIDO_061_A_090, 	
			SUM( CASE   WHEN -060<=CXP_ANTIGUEDAD AND CXP_ANTIGUEDAD<-030 THEN CXP_SALDO ELSE 0 END )  AS VI_VENCIDO_031_A_060, 
			SUM( CASE   WHEN -030<=CXP_ANTIGUEDAD AND CXP_ANTIGUEDAD< 000 THEN CXP_SALDO ELSE 0 END )  AS VI_VENCIDO_001_A_030, 
			-- =========================
			SUM( CASE   WHEN  000<=CXP_ANTIGUEDAD AND CXP_ANTIGUEDAD<=030 THEN CXP_SALDO ELSE 0 END )  AS VI_VIGENTE_000_HASTA_030, 
			SUM( CASE   WHEN  030< CXP_ANTIGUEDAD AND CXP_ANTIGUEDAD<=060 THEN CXP_SALDO ELSE 0 END )  AS VI_VIGENTE_031_HASTA_060, 
			SUM( CASE   WHEN  060< CXP_ANTIGUEDAD AND CXP_ANTIGUEDAD<=090 THEN CXP_SALDO ELSE 0 END )  AS VI_VIGENTE_061_HASTA_090, 
			SUM( CASE   WHEN  090< CXP_ANTIGUEDAD AND CXP_ANTIGUEDAD<=120 THEN CXP_SALDO ELSE 0 END )  AS VI_VIGENTE_091_HASTA_120, 
			SUM( CASE   WHEN  120< CXP_ANTIGUEDAD                         THEN CXP_SALDO ELSE 0 END )  AS VI_VIGENTE_MAYOR_A_121
	FROM	@TA_FACTURA_CXP AS TBL
	GROUP BY CXP_D_PROVEEDOR	-- , CXP.REC_D_CLIENTE
	ORDER BY CXP_D_PROVEEDOR

	-- /////////////////////////////////////
GO





-- //////////////////////////////////////////////////////////////
-- // STORED PROCEDURE ---> 
-- //////////////////////////////////////////////////////////////

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[PG_RP_001B_ANTIGUEDAD_SALDOS_X_RAZON_SOCIAL]') AND type in (N'P', N'PC'))
	DROP PROCEDURE [dbo].[PG_RP_001B_ANTIGUEDAD_SALDOS_X_RAZON_SOCIAL]
GO


CREATE PROCEDURE [dbo].[PG_RP_001B_ANTIGUEDAD_SALDOS_X_RAZON_SOCIAL]
	@PP_L_DEBUG					INT,
	@PP_K_SISTEMA_EXE			INT,
	@PP_K_USUARIO_ACCION		INT,
	-- ===========================
	@PP_D_BUSCAR				VARCHAR(255),
	@PP_K_CATEGORIA_PROVEEDOR	INT,
	@PP_K_RAZON_SOCIAL			INT,
	@PP_F_INICIO				DATE,
	@PP_F_FIN					DATE,
	-- ===========================
	@PP_F_PIVOTE				DATE	-- MANDAR SIEMPRE UN NULO
AS			
	
	DECLARE		@VP_F_PIVOTE	AS DATE

	IF @PP_F_PIVOTE IS NULL 
		SET		@VP_F_PIVOTE = GETDATE()		
	ELSE
		SET		@VP_F_PIVOTE = @PP_F_PIVOTE	

	-- =========================================		

	DECLARE @VP_K_FOLIO		INT

	EXECUTE [dbo].[PG_RN_OBTENER_ID_X_REFERENCIA]		@PP_D_BUSCAR, 
														@OU_K_ELEMENTO = @VP_K_FOLIO	OUTPUT
	-- =========================================

	DECLARE		@TA_FACTURA_CXP		AS TABLE
			(	CXP_K_FACTURA_CXP				INT,
				CXP_D_RAZON_SOCIAL				VARCHAR(100),
				CXP_D_CATEGORIA_PROVEEDOR		VARCHAR(100),
				CXP_ANTIGUEDAD					INT,
				CXP_SALDO						DECIMAL(19,4)	 )

	-- =========================================

	INSERT INTO @TA_FACTURA_CXP
		(		CXP_K_FACTURA_CXP,
				CXP_D_RAZON_SOCIAL,	CXP_D_CATEGORIA_PROVEEDOR,
				CXP_ANTIGUEDAD,		
				CXP_SALDO	 )
		SELECT	CXP.K_FACTURA_CXP, 
				RAZ.D_RAZON_SOCIAL,	CAT.D_CATEGORIA_PROVEEDOR,
				DATEDIFF(dd,@VP_F_PIVOTE,CXP.F_VENCIMIENTO), 
				CXP.SALDO
		FROM	FACTURA_CXP				AS CXP, 
				RAZON_SOCIAL			AS RAZ,
				PROVEEDOR				AS PRO,
				CATEGORIA_PROVEEDOR		AS CAT
		WHERE	CXP.K_RAZON_SOCIAL=RAZ.K_RAZON_SOCIAL
		AND		CXP.K_PROVEEDOR=PRO.K_PROVEEDOR
		AND		PRO.K_CATEGORIA_PROVEEDOR=CAT.K_CATEGORIA_PROVEEDOR
--WIWI	AND		SOL.K_ESTATUS_SOLICITUD IN ( 2, 3, 4 )				--  #2 AUTORIZADO / #3 OTORGADO / #4 PAGOS
		AND		CXP.SALDO>0
		AND		( @PP_F_INICIO IS NULL			OR	@PP_F_INICIO<=CXP.F_VENCIMIENTO )
		AND		( @PP_F_FIN	IS NULL				OR	@PP_F_FIN>=CXP.F_VENCIMIENTO )
		AND		( @PP_K_RAZON_SOCIAL=-1			OR	@PP_K_RAZON_SOCIAL=CXP.K_RAZON_SOCIAL)
		AND		( @PP_K_CATEGORIA_PROVEEDOR=-1	OR	@PP_K_CATEGORIA_PROVEEDOR=CAT.K_CATEGORIA_PROVEEDOR )
		AND		(	
				RAZ.D_RAZON_SOCIAL	LIKE '%'+@PP_D_BUSCAR+'%'	
			OR	PRO.D_PROVEEDOR		LIKE '%'+@PP_D_BUSCAR+'%'	
			OR	PRO.RFC_PROVEEDOR	LIKE '%'+@PP_D_BUSCAR+'%'	
--			OR	SOL.K_SOLICITUD=@VP_K_FOLIO
				)
	
	-- =========================================

	SELECT	
	--		CXP_K_FACTURA_CXP		AS VI_K_SOLICITUD,
			CXP_D_RAZON_SOCIAL		AS VI_D_NOMBRE,
			-- =========================
			SUM( CASE   WHEN                          CXP_ANTIGUEDAD< 000 THEN CXP_SALDO ELSE 0 END )  AS VI_VENCIDO_TOTAL, 
			SUM( CASE   WHEN  000<=CXP_ANTIGUEDAD                         THEN CXP_SALDO ELSE 0 END )  AS VI_VIGENTE_TOTAL, 
			-- =========================
			SUM( CASE   WHEN                          CXP_ANTIGUEDAD<-120 THEN CXP_SALDO ELSE 0 END )  AS VI_VENCIDO_MAS_DE_120,
			SUM( CASE   WHEN -120<=CXP_ANTIGUEDAD AND CXP_ANTIGUEDAD<-090 THEN CXP_SALDO ELSE 0 END )  AS VI_VENCIDO_091_A_120, 	
			SUM( CASE   WHEN -090<=CXP_ANTIGUEDAD AND CXP_ANTIGUEDAD<-060 THEN CXP_SALDO ELSE 0 END )  AS VI_VENCIDO_061_A_090, 	
			SUM( CASE   WHEN -060<=CXP_ANTIGUEDAD AND CXP_ANTIGUEDAD<-030 THEN CXP_SALDO ELSE 0 END )  AS VI_VENCIDO_031_A_060, 
			SUM( CASE   WHEN -030<=CXP_ANTIGUEDAD AND CXP_ANTIGUEDAD< 000 THEN CXP_SALDO ELSE 0 END )  AS VI_VENCIDO_001_A_030, 
			-- =========================
			SUM( CASE   WHEN  000<=CXP_ANTIGUEDAD AND CXP_ANTIGUEDAD<=030 THEN CXP_SALDO ELSE 0 END )  AS VI_VIGENTE_000_HASTA_030, 
			SUM( CASE   WHEN  030< CXP_ANTIGUEDAD AND CXP_ANTIGUEDAD<=060 THEN CXP_SALDO ELSE 0 END )  AS VI_VIGENTE_031_HASTA_060, 
			SUM( CASE   WHEN  060< CXP_ANTIGUEDAD AND CXP_ANTIGUEDAD<=090 THEN CXP_SALDO ELSE 0 END )  AS VI_VIGENTE_061_HASTA_090, 
			SUM( CASE   WHEN  090< CXP_ANTIGUEDAD AND CXP_ANTIGUEDAD<=120 THEN CXP_SALDO ELSE 0 END )  AS VI_VIGENTE_091_HASTA_120, 
			SUM( CASE   WHEN  120< CXP_ANTIGUEDAD                         THEN CXP_SALDO ELSE 0 END )  AS VI_VIGENTE_MAYOR_A_121
	FROM	@TA_FACTURA_CXP AS TBL
	GROUP BY CXP_D_RAZON_SOCIAL	-- , CXP.REC_D_CLIENTE
	ORDER BY CXP_D_RAZON_SOCIAL

	-- /////////////////////////////////////
GO







-- //////////////////////////////////////////////////////////////
-- // STORED PROCEDURE ---> 
-- //////////////////////////////////////////////////////////////

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[PG_RP_001C_ANTIGUEDAD_SALDOS_X_UNIDAD_OPERATIVA]') AND type in (N'P', N'PC'))
	DROP PROCEDURE [dbo].[PG_RP_001C_ANTIGUEDAD_SALDOS_X_UNIDAD_OPERATIVA]
GO


CREATE PROCEDURE [dbo].[PG_RP_001C_ANTIGUEDAD_SALDOS_X_UNIDAD_OPERATIVA]
	@PP_L_DEBUG					INT,
	@PP_K_SISTEMA_EXE			INT,
	@PP_K_USUARIO_ACCION		INT,
	-- ===========================
	@PP_D_BUSCAR				VARCHAR(255),
	@PP_K_TIPO_UNIDAD_OPERATIVA	INT,
	@PP_K_RAZON_SOCIAL			INT,
	@PP_F_INICIO				DATE,
	@PP_F_FIN					DATE,
	-- ===========================
	@PP_F_PIVOTE				DATE	-- MANDAR SIEMPRE UN NULO
AS			
	
	DECLARE		@VP_F_PIVOTE	AS DATE

	IF @PP_F_PIVOTE IS NULL 
		SET		@VP_F_PIVOTE = GETDATE()		
	ELSE
		SET		@VP_F_PIVOTE = @PP_F_PIVOTE	

	-- =========================================		

	DECLARE @VP_K_FOLIO		INT

	EXECUTE [dbo].[PG_RN_OBTENER_ID_X_REFERENCIA]		@PP_D_BUSCAR, 
														@OU_K_ELEMENTO = @VP_K_FOLIO	OUTPUT
	-- =========================================

	DECLARE		@TA_FACTURA_CXP		AS TABLE
			(	CXP_K_FACTURA_CXP				INT,
				CXP_D_UNIDAD_OPERATIVA			VARCHAR(100),
				CXP_D_TIPO_UO					VARCHAR(100),
				CXP_ANTIGUEDAD					INT,
				CXP_SALDO						DECIMAL(19,4)	 )

	-- =========================================

	INSERT INTO @TA_FACTURA_CXP
		(		CXP_K_FACTURA_CXP,
				CXP_D_UNIDAD_OPERATIVA,	CXP_D_TIPO_UO,
				CXP_ANTIGUEDAD,		
				CXP_SALDO	 )
		SELECT	CXP.K_FACTURA_CXP, 
				PRO.D_UNIDAD_OPERATIVA,	CAT.D_TIPO_UO,
				DATEDIFF(dd,@VP_F_PIVOTE,CXP.F_VENCIMIENTO), 
				CXP.SALDO
		FROM	FACTURA_CXP					AS CXP, 
				UNIDAD_OPERATIVA			AS PRO,
				TIPO_UO						AS CAT
		WHERE	CXP.K_UNIDAD_OPERATIVA=PRO.K_UNIDAD_OPERATIVA
		AND		PRO.K_TIPO_UO=CAT.K_TIPO_UO
--WIWI	AND		SOL.K_ESTATUS_SOLICITUD IN ( 2, 3, 4 )				--  #2 AUTORIZADO / #3 OTORGADO / #4 PAGOS
		AND		CXP.SALDO>0
		AND		( @PP_F_INICIO IS NULL				OR	@PP_F_INICIO<=CXP.F_VENCIMIENTO )
		AND		( @PP_F_FIN	IS NULL					OR	@PP_F_FIN>=CXP.F_VENCIMIENTO )
		AND		( @PP_K_RAZON_SOCIAL=-1				OR	@PP_K_RAZON_SOCIAL=CXP.K_RAZON_SOCIAL)
		AND		( @PP_K_TIPO_UNIDAD_OPERATIVA=-1	OR	@PP_K_TIPO_UNIDAD_OPERATIVA=CAT.K_TIPO_UO )
		AND		(	
				PRO.D_UNIDAD_OPERATIVA		LIKE '%'+@PP_D_BUSCAR+'%'	
--			AND	PRO.RFC_UNIDAD_OPERATIVA	LIKE '%'+@PP_D_BUSCAR+'%'	
--			OR	SOL.K_SOLICITUD=@VP_K_FOLIO
				)
	-- =========================================

	SELECT	
	--		CXP_K_FACTURA_CXP		AS VI_K_SOLICITUD,
			CXP_D_UNIDAD_OPERATIVA			AS VI_D_NOMBRE,
			-- =========================
			SUM( CASE   WHEN                          CXP_ANTIGUEDAD< 000 THEN CXP_SALDO ELSE 0 END )  AS VI_VENCIDO_TOTAL, 
			SUM( CASE   WHEN  000<=CXP_ANTIGUEDAD                         THEN CXP_SALDO ELSE 0 END )  AS VI_VIGENTE_TOTAL, 
			-- =========================
			SUM( CASE   WHEN                          CXP_ANTIGUEDAD<-120 THEN CXP_SALDO ELSE 0 END )  AS VI_VENCIDO_MAS_DE_120,
			SUM( CASE   WHEN -120<=CXP_ANTIGUEDAD AND CXP_ANTIGUEDAD<-090 THEN CXP_SALDO ELSE 0 END )  AS VI_VENCIDO_091_A_120, 	
			SUM( CASE   WHEN -090<=CXP_ANTIGUEDAD AND CXP_ANTIGUEDAD<-060 THEN CXP_SALDO ELSE 0 END )  AS VI_VENCIDO_061_A_090, 	
			SUM( CASE   WHEN -060<=CXP_ANTIGUEDAD AND CXP_ANTIGUEDAD<-030 THEN CXP_SALDO ELSE 0 END )  AS VI_VENCIDO_031_A_060, 
			SUM( CASE   WHEN -030<=CXP_ANTIGUEDAD AND CXP_ANTIGUEDAD< 000 THEN CXP_SALDO ELSE 0 END )  AS VI_VENCIDO_001_A_030, 
			-- =========================
			SUM( CASE   WHEN  000<=CXP_ANTIGUEDAD AND CXP_ANTIGUEDAD<=030 THEN CXP_SALDO ELSE 0 END )  AS VI_VIGENTE_000_HASTA_030, 
			SUM( CASE   WHEN  030< CXP_ANTIGUEDAD AND CXP_ANTIGUEDAD<=060 THEN CXP_SALDO ELSE 0 END )  AS VI_VIGENTE_031_HASTA_060, 
			SUM( CASE   WHEN  060< CXP_ANTIGUEDAD AND CXP_ANTIGUEDAD<=090 THEN CXP_SALDO ELSE 0 END )  AS VI_VIGENTE_061_HASTA_090, 
			SUM( CASE   WHEN  090< CXP_ANTIGUEDAD AND CXP_ANTIGUEDAD<=120 THEN CXP_SALDO ELSE 0 END )  AS VI_VIGENTE_091_HASTA_120, 
			SUM( CASE   WHEN  120< CXP_ANTIGUEDAD                         THEN CXP_SALDO ELSE 0 END )  AS VI_VIGENTE_MAYOR_A_121
	FROM	@TA_FACTURA_CXP AS TBL
	GROUP BY CXP_D_UNIDAD_OPERATIVA	-- , CXP.REC_D_CLIENTE
	ORDER BY CXP_D_UNIDAD_OPERATIVA

	-- /////////////////////////////////////
GO




-- //////////////////////////////////////////////////////////////
-- // STORED PROCEDURE ---> 
-- //////////////////////////////////////////////////////////////

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[PG_RP_001_ANTIGUEDAD_SALDOS]') AND type in (N'P', N'PC'))
	DROP PROCEDURE [dbo].[PG_RP_001_ANTIGUEDAD_SALDOS]
GO


CREATE PROCEDURE [dbo].[PG_RP_001_ANTIGUEDAD_SALDOS]
	@PP_L_DEBUG					INT,
	@PP_K_SISTEMA_EXE			INT,
	@PP_K_USUARIO_ACCION		INT,
	-- ===========================
	@PP_TIPO_VISTA_DATOS		INT,
	-- ===========================
	@PP_D_BUSCAR				VARCHAR(255),
	@PP_K_CATEGORIA_PROVEEDOR	INT,
	@PP_K_RAZON_SOCIAL			INT,
	@PP_F_INICIO				DATE,
	@PP_F_FIN					DATE,
	-- ===========================
	@PP_F_PIVOTE				DATE	-- MANDAR SIEMPRE UN NULO
AS			
	
	IF @PP_TIPO_VISTA_DATOS=1
		EXECUTE [dbo].[PG_RP_001A_ANTIGUEDAD_SALDOS_X_PROVEEDOR]		@PP_L_DEBUG, @PP_K_SISTEMA_EXE, @PP_K_USUARIO_ACCION,
																		@PP_D_BUSCAR, @PP_K_CATEGORIA_PROVEEDOR, @PP_K_RAZON_SOCIAL, 
																		@PP_F_INICIO, @PP_F_FIN, @PP_F_PIVOTE				
	-- =======================================================	

	IF @PP_TIPO_VISTA_DATOS=2
		EXECUTE [dbo].[PG_RP_001B_ANTIGUEDAD_SALDOS_X_RAZON_SOCIAL]		@PP_L_DEBUG, @PP_K_SISTEMA_EXE, @PP_K_USUARIO_ACCION,
																		@PP_D_BUSCAR, @PP_K_CATEGORIA_PROVEEDOR, @PP_K_RAZON_SOCIAL, 
																		@PP_F_INICIO, @PP_F_FIN, @PP_F_PIVOTE				
	-- =======================================================

	IF @PP_TIPO_VISTA_DATOS=3		-- WIWI // HGF // PENDIENTE
		EXECUTE [dbo].[PG_RP_001C_ANTIGUEDAD_SALDOS_X_UNIDAD_OPERATIVA]		@PP_L_DEBUG, @PP_K_SISTEMA_EXE, @PP_K_USUARIO_ACCION,
																			@PP_D_BUSCAR, @PP_K_CATEGORIA_PROVEEDOR, @PP_K_RAZON_SOCIAL, 
																			@PP_F_INICIO, @PP_F_FIN, @PP_F_PIVOTE				
	-- =======================================================
GO



-- //////////////////////////////////////////////////////////////
-- //////////////////////////////////////////////////////////////
-- //////////////////////////////////////////////////////////////
