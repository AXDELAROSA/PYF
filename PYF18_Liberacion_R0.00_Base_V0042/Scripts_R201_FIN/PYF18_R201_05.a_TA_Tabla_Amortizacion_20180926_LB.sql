-- //////////////////////////////////////////////////////////////
-- // ARCHIVO:			
-- //////////////////////////////////////////////////////////////
-- // BASE DE DATOS:	PYF18_Finanzas
-- // MODULO:			
-- // OPERACION:		LIBERACION / TABLAS
-- ////////////////////////////////////////////////////////////// 

USE [PYF18_Finanzas_V9999_R0]
GO

-- //////////////////////////////////////////////////////////////





-- //////////////////////////////////////////////////////////////
-- // DROPS
-- //////////////////////////////////////////////////////////////


IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TABLA_AMORTIZACION]') AND type in (N'U'))
	DROP TABLE [dbo].[TABLA_AMORTIZACION] 
GO


IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ESTATUS_TABLA_AMORTIZACION]') AND type in (N'U'))
	DROP TABLE [dbo].[ESTATUS_TABLA_AMORTIZACION]
GO




/****************************************************************/
/*					ESTATUS_TABLA_AMORTIZACION 					*/
/****************************************************************/


CREATE TABLE [dbo].[ESTATUS_TABLA_AMORTIZACION] (
	[K_ESTATUS_TABLA_AMORTIZACION]	[INT]			NOT NULL,
	[D_ESTATUS_TABLA_AMORTIZACION]	[VARCHAR] (100)	NOT NULL,
	[S_ESTATUS_TABLA_AMORTIZACION]	[VARCHAR] (10)	NOT NULL,
	[O_ESTATUS_TABLA_AMORTIZACION]	[INT]			NOT NULL,
	[C_ESTATUS_TABLA_AMORTIZACION]	[VARCHAR] (255)	NOT NULL,
	[L_ESTATUS_TABLA_AMORTIZACION]	[INT]			NOT NULL
) ON [PRIMARY]
GO


-- //////////////////////////////////////////////////////////////


ALTER TABLE [dbo].[ESTATUS_TABLA_AMORTIZACION]
	ADD CONSTRAINT [PK_ESTATUS_TABLA_AMORTIZACION]
		PRIMARY KEY CLUSTERED ([K_ESTATUS_TABLA_AMORTIZACION])
GO


CREATE UNIQUE NONCLUSTERED 
	INDEX [UN_ESTATUS_TABLA_AMORTIZACION_01_DESCRIPCION] 
	   ON [dbo].[ESTATUS_TABLA_AMORTIZACION] ( [D_ESTATUS_TABLA_AMORTIZACION] )
GO


ALTER TABLE [dbo].[ESTATUS_TABLA_AMORTIZACION] ADD 
	CONSTRAINT [FK_ESTATUS_TABLA_AMORTIZACION_01] 
		FOREIGN KEY ( [L_ESTATUS_TABLA_AMORTIZACION] ) 
		REFERENCES [dbo].[ESTATUS_ACTIVO] ( [K_ESTATUS_ACTIVO] )
GO


-- //////////////////////////////////////////////////////////////


IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[PG_CI_ESTATUS_TABLA_AMORTIZACION]') AND type in (N'P', N'PC'))
	DROP PROCEDURE [dbo].[PG_CI_ESTATUS_TABLA_AMORTIZACION]
GO


CREATE PROCEDURE [dbo].[PG_CI_ESTATUS_TABLA_AMORTIZACION]
	@PP_L_DEBUG							INT,
	@PP_K_SISTEMA_EXE					INT,
	@PP_K_ESTATUS_TABLA_AMORTIZACION	INT,
	@PP_D_ESTATUS_TABLA_AMORTIZACION	VARCHAR(100),
	@PP_S_ESTATUS_TABLA_AMORTIZACION	VARCHAR(10),
	@PP_O_ESTATUS_TABLA_AMORTIZACION	INT,
	@PP_C_ESTATUS_TABLA_AMORTIZACION	VARCHAR(255),
	@PP_L_ESTATUS_TABLA_AMORTIZACION	INT
AS
	
	INSERT INTO ESTATUS_TABLA_AMORTIZACION
		(	K_ESTATUS_TABLA_AMORTIZACION,			D_ESTATUS_TABLA_AMORTIZACION, 
			S_ESTATUS_TABLA_AMORTIZACION,			O_ESTATUS_TABLA_AMORTIZACION,
			C_ESTATUS_TABLA_AMORTIZACION,
			L_ESTATUS_TABLA_AMORTIZACION			)		
	VALUES	
		(	@PP_K_ESTATUS_TABLA_AMORTIZACION,		@PP_D_ESTATUS_TABLA_AMORTIZACION,	
			@PP_S_ESTATUS_TABLA_AMORTIZACION,		@PP_O_ESTATUS_TABLA_AMORTIZACION,
			@PP_C_ESTATUS_TABLA_AMORTIZACION,
			@PP_L_ESTATUS_TABLA_AMORTIZACION		)

	-- =========================================================
GO

EXECUTE [dbo].[PG_CI_ESTATUS_TABLA_AMORTIZACION] 0, 0, 1, 'PENDIENTE',	'PENDT', 10, '', 1
EXECUTE [dbo].[PG_CI_ESTATUS_TABLA_AMORTIZACION] 0, 0, 2, 'POR PAGAR',	'XPAGR', 30, '', 1
EXECUTE [dbo].[PG_CI_ESTATUS_TABLA_AMORTIZACION] 0, 0, 3, 'PAGADO',		'PAGDO', 20, '', 1
EXECUTE [dbo].[PG_CI_ESTATUS_TABLA_AMORTIZACION] 0, 0, 4, 'CANCELADA',	'CANCL', 40, '', 1
GO




/****************************************************************/
/*						TABLA_AMORTIZACION						*/
/****************************************************************/

CREATE TABLE [dbo].[TABLA_AMORTIZACION] (
	[K_TABLA_AMORTIZACION]			[INT]			NOT NULL,
	-- ========================
	[K_CREDITO_BANCARIO]			[INT]			NOT NULL,
	[K_ESTATUS_TABLA_AMORTIZACION]	[INT]			NOT NULL,
	[N_PERIODO]						[INT]			NOT NULL,
	[F_PERIODO_INICIO]				[DATE]			NOT NULL,
	[F_PERIODO_FIN]					[DATE]			NOT NULL,
	[N_DIAS_PERIODO]				[INT]			NOT NULL,
	-- ========================
	[SALDO_INICIAL]					DECIMAL(19,4)	NOT NULL,
	[INTERESES_GENERADOS]			DECIMAL(19,4)	NOT NULL,
	[COMISIONES_BANCO]				DECIMAL(19,4)	NOT NULL,
	[AMORTIZACION_PERIODO]			DECIMAL(19,4)	NOT NULL,
	[SALDO_ACTUALIZADO]				DECIMAL(19,4)	NOT NULL,
	[PAGO_INTERESES]				DECIMAL(19,4)	NOT NULL,
	[PAGO_COMISIONES]				DECIMAL(19,4)	NOT NULL,
	[PAGO_AMORTIZACION]				DECIMAL(19,4)	NOT NULL,
	[PAGO_TOTAL]					DECIMAL(19,4)	NOT NULL,
	[SALDO_FINAL]					DECIMAL(19,4)	NOT NULL,
	-- ========================
	[L_VIGENTE]						[INT]			NOT NULL,
	[L_EDITADO]						[INT]			NOT NULL,
	[L_RECALCULAR]					[INT]			NOT NULL
) ON [PRIMARY]
GO

-- //////////////////////////////////////////////////////


ALTER TABLE [dbo].[TABLA_AMORTIZACION]
	ADD CONSTRAINT [PK_TABLA_AMORTIZACION]
		PRIMARY KEY CLUSTERED ([K_TABLA_AMORTIZACION])
GO

/*
CREATE UNIQUE NONCLUSTERED 
	INDEX [UN_TABLA_AMORTIZACION_01_TUPLA] 
	   ON [dbo].[TABLA_AMORTIZACION] ( 	[K_CREDITO_BANCARIO], [N_PERIODO]	 )
GO
*/

ALTER TABLE [dbo].[TABLA_AMORTIZACION] ADD 
	CONSTRAINT [FK_TABLA_AMORTIZACION_01] 
		FOREIGN KEY ([K_CREDITO_BANCARIO]) 
		REFERENCES [dbo].[CREDITO_BANCARIO] ([K_CREDITO_BANCARIO]),
	CONSTRAINT [FK_TABLA_AMORTIZACION_02] 
		FOREIGN KEY ([K_ESTATUS_TABLA_AMORTIZACION]) 
		REFERENCES [dbo].[ESTATUS_TABLA_AMORTIZACION] ([K_ESTATUS_TABLA_AMORTIZACION])
GO


-- //////////////////////////////////////////////////////////////


ALTER TABLE [dbo].[TABLA_AMORTIZACION] 
	ADD		[K_USUARIO_ALTA]		[INT]		NOT NULL,
			[F_ALTA]				[DATETIME]	NOT NULL,
			[K_USUARIO_CAMBIO]		[INT]		NOT NULL,
			[F_CAMBIO]				[DATETIME]	NOT NULL;
GO


ALTER TABLE [dbo].[TABLA_AMORTIZACION] ADD 
	CONSTRAINT [FK_TABLA_AMORTIZACION_USUARIO_ALTA]  
		FOREIGN KEY ([K_USUARIO_ALTA]) 
		REFERENCES [dbo].[USUARIO] ([K_USUARIO]),
	CONSTRAINT [FK_TABLA_AMORTIZACION_USUARIO_CAMBIO]  
		FOREIGN KEY ([K_USUARIO_CAMBIO]) 
		REFERENCES [dbo].[USUARIO] ([K_USUARIO])
GO


-- //////////////////////////////////////////////////////


IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[PG_CI_TABLA_AMORTIZACION]') AND type in (N'P', N'PC'))
	DROP PROCEDURE [dbo].[PG_CI_TABLA_AMORTIZACION]
GO


CREATE PROCEDURE [dbo].[PG_CI_TABLA_AMORTIZACION]
	@PP_L_DEBUG							INT,
	@PP_K_SISTEMA_EXE					INT,
	@PP_K_USUARIO_ACCION				INT,
	-- ==============================================
	@PP_K_TABLA_AMORTIZACION			INT,
	@PP_K_CREDITO_BANCARIO				INT,
	@PP_K_ESTATUS_TABLA_AMORTIZACION	INT,
	@PP_N_PERIODO						INT,
	@PP_F_PERIODO_INICIO				DATE,
	@PP_F_PERIODO_FIN					DATE,
	@PP_N_DIAS_PERIODO					INT,
	@PP_SALDO_INICIAL					DECIMAL (19,6),
	@PP_INTERESES_GENERADOS				DECIMAL (19,6),
	@PP_COMISIONES_BANCO				DECIMAL (19,6),
	@PP_SALDO_ACTUALIZADO				DECIMAL (19,6),
	@PP_PAGO_INTERESES					DECIMAL (19,6),
	@PP_PAGO_COMISIONES					DECIMAL (19,6),
	@PP_PAGO_AMORTIZACION				DECIMAL (19,6),
	@PP_PAGO_TOTAL						DECIMAL (19,6),
	@PP_SALDO_FINAL						DECIMAL (19,6),
	@PP_L_VIGENTE						INT,
	@PP_L_EDITADO						INT,
	@PP_L_RECALCULAR					INT
AS

	

	INSERT INTO TABLA_AMORTIZACION
		(	K_TABLA_AMORTIZACION,				K_CREDITO_BANCARIO,
			K_ESTATUS_TABLA_AMORTIZACION,		N_PERIODO,
			F_PERIODO_INICIO,					F_PERIODO_FIN,
			N_DIAS_PERIODO,						SALDO_INICIAL,
			INTERESES_GENERADOS,				COMISIONES_BANCO,
			SALDO_ACTUALIZADO,					PAGO_INTERESES,
			PAGO_COMISIONES,					PAGO_AMORTIZACION,
			PAGO_TOTAL,							SALDO_FINAL,
			L_VIGENTE,							L_EDITADO,
			L_RECALCULAR,
			-- ======================================
			K_USUARIO_ALTA,						F_ALTA,
			K_USUARIO_CAMBIO,					F_CAMBIO		)
	VALUES	
		(	@PP_K_TABLA_AMORTIZACION,			@PP_K_CREDITO_BANCARIO,
			@PP_K_ESTATUS_TABLA_AMORTIZACION,	@PP_N_PERIODO,
			@PP_F_PERIODO_INICIO,				@PP_F_PERIODO_FIN,
			@PP_N_DIAS_PERIODO,					@PP_SALDO_INICIAL,
			@PP_INTERESES_GENERADOS,			@PP_COMISIONES_BANCO,
			@PP_SALDO_ACTUALIZADO,				@PP_PAGO_INTERESES,
			@PP_PAGO_COMISIONES,				@PP_PAGO_AMORTIZACION,
			@PP_PAGO_TOTAL,						@PP_SALDO_FINAL,
			@PP_L_VIGENTE,						@PP_L_EDITADO,
			@PP_L_RECALCULAR,
			-- ======================================
			@PP_K_USUARIO_ACCION,				GETDATE(),
			@PP_K_USUARIO_ACCION,				GETDATE()		)
	
	-- ==============================================
GO



-- //////////////////////////////////////////////////////////////
-- //////////////////////////////////////////////////////////////
-- //////////////////////////////////////////////////////////////
