-- //////////////////////////////////////////////////////////////
-- // ARCHIVO:			
-- //////////////////////////////////////////////////////////////
-- // BASE DE DATOS:	PYF18_Finanzas
-- // MODULO:			
-- // OPERACION:		LIBERACION / STORED PROCEDURE
-- //////////////////////////////////////////////////////////////
-- // Autor:			HECTOR A. GONZALEZ DE LA FUENTE
-- // Fecha creación:	11/OCT/2018
-- ////////////////////////////////////////////////////////////// 

USE [PYF18_Finanzas_V9999_R0]
GO

-- //////////////////////////////////////////////////////////////




-- //////////////////////////////////////////////////////////////







-- //////////////////////////////////////////////////////////////
-- // STORED PROCEDURE --->  LISTADO
-- //////////////////////////////////////////////////////////////
--	EXECUTE [dbo].[PG_LI_GESTION_TESORERIA_1_RESUMEN]	0,0,0,	-1,-1,-1, '05/OCT/2018'

--	EXECUTE [dbo].[PG_LI_GESTION_TESORERIA_1_RESUMEN]	0,0,0,	36,-1,-1, '05/OCT/2018'

--	EXECUTE [dbo].[PG_LI_GESTION_TESORERIA_1_RESUMEN]	0,0,0,	36,41,-1, '05/OCT/2018'

--	EXECUTE [dbo].[PG_LI_GESTION_TESORERIA_1_RESUMEN]	0,0,0,	49,-1,-1, '05/OCT/2018'

--	EXECUTE [dbo].[PG_LI_GESTION_TESORERIA_1_RESUMEN]	0,0,0,	47,-1,-1, '05/OCT/2018'

-- SELECT * FROM INSTRUCCION


IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[PG_LI_GESTION_TESORERIA_1_RESUMEN]') AND type in (N'P', N'PC'))
	DROP PROCEDURE [dbo].[PG_LI_GESTION_TESORERIA_1_RESUMEN]
GO	


CREATE PROCEDURE [dbo].[PG_LI_GESTION_TESORERIA_1_RESUMEN]
	@PP_L_DEBUG						INT,
	@PP_K_SISTEMA_EXE				INT,
	@PP_K_USUARIO_ACCION			INT,
	-- ===========================
	@PP_L_DESGLOSAR_X_UNO			INT,
	-- ===========================
	@PP_K_RAZON_SOCIAL				INT,
	@PP_K_UNIDAD_OPERATIVA			INT,
	@PP_K_CUENTA_BANCO				INT,
	@PP_F_PIVOTE					DATE
AS			

	DECLARE @VP_MENSAJE		VARCHAR(300)
	
	SET		@VP_MENSAJE		= ''
	
	-- ///////////////////////////////////////////

	IF @VP_MENSAJE=''
		EXECUTE [dbo].[PG_RN_DATA_ACCESO_SELECT]	@PP_L_DEBUG, @PP_K_SISTEMA_EXE, @PP_K_USUARIO_ACCION,	
													8, -- @PP_K_DATA_SISTEMA,	
													@OU_RESULTADO_VALIDACION = @VP_MENSAJE		OUTPUT
	-- ///////////////////////////////////////////

	DECLARE @VP_LI_N_REGISTROS		INT
	
	SET @VP_LI_N_REGISTROS = 1000
	
	EXECUTE [dbo].[PG_SK_CONFIGURACION_LI_N_REGISTROS_GET]	@PP_L_DEBUG, @PP_K_SISTEMA_EXE,
															1,
															@OU_LI_N_REGISTROS = @VP_LI_N_REGISTROS		OUTPUT		
	-- =========================================	
	
	IF NOT (@VP_MENSAJE='')
		SET @VP_LI_N_REGISTROS = 0

	-- ///////////////////////////////////////////

	CREATE TABLE	#VP_TA_CATALOGO	
					(	TA_K_RUBRO_FLUJO				INT,
						TA_O_CATALOGO					INT,
						TA_F_OPERACION					DATE,
						-- =========================
						[D_RAZON_SOCIAL]				VARCHAR(200),
						[S_RAZON_SOCIAL]				VARCHAR(200),
						[D_UNIDAD_OPERATIVA]			VARCHAR(200),
						[S_UNIDAD_OPERATIVA]			VARCHAR(200),
						[IMPORTE]						DECIMAL(19,4),	
						[IMPORTE_LIBRO]					DECIMAL(19,4),
						[IMPORTE_CONCILIADO]			DECIMAL(19,4)	)
	
	-- ///////////////////////////////////////////////////////////////////// 
	-- >>> INGRESO // K_RUBRO_FLUJO = #020 INGRESO

	INSERT INTO	#VP_TA_CATALOGO	
			(	TA_K_RUBRO_FLUJO, TA_O_CATALOGO, TA_F_OPERACION,
				-- =========================
				[D_RAZON_SOCIAL], [S_RAZON_SOCIAL],
				[D_UNIDAD_OPERATIVA], [S_UNIDAD_OPERATIVA],
				[IMPORTE], [IMPORTE_LIBRO], [IMPORTE_CONCILIADO]	)
		SELECT	020, 2, F_OPERACION,		
				-- =========================
				[D_RAZON_SOCIAL], [S_RAZON_SOCIAL],
				[D_UNIDAD_OPERATIVA], [S_UNIDAD_OPERATIVA],
				INGRESO_LIBRO, 0, 0
		FROM	RESUMEN_FLUJO_DIARIO_X_UNO, 
				VI_UNIDAD_OPERATIVA_CATALOGOS
		WHERE	RESUMEN_FLUJO_DIARIO_X_UNO.K_UNIDAD_OPERATIVA=VI_UNIDAD_OPERATIVA_CATALOGOS.VI_K_UNIDAD_OPERATIVA
		AND		( @PP_K_RAZON_SOCIAL=-1			OR	@PP_K_RAZON_SOCIAL=VI_UNIDAD_OPERATIVA_CATALOGOS.VI_K_RAZON_SOCIAL )
		AND		( @PP_K_UNIDAD_OPERATIVA=-1		OR	@PP_K_UNIDAD_OPERATIVA=VI_UNIDAD_OPERATIVA_CATALOGOS.VI_K_UNIDAD_OPERATIVA )
		AND		RESUMEN_FLUJO_DIARIO_X_UNO.F_OPERACION=@PP_F_PIVOTE

	-- ///////////////////////////////////////////////////////////////////// 
	-- >>> [GAS] // K_RUBRO_FLUJO = #030 GAS

	INSERT INTO	#VP_TA_CATALOGO	
			(	TA_K_RUBRO_FLUJO, TA_O_CATALOGO, TA_F_OPERACION,
				-- =========================
				[D_RAZON_SOCIAL], [S_RAZON_SOCIAL],
				[D_UNIDAD_OPERATIVA], [S_UNIDAD_OPERATIVA],
				[IMPORTE], [IMPORTE_LIBRO], [IMPORTE_CONCILIADO]	)
		SELECT	030, 2, F_OPERACION,		
				-- =========================
				[D_RAZON_SOCIAL], [S_RAZON_SOCIAL],
				[D_UNIDAD_OPERATIVA], [S_UNIDAD_OPERATIVA],
				GAS, 0, 0
		FROM	RESUMEN_FLUJO_DIARIO_X_UNO, 
				VI_UNIDAD_OPERATIVA_CATALOGOS
		WHERE	RESUMEN_FLUJO_DIARIO_X_UNO.K_UNIDAD_OPERATIVA=VI_UNIDAD_OPERATIVA_CATALOGOS.VI_K_UNIDAD_OPERATIVA
		AND		( @PP_K_RAZON_SOCIAL=-1			OR	@PP_K_RAZON_SOCIAL=VI_UNIDAD_OPERATIVA_CATALOGOS.VI_K_RAZON_SOCIAL )
		AND		( @PP_K_UNIDAD_OPERATIVA=-1		OR	@PP_K_UNIDAD_OPERATIVA=VI_UNIDAD_OPERATIVA_CATALOGOS.VI_K_UNIDAD_OPERATIVA )
		AND		RESUMEN_FLUJO_DIARIO_X_UNO.F_OPERACION=@PP_F_PIVOTE

	-- ///////////////////////////////////////////////////////////////////// 
	-- >>> [FLETE] // K_RUBRO_FLUJO = #040 FLETE

	INSERT INTO	#VP_TA_CATALOGO	
			(	TA_K_RUBRO_FLUJO, TA_O_CATALOGO, TA_F_OPERACION,
				-- =========================
				[D_RAZON_SOCIAL], [S_RAZON_SOCIAL],
				[D_UNIDAD_OPERATIVA], [S_UNIDAD_OPERATIVA],
				[IMPORTE], [IMPORTE_LIBRO], [IMPORTE_CONCILIADO]	)
		SELECT	040, 2, F_OPERACION,		
				-- =========================
				[D_RAZON_SOCIAL], [S_RAZON_SOCIAL],
				[D_UNIDAD_OPERATIVA], [S_UNIDAD_OPERATIVA],
				FLETE, 0, 0
		FROM	RESUMEN_FLUJO_DIARIO_X_UNO, 
				VI_UNIDAD_OPERATIVA_CATALOGOS
		WHERE	RESUMEN_FLUJO_DIARIO_X_UNO.K_UNIDAD_OPERATIVA=VI_UNIDAD_OPERATIVA_CATALOGOS.VI_K_UNIDAD_OPERATIVA
		AND		( @PP_K_RAZON_SOCIAL=-1			OR	@PP_K_RAZON_SOCIAL=VI_UNIDAD_OPERATIVA_CATALOGOS.VI_K_RAZON_SOCIAL )
		AND		( @PP_K_UNIDAD_OPERATIVA=-1		OR	@PP_K_UNIDAD_OPERATIVA=VI_UNIDAD_OPERATIVA_CATALOGOS.VI_K_UNIDAD_OPERATIVA )
		AND		RESUMEN_FLUJO_DIARIO_X_UNO.F_OPERACION=@PP_F_PIVOTE

	-- ///////////////////////////////////////////////////////////////////// 
	-- >>> [OBLIGACIONES] // K_RUBRO_FLUJO = #050 OBLIGACIONES

	INSERT INTO	#VP_TA_CATALOGO	
			(	TA_K_RUBRO_FLUJO, TA_O_CATALOGO, TA_F_OPERACION,
				-- =========================
				[D_RAZON_SOCIAL], [S_RAZON_SOCIAL],
				[D_UNIDAD_OPERATIVA], [S_UNIDAD_OPERATIVA],
				[IMPORTE], [IMPORTE_LIBRO], [IMPORTE_CONCILIADO]	)
		SELECT	050, 2, F_OPERACION,		
				-- =========================
				[D_RAZON_SOCIAL], [S_RAZON_SOCIAL],
				[D_UNIDAD_OPERATIVA], [S_UNIDAD_OPERATIVA],
				OBLIGACIONES, 0, 0
		FROM	RESUMEN_FLUJO_DIARIO_X_UNO, 
				VI_UNIDAD_OPERATIVA_CATALOGOS
		WHERE	RESUMEN_FLUJO_DIARIO_X_UNO.K_UNIDAD_OPERATIVA=VI_UNIDAD_OPERATIVA_CATALOGOS.VI_K_UNIDAD_OPERATIVA
		AND		( @PP_K_RAZON_SOCIAL=-1			OR	@PP_K_RAZON_SOCIAL=VI_UNIDAD_OPERATIVA_CATALOGOS.VI_K_RAZON_SOCIAL )
		AND		( @PP_K_UNIDAD_OPERATIVA=-1		OR	@PP_K_UNIDAD_OPERATIVA=VI_UNIDAD_OPERATIVA_CATALOGOS.VI_K_UNIDAD_OPERATIVA )
		AND		RESUMEN_FLUJO_DIARIO_X_UNO.F_OPERACION=@PP_F_PIVOTE

	-- ///////////////////////////////////////////////////////////////////// 
	-- >>> [NOMINA] // K_RUBRO_FLUJO = #060 NOMINA
	
	INSERT INTO	#VP_TA_CATALOGO	
			(	TA_K_RUBRO_FLUJO, TA_O_CATALOGO, TA_F_OPERACION,
				-- =========================
				[D_RAZON_SOCIAL], [S_RAZON_SOCIAL],
				[D_UNIDAD_OPERATIVA], [S_UNIDAD_OPERATIVA],
				[IMPORTE], [IMPORTE_LIBRO], [IMPORTE_CONCILIADO]	)
		SELECT	060, 2, F_OPERACION,		
				-- =========================
				[D_RAZON_SOCIAL], [S_RAZON_SOCIAL],
				[D_UNIDAD_OPERATIVA], [S_UNIDAD_OPERATIVA],
				NOMINA, 0, 0
		FROM	RESUMEN_FLUJO_DIARIO_X_UNO, 
				VI_UNIDAD_OPERATIVA_CATALOGOS
		WHERE	RESUMEN_FLUJO_DIARIO_X_UNO.K_UNIDAD_OPERATIVA=VI_UNIDAD_OPERATIVA_CATALOGOS.VI_K_UNIDAD_OPERATIVA
		AND		( @PP_K_RAZON_SOCIAL=-1			OR	@PP_K_RAZON_SOCIAL=VI_UNIDAD_OPERATIVA_CATALOGOS.VI_K_RAZON_SOCIAL )
		AND		( @PP_K_UNIDAD_OPERATIVA=-1		OR	@PP_K_UNIDAD_OPERATIVA=VI_UNIDAD_OPERATIVA_CATALOGOS.VI_K_UNIDAD_OPERATIVA )
		AND		RESUMEN_FLUJO_DIARIO_X_UNO.F_OPERACION=@PP_F_PIVOTE

	-- ///////////////////////////////////////////////////////////////////// 
	-- >>> [CXP] // K_RUBRO_FLUJO = #070 CXP
	
	INSERT INTO	#VP_TA_CATALOGO	
			(	TA_K_RUBRO_FLUJO, TA_O_CATALOGO, TA_F_OPERACION,
				-- =========================
				[D_RAZON_SOCIAL], [S_RAZON_SOCIAL],
				[D_UNIDAD_OPERATIVA], [S_UNIDAD_OPERATIVA],
				[IMPORTE], [IMPORTE_LIBRO], [IMPORTE_CONCILIADO]	)
		SELECT	070, 2, F_OPERACION,		
				-- =========================
				[D_RAZON_SOCIAL], [S_RAZON_SOCIAL],
				[D_UNIDAD_OPERATIVA], [S_UNIDAD_OPERATIVA],
				CXP, 0, 0
		FROM	RESUMEN_FLUJO_DIARIO_X_UNO, 
				VI_UNIDAD_OPERATIVA_CATALOGOS
		WHERE	RESUMEN_FLUJO_DIARIO_X_UNO.K_UNIDAD_OPERATIVA=VI_UNIDAD_OPERATIVA_CATALOGOS.VI_K_UNIDAD_OPERATIVA
		AND		( @PP_K_RAZON_SOCIAL=-1			OR	@PP_K_RAZON_SOCIAL=VI_UNIDAD_OPERATIVA_CATALOGOS.VI_K_RAZON_SOCIAL )
		AND		( @PP_K_UNIDAD_OPERATIVA=-1		OR	@PP_K_UNIDAD_OPERATIVA=VI_UNIDAD_OPERATIVA_CATALOGOS.VI_K_UNIDAD_OPERATIVA )
		AND		RESUMEN_FLUJO_DIARIO_X_UNO.F_OPERACION=@PP_F_PIVOTE

	-- ///////////////////////////////////////////////////////////////////// 
	-- >>> [TRASPASOS] // K_RUBRO_FLUJO = #080 TRASPASOS

	INSERT INTO	#VP_TA_CATALOGO	
			(	TA_K_RUBRO_FLUJO, TA_O_CATALOGO, TA_F_OPERACION,
				-- =========================
				[D_RAZON_SOCIAL], [S_RAZON_SOCIAL],
				[D_UNIDAD_OPERATIVA], [S_UNIDAD_OPERATIVA],
				[IMPORTE], [IMPORTE_LIBRO], [IMPORTE_CONCILIADO]	)
		SELECT	080, 2, F_OPERACION,		
				-- =========================
				[D_RAZON_SOCIAL], [S_RAZON_SOCIAL],
				[D_UNIDAD_OPERATIVA], [S_UNIDAD_OPERATIVA],
				TRASPASOS, 0, 0
		FROM	RESUMEN_FLUJO_DIARIO_X_UNO, 
				VI_UNIDAD_OPERATIVA_CATALOGOS
		WHERE	RESUMEN_FLUJO_DIARIO_X_UNO.K_UNIDAD_OPERATIVA=VI_UNIDAD_OPERATIVA_CATALOGOS.VI_K_UNIDAD_OPERATIVA
		AND		( @PP_K_RAZON_SOCIAL=-1			OR	@PP_K_RAZON_SOCIAL=VI_UNIDAD_OPERATIVA_CATALOGOS.VI_K_RAZON_SOCIAL )
		AND		( @PP_K_UNIDAD_OPERATIVA=-1		OR	@PP_K_UNIDAD_OPERATIVA=VI_UNIDAD_OPERATIVA_CATALOGOS.VI_K_UNIDAD_OPERATIVA )
		AND		RESUMEN_FLUJO_DIARIO_X_UNO.F_OPERACION=@PP_F_PIVOTE

	-- ///////////////////////////////////////////////////////////////////// 
	-- >>> [GASTO_CORPORATIVO] // K_RUBRO_FLUJO = #090 GASTO CORPORATIVO

	INSERT INTO	#VP_TA_CATALOGO	
			(	TA_K_RUBRO_FLUJO, TA_O_CATALOGO, TA_F_OPERACION,
				-- =========================
				[D_RAZON_SOCIAL], [S_RAZON_SOCIAL],
				[D_UNIDAD_OPERATIVA], [S_UNIDAD_OPERATIVA],
				[IMPORTE], [IMPORTE_LIBRO], [IMPORTE_CONCILIADO]	)
		SELECT	090, 2, F_OPERACION,		
				-- =========================
				[D_RAZON_SOCIAL], [S_RAZON_SOCIAL],
				[D_UNIDAD_OPERATIVA], [S_UNIDAD_OPERATIVA],
				GASTO_CORPORATIVO, 0, 0
		FROM	RESUMEN_FLUJO_DIARIO_X_UNO, 
				VI_UNIDAD_OPERATIVA_CATALOGOS
		WHERE	RESUMEN_FLUJO_DIARIO_X_UNO.K_UNIDAD_OPERATIVA=VI_UNIDAD_OPERATIVA_CATALOGOS.VI_K_UNIDAD_OPERATIVA
		AND		( @PP_K_RAZON_SOCIAL=-1			OR	@PP_K_RAZON_SOCIAL=VI_UNIDAD_OPERATIVA_CATALOGOS.VI_K_RAZON_SOCIAL )
		AND		( @PP_K_UNIDAD_OPERATIVA=-1		OR	@PP_K_UNIDAD_OPERATIVA=VI_UNIDAD_OPERATIVA_CATALOGOS.VI_K_UNIDAD_OPERATIVA )
		AND		RESUMEN_FLUJO_DIARIO_X_UNO.F_OPERACION=@PP_F_PIVOTE

	-- ///////////////////////////////////////////

	IF @PP_L_DESGLOSAR_X_UNO=1
		-- ======================================= RAZON SOCIAL / UNIDAD OPERATIVA
		SELECT	D_RUBRO_FLUJO, 
				#VP_TA_CATALOGO.*
		FROM	#VP_TA_CATALOGO, RUBRO_FLUJO	
		WHERE	#VP_TA_CATALOGO.TA_K_RUBRO_FLUJO=RUBRO_FLUJO.K_RUBRO_FLUJO
		ORDER BY D_RAZON_SOCIAL, D_UNIDAD_OPERATIVA, O_RUBRO_FLUJO
	ELSE
		-- ======================================= RAZON SOCIAL
		SELECT	D_RUBRO_FLUJO, O_RUBRO_FLUJO,
				TA_K_RUBRO_FLUJO, TA_O_CATALOGO, TA_F_OPERACION,
				-- =========================
				[D_RAZON_SOCIAL], [S_RAZON_SOCIAL],
				'.' AS [D_UNIDAD_OPERATIVA], '.' AS [S_UNIDAD_OPERATIVA],
				SUM([IMPORTE]) AS IMPORTE, SUM([IMPORTE_LIBRO]) AS IMPORTE_LIBRO, SUM([IMPORTE_CONCILIADO]) AS IMPORTE_CONCILIADO 
		FROM	#VP_TA_CATALOGO, RUBRO_FLUJO	
		WHERE	#VP_TA_CATALOGO.TA_K_RUBRO_FLUJO=RUBRO_FLUJO.K_RUBRO_FLUJO
		GROUP BY	D_RUBRO_FLUJO, O_RUBRO_FLUJO,
					TA_K_RUBRO_FLUJO, TA_O_CATALOGO, TA_F_OPERACION,
					-- =========================
					[D_RAZON_SOCIAL], [S_RAZON_SOCIAL]
		ORDER BY D_RAZON_SOCIAL, D_UNIDAD_OPERATIVA, O_RUBRO_FLUJO

	-- //////////////////////////////////////////////////////////////
GO









-- //////////////////////////////////////////////////////////////
-- // STORED PROCEDURE --->  LISTADO
-- //////////////////////////////////////////////////////////////
--	
/*


EXECUTE [dbo].[PG_LI_GESTION_TESORERIA_2_INGRESOS]	0,0,0,		1, -1,-1,	'06/OCT/2018'


EXECUTE [dbo].[PG_LI_GESTION_TESORERIA_2_INGRESOS]	0,0,0,		0, -1,-1,	'06/OCT/2018'


*/




IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[PG_LI_GESTION_TESORERIA_2_INGRESOS]') AND type in (N'P', N'PC'))
	DROP PROCEDURE [dbo].[PG_LI_GESTION_TESORERIA_2_INGRESOS]
GO	


CREATE PROCEDURE [dbo].[PG_LI_GESTION_TESORERIA_2_INGRESOS]
	@PP_L_DEBUG						INT,
	@PP_K_SISTEMA_EXE				INT,
	@PP_K_USUARIO_ACCION			INT,
	-- ===========================
	@PP_L_DESGLOSAR_X_UNO			INT,
	-- ===========================
	@PP_K_RAZON_SOCIAL				INT,
	@PP_K_UNIDAD_OPERATIVA			INT,
	@PP_F_PIVOTE					DATE
AS			

	DECLARE @VP_MENSAJE		VARCHAR(300)
	
	SET		@VP_MENSAJE		= ''
	
	-- ///////////////////////////////////////////

	IF @VP_MENSAJE=''
		EXECUTE [dbo].[PG_RN_DATA_ACCESO_SELECT]	@PP_L_DEBUG, @PP_K_SISTEMA_EXE, @PP_K_USUARIO_ACCION,	
													8, -- @PP_K_DATA_SISTEMA,	
													@OU_RESULTADO_VALIDACION = @VP_MENSAJE		OUTPUT
	-- ///////////////////////////////////////////

	DECLARE @VP_LI_N_REGISTROS		INT
	
	SET @VP_LI_N_REGISTROS = 1000
	
	EXECUTE [dbo].[PG_SK_CONFIGURACION_LI_N_REGISTROS_GET]	@PP_L_DEBUG, @PP_K_SISTEMA_EXE,
															1, -- WIWI // @VP_L_APLICAR_MAX_ROWS,
															@OU_LI_N_REGISTROS = @VP_LI_N_REGISTROS		OUTPUT		
	-- =========================================	
	
	IF NOT (@VP_MENSAJE='')
		SET @VP_LI_N_REGISTROS = 0

	-- ///////////////////////////////////////////

	IF @PP_L_DESGLOSAR_X_UNO=1
		-- ======================================= RAZON SOCIAL / UNIDAD OPERATIVA
		SELECT	FECHA.FECHA_YYYY, FECHA.K_TIEMPO_MES, [S_TIEMPO_MES],		
				RAZON_SOCIAL.K_RAZON_SOCIAL, D_RAZON_SOCIAL, S_RAZON_SOCIAL,
				D_UNIDAD_OPERATIVA, S_UNIDAD_OPERATIVA,
				D_TIPO_LIBRO_INGRESOS, S_TIPO_LIBRO_INGRESOS,	
				123.45 AS TOTAL,
				456.78 AS POR_CONCILIAR,
				SUM(MONTO_MOVIMIENTO) AS CONCILIADO
		FROM	MOVIMIENTO_BANCO, USUARIO,
				TIEMPO_FECHA AS FECHA, TIEMPO_MES,
				TIEMPO_FECHA AS F_LIQ,
				TIPO_MOVIMIENTO_BANCO, ESTATUS_MOVIMIENTO_BANCO,
				CUENTA_BANCO, FORMA_MOVIMIENTO_BANCO, 
				ESTATUS_CONCILIACION, TIPO_LIBRO_INGRESOS,
				UNIDAD_OPERATIVA, RAZON_SOCIAL
		WHERE	MOVIMIENTO_BANCO.K_TIPO_MOVIMIENTO_BANCO=TIPO_MOVIMIENTO_BANCO.K_TIPO_MOVIMIENTO_BANCO
		AND		MOVIMIENTO_BANCO.K_ESTATUS_MOVIMIENTO_BANCO=ESTATUS_MOVIMIENTO_BANCO.K_ESTATUS_MOVIMIENTO_BANCO
		AND		MOVIMIENTO_BANCO.K_CUENTA_BANCO=CUENTA_BANCO.K_CUENTA_BANCO
		AND		MOVIMIENTO_BANCO.K_TIPO_MOVIMIENTO_BANCO=TIPO_MOVIMIENTO_BANCO.K_TIPO_MOVIMIENTO_BANCO
		AND		MOVIMIENTO_BANCO.K_FORMA_MOVIMIENTO_BANCO=FORMA_MOVIMIENTO_BANCO.K_FORMA_MOVIMIENTO_BANCO
		AND		MOVIMIENTO_BANCO.K_USUARIO_CAMBIO=USUARIO.K_USUARIO
		AND		MOVIMIENTO_BANCO.K_ESTATUS_CONCILIACION=ESTATUS_CONCILIACION.K_ESTATUS_CONCILIACION 
		AND		MOVIMIENTO_BANCO.K_TIPO_LIBRO_INGRESOS=TIPO_LIBRO_INGRESOS.K_TIPO_LIBRO_INGRESOS
		AND		MOVIMIENTO_BANCO.K_UNIDAD_OPERATIVA=UNIDAD_OPERATIVA.K_UNIDAD_OPERATIVA 
		AND		UNIDAD_OPERATIVA.K_RAZON_SOCIAL=RAZON_SOCIAL.K_RAZON_SOCIAL
				-- =====================
		AND		MOVIMIENTO_BANCO.F_OPERACION=FECHA.F_TIEMPO_FECHA
		AND		FECHA.K_TIEMPO_MES=[TIEMPO_MES].K_TIEMPO_MES
		AND		MOVIMIENTO_BANCO.F_LIQ=F_LIQ.F_TIEMPO_FECHA
				-- =====================
			--	 K_ESTATUS_CONCILIACION = #0 PENDIENTE || #1 INVESTIGACION || #2 ACLARACION || #3 CONCILIADO || #4 NO CONCILIABLE
		AND		MOVIMIENTO_BANCO.K_ESTATUS_CONCILIACION=3

		AND		MOVIMIENTO_BANCO.F_OPERACION=@PP_F_PIVOTE
				-- =====================
		AND		( @PP_K_RAZON_SOCIAL=-1			OR		UNIDAD_OPERATIVA.K_RAZON_SOCIAL=@PP_K_RAZON_SOCIAL	)
		AND		( @PP_K_UNIDAD_OPERATIVA=-1		OR		MOVIMIENTO_BANCO.K_UNIDAD_OPERATIVA=@PP_K_UNIDAD_OPERATIVA )
		AND		MOVIMIENTO_BANCO.L_BORRADO=0
				-- =====================
		GROUP BY	FECHA.FECHA_YYYY, FECHA.K_TIEMPO_MES, [S_TIEMPO_MES],
					RAZON_SOCIAL.K_RAZON_SOCIAL, D_RAZON_SOCIAL, S_RAZON_SOCIAL,
					D_UNIDAD_OPERATIVA, S_UNIDAD_OPERATIVA,
					D_TIPO_LIBRO_INGRESOS, S_TIPO_LIBRO_INGRESOS
	ELSE
		-- ======================================= RAZON SOCIAL 
		SELECT	FECHA.FECHA_YYYY, FECHA.K_TIEMPO_MES, [S_TIEMPO_MES],		
				RAZON_SOCIAL.K_RAZON_SOCIAL, D_RAZON_SOCIAL, S_RAZON_SOCIAL,
				'.' AS D_UNIDAD_OPERATIVA, '.' AS S_UNIDAD_OPERATIVA,
				D_TIPO_LIBRO_INGRESOS, S_TIPO_LIBRO_INGRESOS,	
				123.45 AS TOTAL,
				456.78 AS POR_CONCILIAR,
				SUM(MONTO_MOVIMIENTO) AS CONCILIADO
		FROM	MOVIMIENTO_BANCO, USUARIO,
				TIEMPO_FECHA AS FECHA, TIEMPO_MES,
				TIEMPO_FECHA AS F_LIQ,
				TIPO_MOVIMIENTO_BANCO, ESTATUS_MOVIMIENTO_BANCO,
				CUENTA_BANCO, FORMA_MOVIMIENTO_BANCO, 
				ESTATUS_CONCILIACION, TIPO_LIBRO_INGRESOS,
				UNIDAD_OPERATIVA, RAZON_SOCIAL
		WHERE	MOVIMIENTO_BANCO.K_TIPO_MOVIMIENTO_BANCO=TIPO_MOVIMIENTO_BANCO.K_TIPO_MOVIMIENTO_BANCO
		AND		MOVIMIENTO_BANCO.K_ESTATUS_MOVIMIENTO_BANCO=ESTATUS_MOVIMIENTO_BANCO.K_ESTATUS_MOVIMIENTO_BANCO
		AND		MOVIMIENTO_BANCO.K_CUENTA_BANCO=CUENTA_BANCO.K_CUENTA_BANCO
		AND		MOVIMIENTO_BANCO.K_TIPO_MOVIMIENTO_BANCO=TIPO_MOVIMIENTO_BANCO.K_TIPO_MOVIMIENTO_BANCO
		AND		MOVIMIENTO_BANCO.K_FORMA_MOVIMIENTO_BANCO=FORMA_MOVIMIENTO_BANCO.K_FORMA_MOVIMIENTO_BANCO
		AND		MOVIMIENTO_BANCO.K_USUARIO_CAMBIO=USUARIO.K_USUARIO
		AND		MOVIMIENTO_BANCO.K_ESTATUS_CONCILIACION=ESTATUS_CONCILIACION.K_ESTATUS_CONCILIACION 
		AND		MOVIMIENTO_BANCO.K_TIPO_LIBRO_INGRESOS=TIPO_LIBRO_INGRESOS.K_TIPO_LIBRO_INGRESOS
		AND		MOVIMIENTO_BANCO.K_UNIDAD_OPERATIVA=UNIDAD_OPERATIVA.K_UNIDAD_OPERATIVA 
		AND		UNIDAD_OPERATIVA.K_RAZON_SOCIAL=RAZON_SOCIAL.K_RAZON_SOCIAL
				-- =====================
		AND		MOVIMIENTO_BANCO.F_OPERACION=FECHA.F_TIEMPO_FECHA
		AND		FECHA.K_TIEMPO_MES=[TIEMPO_MES].K_TIEMPO_MES
		AND		MOVIMIENTO_BANCO.F_LIQ=F_LIQ.F_TIEMPO_FECHA
				-- =====================
			--	 K_ESTATUS_CONCILIACION = #0 PENDIENTE || #1 INVESTIGACION || #2 ACLARACION || #3 CONCILIADO || #4 NO CONCILIABLE
		AND		MOVIMIENTO_BANCO.K_ESTATUS_CONCILIACION=3

		AND		MOVIMIENTO_BANCO.F_OPERACION=@PP_F_PIVOTE
				-- =====================
		AND		( @PP_K_RAZON_SOCIAL=-1			OR		UNIDAD_OPERATIVA.K_RAZON_SOCIAL=@PP_K_RAZON_SOCIAL	)
		AND		( @PP_K_UNIDAD_OPERATIVA=-1		OR		MOVIMIENTO_BANCO.K_UNIDAD_OPERATIVA=@PP_K_UNIDAD_OPERATIVA )
		AND		MOVIMIENTO_BANCO.L_BORRADO=0
				-- =====================
		GROUP BY	FECHA.FECHA_YYYY, FECHA.K_TIEMPO_MES, [S_TIEMPO_MES],
					RAZON_SOCIAL.K_RAZON_SOCIAL, D_RAZON_SOCIAL, S_RAZON_SOCIAL,
		--			D_UNIDAD_OPERATIVA, S_UNIDAD_OPERATIVA,
					D_TIPO_LIBRO_INGRESOS, S_TIPO_LIBRO_INGRESOS

	-- //////////////////////////////////////////////////////////////
GO





-- //////////////////////////////////////////////////////////////
-- // STORED PROCEDURE --->  LISTADO
-- //////////////////////////////////////////////////////////////
--	
/*


EXECUTE [dbo].[PG_LI_GESTION_TESORERIA_3_ABASTECIMIENTO]	0,0,0,		0, 10,-1,	'06/OCT/2018'

EXECUTE [dbo].[PG_LI_GESTION_TESORERIA_3_ABASTECIMIENTO]	0,0,0,		1, 10,-1,	'06/OCT/2018'


EXECUTE [dbo].[PG_LI_GESTION_TESORERIA_3_ABASTECIMIENTO]	0,0,0,		0, 10,51,	'06/OCT/2018'


*/




IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[PG_LI_GESTION_TESORERIA_3_ABASTECIMIENTO]') AND type in (N'P', N'PC'))
	DROP PROCEDURE [dbo].[PG_LI_GESTION_TESORERIA_3_ABASTECIMIENTO]
GO	


CREATE PROCEDURE [dbo].[PG_LI_GESTION_TESORERIA_3_ABASTECIMIENTO]
	@PP_L_DEBUG						INT,
	@PP_K_SISTEMA_EXE				INT,
	@PP_K_USUARIO_ACCION			INT,
	-- ===========================
	@PP_L_DESGLOSAR_X_UNO			INT,
	-- ===========================
	@PP_K_RAZON_SOCIAL				INT,
	@PP_K_UNIDAD_OPERATIVA			INT,
	@PP_F_PIVOTE					DATE
AS			

	DECLARE @VP_MENSAJE		VARCHAR(300)
	
	SET		@VP_MENSAJE		= ''
	
	-- ///////////////////////////////////////////

	IF @VP_MENSAJE=''
		EXECUTE [dbo].[PG_RN_DATA_ACCESO_SELECT]	@PP_L_DEBUG, @PP_K_SISTEMA_EXE, @PP_K_USUARIO_ACCION,	
													8, -- @PP_K_DATA_SISTEMA,	
													@OU_RESULTADO_VALIDACION = @VP_MENSAJE		OUTPUT
	-- ///////////////////////////////////////////

	DECLARE @VP_LI_N_REGISTROS		INT
	
	SET @VP_LI_N_REGISTROS = 1000
	
	EXECUTE [dbo].[PG_SK_CONFIGURACION_LI_N_REGISTROS_GET]	@PP_L_DEBUG, @PP_K_SISTEMA_EXE,
															1, -- WIWI // @VP_L_APLICAR_MAX_ROWS,
															@OU_LI_N_REGISTROS = @VP_LI_N_REGISTROS		OUTPUT		
	-- =========================================	
	
	IF NOT (@VP_MENSAJE='')
		SET @VP_LI_N_REGISTROS = 0

	-- ///////////////////////////////////////////
	
	UPDATE	FACTURA_CXP
	SET		K_UNIDAD_OPERATIVA = 0
	WHERE	K_UNIDAD_OPERATIVA IS NULL

	UPDATE	FACTURA_CXP
	SET		F_VENCIMIENTO = DATEADD(day,((10-MONTH(F_VENCIMIENTO))*30),F_EMISION)
	WHERE	K_RAZON_SOCIAL=10
	AND		MONTH(F_VENCIMIENTO)<10 

	-- ///////////////////////////////////////////

	IF @PP_L_DESGLOSAR_X_UNO=1
		-- ======================================= RAZON SOCIAL / UNIDAD OPERATIVA
		SELECT	FECHA.FECHA_YYYY, FECHA.K_TIEMPO_MES, [S_TIEMPO_MES],
				FECHA.N_SEMANA,
				D_PROVEEDOR, S_PROVEEDOR, 
				D_CATEGORIA_PROVEEDOR, S_CATEGORIA_PROVEEDOR,
				D_RAZON_SOCIAL, S_RAZON_SOCIAL,
				D_UNIDAD_OPERATIVA, S_UNIDAD_OPERATIVA,
				SUM(TOTAL)		AS TOTAL,
				SUM(ABONOS)		AS ABONOS,
				SUM(SALDO)		AS SALDO
		FROM	FACTURA_CXP, 
				UNIDAD_OPERATIVA, RAZON_SOCIAL,
				PROVEEDOR, CATEGORIA_PROVEEDOR,
				TIEMPO_FECHA AS FECHA, TIEMPO_MES
		WHERE	FACTURA_CXP.K_UNIDAD_OPERATIVA=UNIDAD_OPERATIVA.K_UNIDAD_OPERATIVA 
		AND		FACTURA_CXP.K_RAZON_SOCIAL=RAZON_SOCIAL.K_RAZON_SOCIAL
		AND		FACTURA_CXP.K_PROVEEDOR=PROVEEDOR.K_PROVEEDOR
		AND		PROVEEDOR.K_CATEGORIA_PROVEEDOR IN ( 1, 2 )		-- K_CATEGORIA_PROVEEDOR = #1 GAS // #2 FLETE
		AND		PROVEEDOR.K_CATEGORIA_PROVEEDOR=CATEGORIA_PROVEEDOR.K_CATEGORIA_PROVEEDOR
--		AND		FACTURA_CXP.K_ESTATUS_TRASPASO=ESTATUS_TRASPASO.K_ESTATUS_TRASPASO 
				-- =====================
		AND		FACTURA_CXP.F_VENCIMIENTO=FECHA.F_TIEMPO_FECHA
		AND		FECHA.K_TIEMPO_MES=[TIEMPO_MES].K_TIEMPO_MES
			-- =====================
			--	 K_ESTATUS_CONCILIACION = #0 PENDIENTE || #1 INVESTIGACION || #2 ACLARACION || #3 CONCILIADO || #4 NO CONCILIABLE
--		AND		TRASPASO.K_ESTATUS_CONCILIACION=3
		AND		FECHA.FECHA_YYYY=YEAR(@PP_F_PIVOTE)
		AND		FECHA.K_TIEMPO_MES=MONTH(@PP_F_PIVOTE)
				-- =====================
		AND		( @PP_K_RAZON_SOCIAL=-1			OR		FACTURA_CXP.K_RAZON_SOCIAL=@PP_K_RAZON_SOCIAL	)
		AND		( @PP_K_UNIDAD_OPERATIVA=-1		OR		FACTURA_CXP.K_UNIDAD_OPERATIVA=@PP_K_UNIDAD_OPERATIVA )
		AND		FACTURA_CXP.L_BORRADO=0
				-- =====================
		GROUP BY	FECHA.FECHA_YYYY, FECHA.K_TIEMPO_MES, [S_TIEMPO_MES],
					FECHA.N_SEMANA,
					D_PROVEEDOR, S_PROVEEDOR, 
					D_CATEGORIA_PROVEEDOR, S_CATEGORIA_PROVEEDOR,
					D_RAZON_SOCIAL, S_RAZON_SOCIAL,
					D_UNIDAD_OPERATIVA, S_UNIDAD_OPERATIVA
		ORDER BY	FECHA.FECHA_YYYY, FECHA.K_TIEMPO_MES, [S_TIEMPO_MES],
					FECHA.N_SEMANA,
					D_RAZON_SOCIAL, S_RAZON_SOCIAL,
					D_UNIDAD_OPERATIVA, S_UNIDAD_OPERATIVA
	ELSE
		-- ======================================= RAZON SOCIAL 
		SELECT	FECHA.FECHA_YYYY, FECHA.K_TIEMPO_MES, [S_TIEMPO_MES],
				FECHA.N_SEMANA,
				D_PROVEEDOR, S_PROVEEDOR, 
				D_CATEGORIA_PROVEEDOR, S_CATEGORIA_PROVEEDOR,
				D_RAZON_SOCIAL, S_RAZON_SOCIAL,
				'.' AS D_UNIDAD_OPERATIVA, '.' AS S_UNIDAD_OPERATIVA,
				SUM(TOTAL)		AS TOTAL,
				SUM(ABONOS)		AS ABONOS,
				SUM(SALDO)		AS SALDO
		FROM	FACTURA_CXP, 
				UNIDAD_OPERATIVA, RAZON_SOCIAL,
				PROVEEDOR, CATEGORIA_PROVEEDOR,
				TIEMPO_FECHA AS FECHA, TIEMPO_MES
		WHERE	FACTURA_CXP.K_UNIDAD_OPERATIVA=UNIDAD_OPERATIVA.K_UNIDAD_OPERATIVA 
		AND		FACTURA_CXP.K_RAZON_SOCIAL=RAZON_SOCIAL.K_RAZON_SOCIAL
		AND		FACTURA_CXP.K_PROVEEDOR=PROVEEDOR.K_PROVEEDOR
		AND		PROVEEDOR.K_CATEGORIA_PROVEEDOR IN ( 1, 2 )		-- K_CATEGORIA_PROVEEDOR = #1 GAS // #2 FLETE
		AND		PROVEEDOR.K_CATEGORIA_PROVEEDOR=CATEGORIA_PROVEEDOR.K_CATEGORIA_PROVEEDOR
--		AND		FACTURA_CXP.K_ESTATUS_TRASPASO=ESTATUS_TRASPASO.K_ESTATUS_TRASPASO 
				-- =====================
		AND		FACTURA_CXP.F_VENCIMIENTO=FECHA.F_TIEMPO_FECHA
		AND		FECHA.K_TIEMPO_MES=[TIEMPO_MES].K_TIEMPO_MES
			-- =====================
			--	 K_ESTATUS_CONCILIACION = #0 PENDIENTE || #1 INVESTIGACION || #2 ACLARACION || #3 CONCILIADO || #4 NO CONCILIABLE
--		AND		TRASPASO.K_ESTATUS_CONCILIACION=3
		AND		FECHA.FECHA_YYYY=YEAR(@PP_F_PIVOTE)
		AND		FECHA.K_TIEMPO_MES=MONTH(@PP_F_PIVOTE)
				-- =====================
		AND		( @PP_K_RAZON_SOCIAL=-1			OR		FACTURA_CXP.K_RAZON_SOCIAL=@PP_K_RAZON_SOCIAL	)
		AND		( @PP_K_UNIDAD_OPERATIVA=-1		OR		FACTURA_CXP.K_UNIDAD_OPERATIVA=@PP_K_UNIDAD_OPERATIVA )
		AND		FACTURA_CXP.L_BORRADO=0
				-- =====================
		GROUP BY	FECHA.FECHA_YYYY, FECHA.K_TIEMPO_MES, [S_TIEMPO_MES],
					FECHA.N_SEMANA,
					D_PROVEEDOR, S_PROVEEDOR, 
					D_CATEGORIA_PROVEEDOR, S_CATEGORIA_PROVEEDOR,
					D_RAZON_SOCIAL, S_RAZON_SOCIAL
		ORDER BY	FECHA.FECHA_YYYY, FECHA.K_TIEMPO_MES, [S_TIEMPO_MES],
					FECHA.N_SEMANA,
					D_RAZON_SOCIAL, S_RAZON_SOCIAL

	-- //////////////////////////////////////////////////////////////
GO






-- //////////////////////////////////////////////////////////////
-- // STORED PROCEDURE --->  LISTADO
-- //////////////////////////////////////////////////////////////
--	
/*


EXECUTE [dbo].[PG_LI_GESTION_TESORERIA_5_CXP]	0,0,0,		0, 10,-1,	'06/OCT/2018'

EXECUTE [dbo].[PG_LI_GESTION_TESORERIA_5_CXP]	0,0,0,		1, 10,-1,	'06/OCT/2018'

EXECUTE [dbo].[PG_LI_GESTION_TESORERIA_5_CXP]	0,0,0,		0, 10,51,	'06/OCT/2018'


*/



IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[PG_LI_GESTION_TESORERIA_5_CXP]') AND type in (N'P', N'PC'))
	DROP PROCEDURE [dbo].[PG_LI_GESTION_TESORERIA_5_CXP]
GO	


CREATE PROCEDURE [dbo].[PG_LI_GESTION_TESORERIA_5_CXP]
	@PP_L_DEBUG						INT,
	@PP_K_SISTEMA_EXE				INT,
	@PP_K_USUARIO_ACCION			INT,
	-- ===========================
	@PP_L_DESGLOSAR_X_UNO			INT,
	-- ===========================
	@PP_K_RAZON_SOCIAL				INT,
	@PP_K_UNIDAD_OPERATIVA			INT,
	@PP_F_PIVOTE					DATE
AS			

	DECLARE @VP_MENSAJE		VARCHAR(300)
	
	SET		@VP_MENSAJE		= ''
	
	-- ///////////////////////////////////////////

	IF @VP_MENSAJE=''
		EXECUTE [dbo].[PG_RN_DATA_ACCESO_SELECT]	@PP_L_DEBUG, @PP_K_SISTEMA_EXE, @PP_K_USUARIO_ACCION,	
													8, -- @PP_K_DATA_SISTEMA,	
													@OU_RESULTADO_VALIDACION = @VP_MENSAJE		OUTPUT
	-- ///////////////////////////////////////////

	DECLARE @VP_LI_N_REGISTROS		INT
	
	SET @VP_LI_N_REGISTROS = 1000
	
	EXECUTE [dbo].[PG_SK_CONFIGURACION_LI_N_REGISTROS_GET]	@PP_L_DEBUG, @PP_K_SISTEMA_EXE,
															1, -- WIWI // @VP_L_APLICAR_MAX_ROWS,
															@OU_LI_N_REGISTROS = @VP_LI_N_REGISTROS		OUTPUT		
	-- =========================================	
	
	IF NOT (@VP_MENSAJE='')
		SET @VP_LI_N_REGISTROS = 0

	-- ///////////////////////////////////////////
	
	UPDATE	FACTURA_CXP
	SET		K_UNIDAD_OPERATIVA = 0
	WHERE	K_UNIDAD_OPERATIVA IS NULL

	UPDATE	FACTURA_CXP
	SET		F_VENCIMIENTO = DATEADD(day,((10-MONTH(F_VENCIMIENTO))*30),F_EMISION)
	WHERE	K_RAZON_SOCIAL=10
	AND		MONTH(F_VENCIMIENTO)<10 

	-- ///////////////////////////////////////////

	IF @PP_L_DESGLOSAR_X_UNO=1
		-- ======================================= RAZON SOCIAL / UNIDAD OPERATIVA
		SELECT	FECHA.FECHA_YYYY, FECHA.K_TIEMPO_MES, [S_TIEMPO_MES],
				FECHA.N_SEMANA,
				'.' AS D_PROVEEDOR, '.' AS S_PROVEEDOR, 
				D_CATEGORIA_PROVEEDOR, S_CATEGORIA_PROVEEDOR,
				D_RAZON_SOCIAL, S_RAZON_SOCIAL,
				D_UNIDAD_OPERATIVA, S_UNIDAD_OPERATIVA,
				SUM(TOTAL)		AS TOTAL,
				SUM(ABONOS)		AS ABONOS,
				SUM(SALDO)		AS SALDO
		FROM	FACTURA_CXP, 
				UNIDAD_OPERATIVA, RAZON_SOCIAL,
				PROVEEDOR, CATEGORIA_PROVEEDOR,
				TIEMPO_FECHA AS FECHA, TIEMPO_MES
		WHERE	FACTURA_CXP.K_UNIDAD_OPERATIVA=UNIDAD_OPERATIVA.K_UNIDAD_OPERATIVA 
		AND		FACTURA_CXP.K_RAZON_SOCIAL=RAZON_SOCIAL.K_RAZON_SOCIAL
		AND		FACTURA_CXP.K_PROVEEDOR=PROVEEDOR.K_PROVEEDOR
		AND		NOT ( PROVEEDOR.K_CATEGORIA_PROVEEDOR IN ( 1, 2 ) )		-- K_CATEGORIA_PROVEEDOR = #1 GAS // #2 FLETE
		AND		PROVEEDOR.K_CATEGORIA_PROVEEDOR=CATEGORIA_PROVEEDOR.K_CATEGORIA_PROVEEDOR
--		AND		FACTURA_CXP.K_ESTATUS_TRASPASO=ESTATUS_TRASPASO.K_ESTATUS_TRASPASO 
				-- =====================
		AND		FACTURA_CXP.F_VENCIMIENTO=FECHA.F_TIEMPO_FECHA
		AND		FECHA.K_TIEMPO_MES=[TIEMPO_MES].K_TIEMPO_MES
			-- =====================
			--	 K_ESTATUS_CONCILIACION = #0 PENDIENTE || #1 INVESTIGACION || #2 ACLARACION || #3 CONCILIADO || #4 NO CONCILIABLE
--		AND		TRASPASO.K_ESTATUS_CONCILIACION=3
		AND		FECHA.FECHA_YYYY=YEAR(@PP_F_PIVOTE)
		AND		FECHA.K_TIEMPO_MES=MONTH(@PP_F_PIVOTE)
				-- =====================
		AND		( @PP_K_RAZON_SOCIAL=-1			OR		FACTURA_CXP.K_RAZON_SOCIAL=@PP_K_RAZON_SOCIAL	)
		AND		( @PP_K_UNIDAD_OPERATIVA=-1		OR		FACTURA_CXP.K_UNIDAD_OPERATIVA=@PP_K_UNIDAD_OPERATIVA )
		AND		FACTURA_CXP.L_BORRADO=0
				-- =====================
		GROUP BY	FECHA.FECHA_YYYY, FECHA.K_TIEMPO_MES, [S_TIEMPO_MES],
					FECHA.N_SEMANA,
		--			D_PROVEEDOR, S_PROVEEDOR, 
					D_CATEGORIA_PROVEEDOR, S_CATEGORIA_PROVEEDOR,
					D_RAZON_SOCIAL, S_RAZON_SOCIAL,
					D_UNIDAD_OPERATIVA, S_UNIDAD_OPERATIVA
		ORDER BY	FECHA.FECHA_YYYY, FECHA.K_TIEMPO_MES, [S_TIEMPO_MES],
					FECHA.N_SEMANA,
					D_RAZON_SOCIAL, S_RAZON_SOCIAL,
					D_UNIDAD_OPERATIVA, S_UNIDAD_OPERATIVA
	ELSE
		-- ======================================= RAZON SOCIAL 
		SELECT	FECHA.FECHA_YYYY, FECHA.K_TIEMPO_MES, [S_TIEMPO_MES],
				FECHA.N_SEMANA,
				'.' AS D_PROVEEDOR, '.' AS S_PROVEEDOR, 
				D_CATEGORIA_PROVEEDOR, S_CATEGORIA_PROVEEDOR,
				D_RAZON_SOCIAL, S_RAZON_SOCIAL,
				'.' AS D_UNIDAD_OPERATIVA, '.' AS S_UNIDAD_OPERATIVA,
				SUM(TOTAL)		AS TOTAL,
				SUM(ABONOS)		AS ABONOS,
				SUM(SALDO)		AS SALDO
		FROM	FACTURA_CXP, 
				UNIDAD_OPERATIVA, RAZON_SOCIAL,
				PROVEEDOR, CATEGORIA_PROVEEDOR,
				TIEMPO_FECHA AS FECHA, TIEMPO_MES
		WHERE	FACTURA_CXP.K_UNIDAD_OPERATIVA=UNIDAD_OPERATIVA.K_UNIDAD_OPERATIVA 
		AND		FACTURA_CXP.K_RAZON_SOCIAL=RAZON_SOCIAL.K_RAZON_SOCIAL
		AND		FACTURA_CXP.K_PROVEEDOR=PROVEEDOR.K_PROVEEDOR
		AND		NOT ( PROVEEDOR.K_CATEGORIA_PROVEEDOR IN ( 1, 2 ) )		-- K_CATEGORIA_PROVEEDOR = #1 GAS // #2 FLETE
		AND		PROVEEDOR.K_CATEGORIA_PROVEEDOR=CATEGORIA_PROVEEDOR.K_CATEGORIA_PROVEEDOR
--		AND		FACTURA_CXP.K_ESTATUS_TRASPASO=ESTATUS_TRASPASO.K_ESTATUS_TRASPASO 
				-- =====================
		AND		FACTURA_CXP.F_VENCIMIENTO=FECHA.F_TIEMPO_FECHA
		AND		FECHA.K_TIEMPO_MES=[TIEMPO_MES].K_TIEMPO_MES
			-- =====================
			--	 K_ESTATUS_CONCILIACION = #0 PENDIENTE || #1 INVESTIGACION || #2 ACLARACION || #3 CONCILIADO || #4 NO CONCILIABLE
--		AND		TRASPASO.K_ESTATUS_CONCILIACION=3
		AND		FECHA.FECHA_YYYY=YEAR(@PP_F_PIVOTE)
		AND		FECHA.K_TIEMPO_MES=MONTH(@PP_F_PIVOTE)
				-- =====================
		AND		( @PP_K_RAZON_SOCIAL=-1			OR		FACTURA_CXP.K_RAZON_SOCIAL=@PP_K_RAZON_SOCIAL	)
		AND		( @PP_K_UNIDAD_OPERATIVA=-1		OR		FACTURA_CXP.K_UNIDAD_OPERATIVA=@PP_K_UNIDAD_OPERATIVA )
		AND		FACTURA_CXP.L_BORRADO=0
				-- =====================
		GROUP BY	FECHA.FECHA_YYYY, FECHA.K_TIEMPO_MES, [S_TIEMPO_MES],
					FECHA.N_SEMANA,
		--			D_PROVEEDOR, S_PROVEEDOR, 
					D_CATEGORIA_PROVEEDOR, S_CATEGORIA_PROVEEDOR,
					D_RAZON_SOCIAL, S_RAZON_SOCIAL
		ORDER BY	FECHA.FECHA_YYYY, FECHA.K_TIEMPO_MES, [S_TIEMPO_MES],
					FECHA.N_SEMANA,
					D_RAZON_SOCIAL, S_RAZON_SOCIAL

	-- //////////////////////////////////////////////////////////////
GO




-- //////////////////////////////////////////////////////////////
-- // STORED PROCEDURE --->  LISTADO
-- //////////////////////////////////////////////////////////////
--	
/*


EXECUTE [dbo].[PG_LI_GESTION_TESORERIA_6_TRASPASOS]	0,0,0,		1, -1,-1,	'06/OCT/2018'


EXECUTE [dbo].[PG_LI_GESTION_TESORERIA_6_TRASPASOS]	0,0,0,		0, 10,-1,	'06/OCT/2018'


EXECUTE [dbo].[PG_LI_GESTION_TESORERIA_6_TRASPASOS]	0,0,0,		0, 10,51,	'06/OCT/2018'


*/




IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[PG_LI_GESTION_TESORERIA_6_TRASPASOS]') AND type in (N'P', N'PC'))
	DROP PROCEDURE [dbo].[PG_LI_GESTION_TESORERIA_6_TRASPASOS]
GO	


CREATE PROCEDURE [dbo].[PG_LI_GESTION_TESORERIA_6_TRASPASOS]
	@PP_L_DEBUG						INT,
	@PP_K_SISTEMA_EXE				INT,
	@PP_K_USUARIO_ACCION			INT,
	-- ===========================
	@PP_L_DESGLOSAR_X_UNO			INT,
	-- ===========================
	@PP_K_RAZON_SOCIAL				INT,
	@PP_K_UNIDAD_OPERATIVA			INT,
	@PP_F_PIVOTE					DATE
AS			

	DECLARE @VP_MENSAJE		VARCHAR(300)
	
	SET		@VP_MENSAJE		= ''
	
	-- ///////////////////////////////////////////

	IF @VP_MENSAJE=''
		EXECUTE [dbo].[PG_RN_DATA_ACCESO_SELECT]	@PP_L_DEBUG, @PP_K_SISTEMA_EXE, @PP_K_USUARIO_ACCION,	
													8, -- @PP_K_DATA_SISTEMA,	
													@OU_RESULTADO_VALIDACION = @VP_MENSAJE		OUTPUT
	-- ///////////////////////////////////////////

	DECLARE @VP_LI_N_REGISTROS		INT
	
	SET @VP_LI_N_REGISTROS = 1000
	
	EXECUTE [dbo].[PG_SK_CONFIGURACION_LI_N_REGISTROS_GET]	@PP_L_DEBUG, @PP_K_SISTEMA_EXE,
															1, -- WIWI // @VP_L_APLICAR_MAX_ROWS,
															@OU_LI_N_REGISTROS = @VP_LI_N_REGISTROS		OUTPUT		
	-- =========================================	
	
	IF NOT (@VP_MENSAJE='')
		SET @VP_LI_N_REGISTROS = 0

	-- ///////////////////////////////////////////

	IF @PP_L_DESGLOSAR_X_UNO=1
		-- ======================================= RAZON SOCIAL / UNIDAD OPERATIVA
		SELECT	FECHA.FECHA_YYYY, FECHA.K_TIEMPO_MES, [S_TIEMPO_MES],
				FECHA.N_SEMANA,
				D_RAZON_SOCIAL, S_RAZON_SOCIAL,
				D_UNIDAD_OPERATIVA, S_UNIDAD_OPERATIVA,
				SUM(MONTO_AUTORIZADO)	AS MONTO_AUTORIZADO,
				SUM(MONTO_APLICAR)		AS MONTO_APLICAR
		FROM	TRASPASO,
				UNIDAD_OPERATIVA, RAZON_SOCIAL,
				ESTATUS_TRASPASO, CONCEPTO_TRASPASO,
				RUBRO_PRESUPUESTO, 
				TIEMPO_FECHA AS FECHA, TIEMPO_MES
		WHERE	TRASPASO.K_UNIDAD_OPERATIVA=UNIDAD_OPERATIVA.K_UNIDAD_OPERATIVA 
		AND		UNIDAD_OPERATIVA.K_RAZON_SOCIAL=RAZON_SOCIAL.K_RAZON_SOCIAL
		AND		TRASPASO.K_ESTATUS_TRASPASO=ESTATUS_TRASPASO.K_ESTATUS_TRASPASO 
		AND		TRASPASO.K_CONCEPTO_TRASPASO=CONCEPTO_TRASPASO.K_CONCEPTO_TRASPASO				
		AND		TRASPASO.K_RUBRO_PRESUPUESTO=RUBRO_PRESUPUESTO.K_RUBRO_PRESUPUESTO
				-- =====================
		AND		TRASPASO.F_OPERACION=FECHA.F_TIEMPO_FECHA
		AND		FECHA.K_TIEMPO_MES=[TIEMPO_MES].K_TIEMPO_MES
			-- =====================
			--	 K_ESTATUS_CONCILIACION = #0 PENDIENTE || #1 INVESTIGACION || #2 ACLARACION || #3 CONCILIADO || #4 NO CONCILIABLE
--		AND		TRASPASO.K_ESTATUS_CONCILIACION=3
		AND		FECHA.FECHA_YYYY=YEAR(@PP_F_PIVOTE)
		AND		FECHA.K_TIEMPO_MES=MONTH(@PP_F_PIVOTE)
				-- =====================
		AND		( @PP_K_RAZON_SOCIAL=-1			OR		UNIDAD_OPERATIVA.K_RAZON_SOCIAL=@PP_K_RAZON_SOCIAL	)
		AND		( @PP_K_UNIDAD_OPERATIVA=-1		OR		UNIDAD_OPERATIVA.K_UNIDAD_OPERATIVA=@PP_K_UNIDAD_OPERATIVA )
		AND		TRASPASO.L_BORRADO=0
				-- =====================
		GROUP BY	FECHA.FECHA_YYYY, FECHA.K_TIEMPO_MES, [S_TIEMPO_MES],
					FECHA.N_SEMANA,
					D_RAZON_SOCIAL, S_RAZON_SOCIAL,
					D_UNIDAD_OPERATIVA, S_UNIDAD_OPERATIVA
		ORDER BY	FECHA.FECHA_YYYY, FECHA.K_TIEMPO_MES, [S_TIEMPO_MES],
					FECHA.N_SEMANA,
					D_RAZON_SOCIAL, S_RAZON_SOCIAL,
					D_UNIDAD_OPERATIVA, S_UNIDAD_OPERATIVA
	ELSE
		-- ======================================= RAZON SOCIAL 
		SELECT	FECHA.FECHA_YYYY, FECHA.K_TIEMPO_MES, [S_TIEMPO_MES],
				FECHA.N_SEMANA,
				D_RAZON_SOCIAL, S_RAZON_SOCIAL,
				'.' AS D_UNIDAD_OPERATIVA, '.' AS S_UNIDAD_OPERATIVA,
				SUM(MONTO_AUTORIZADO)	AS MONTO_AUTORIZADO,
				SUM(MONTO_APLICAR)		AS MONTO_APLICAR
		FROM	TRASPASO,
				UNIDAD_OPERATIVA, RAZON_SOCIAL,
				ESTATUS_TRASPASO, CONCEPTO_TRASPASO,
				RUBRO_PRESUPUESTO, 
				TIEMPO_FECHA AS FECHA, TIEMPO_MES
		WHERE	TRASPASO.K_UNIDAD_OPERATIVA=UNIDAD_OPERATIVA.K_UNIDAD_OPERATIVA 
		AND		UNIDAD_OPERATIVA.K_RAZON_SOCIAL=RAZON_SOCIAL.K_RAZON_SOCIAL
		AND		TRASPASO.K_ESTATUS_TRASPASO=ESTATUS_TRASPASO.K_ESTATUS_TRASPASO 
		AND		TRASPASO.K_CONCEPTO_TRASPASO=CONCEPTO_TRASPASO.K_CONCEPTO_TRASPASO				
		AND		TRASPASO.K_RUBRO_PRESUPUESTO=RUBRO_PRESUPUESTO.K_RUBRO_PRESUPUESTO
				-- =====================
		AND		TRASPASO.F_OPERACION=FECHA.F_TIEMPO_FECHA
		AND		FECHA.K_TIEMPO_MES=[TIEMPO_MES].K_TIEMPO_MES
			-- =====================
			--	 K_ESTATUS_CONCILIACION = #0 PENDIENTE || #1 INVESTIGACION || #2 ACLARACION || #3 CONCILIADO || #4 NO CONCILIABLE
--		AND		TRASPASO.K_ESTATUS_CONCILIACION=3
		AND		FECHA.FECHA_YYYY=YEAR(@PP_F_PIVOTE)
		AND		FECHA.K_TIEMPO_MES=MONTH(@PP_F_PIVOTE)
				-- =====================
		AND		( @PP_K_RAZON_SOCIAL=-1			OR		UNIDAD_OPERATIVA.K_RAZON_SOCIAL=@PP_K_RAZON_SOCIAL	)
		AND		( @PP_K_UNIDAD_OPERATIVA=-1		OR		UNIDAD_OPERATIVA.K_UNIDAD_OPERATIVA=@PP_K_UNIDAD_OPERATIVA )
		AND		TRASPASO.L_BORRADO=0
				-- =====================
		GROUP BY	FECHA.FECHA_YYYY, FECHA.K_TIEMPO_MES, [S_TIEMPO_MES],
					FECHA.N_SEMANA,
					D_RAZON_SOCIAL, S_RAZON_SOCIAL
		ORDER BY	FECHA.FECHA_YYYY, FECHA.K_TIEMPO_MES, [S_TIEMPO_MES],
					FECHA.N_SEMANA,
					D_RAZON_SOCIAL, S_RAZON_SOCIAL

	-- //////////////////////////////////////////////////////////////
GO




-- ///////////////////////////////////////////////////////////////////////////////
-- ///////////////////////////////////////////////////////////////////////////////
-- ///////////////////////////////////////////////////////////////////////////////
-- ///////////////////////////////////////////////////////////////////////////////
-- ///////////////////////////////////////////////////////////////////////////////

