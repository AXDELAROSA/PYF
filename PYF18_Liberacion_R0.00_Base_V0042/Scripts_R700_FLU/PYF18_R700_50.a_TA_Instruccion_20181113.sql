-- //////////////////////////////////////////////////////////////
-- // ARCHIVO:			
-- //////////////////////////////////////////////////////////////
-- // BASE DE DATOS:	PYF18_Finanzas
-- // MODULO:			INSTRUCCION/MOVIMIENTO TESORERIA
-- // OPERACION:		LIBERACION / TABLAS
-- //////////////////////////////////////////////////////////////
-- // Autor:			HECTOR A. GONZALEZ DE LA FUENTE
-- // Fecha creación:	18/SEP/2018
-- ////////////////////////////////////////////////////////////// 

USE [PYF18_Finanzas_V9999_R0]
GO

-- //////////////////////////////////////////////////////////////



-- //////////////////////////////////////////////////////////////
-- // DROPs
-- //////////////////////////////////////////////////////////////

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[INSTRUCCION]') AND type in (N'U'))
	DROP TABLE [dbo].[INSTRUCCION] 
GO

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[FORMA_INSTRUCCION]') AND type in (N'U'))
	DROP TABLE [dbo].[FORMA_INSTRUCCION]
GO

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ESTATUS_INSTRUCCION]') AND type in (N'U'))
	DROP TABLE [dbo].[ESTATUS_INSTRUCCION]
GO

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TIPO_INSTRUCCION]') AND type in (N'U'))
	DROP TABLE [dbo].[TIPO_INSTRUCCION]
GO

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[CLASE_INSTRUCCION]') AND type in (N'U'))
	DROP TABLE [dbo].[CLASE_INSTRUCCION]
GO






-- ///////////////////////////////////////////////////////////////
-- //					CLASE_INSTRUCCION
-- ///////////////////////////////////////////////////////////////

CREATE TABLE [dbo].[CLASE_INSTRUCCION] (
	[K_CLASE_INSTRUCCION]				[INT] NOT NULL,
	[D_CLASE_INSTRUCCION]				[VARCHAR] (100) NOT NULL,
	[S_CLASE_INSTRUCCION]				[VARCHAR] (10) NOT NULL,
	[O_CLASE_INSTRUCCION]				[INT] NOT NULL,
	[C_CLASE_INSTRUCCION]				[VARCHAR] (255) NOT NULL,
	[L_CLASE_INSTRUCCION]				[INT] NOT NULL
) ON [PRIMARY]
GO


-- //////////////////////////////////////////////////////////////


ALTER TABLE [dbo].[CLASE_INSTRUCCION]
	ADD CONSTRAINT [PK_CLASE_INSTRUCCION]
		PRIMARY KEY CLUSTERED ([K_CLASE_INSTRUCCION])
GO


CREATE UNIQUE NONCLUSTERED 
	INDEX [UN_CLASE_INSTRUCCION_01_DESCRIPCION] 
	   ON [dbo].[CLASE_INSTRUCCION] ( [D_CLASE_INSTRUCCION] )
GO


ALTER TABLE [dbo].[CLASE_INSTRUCCION] ADD 
	CONSTRAINT [FK_CLASE_INSTRUCCION_01] 
		FOREIGN KEY ( [L_CLASE_INSTRUCCION] ) 
		REFERENCES [dbo].[ESTATUS_ACTIVO] ( [K_ESTATUS_ACTIVO] )
GO


-- //////////////////////////////////////////////////////////////


IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[PG_CI_CLASE_INSTRUCCION]') AND type in (N'P', N'PC'))
	DROP PROCEDURE [dbo].[PG_CI_CLASE_INSTRUCCION]
GO


CREATE PROCEDURE [dbo].[PG_CI_CLASE_INSTRUCCION]
	@PP_L_DEBUG							INT,
	@PP_K_SISTEMA_EXE					INT,
	@PP_K_CLASE_INSTRUCCION				INT,
	@PP_D_CLASE_INSTRUCCION				VARCHAR(100),
	@PP_S_CLASE_INSTRUCCION				VARCHAR(10),
	@PP_O_CLASE_INSTRUCCION				INT,
	@PP_C_CLASE_INSTRUCCION				VARCHAR(255),
	@PP_L_CLASE_INSTRUCCION				INT
AS
	
	INSERT INTO CLASE_INSTRUCCION
		(	K_CLASE_INSTRUCCION,			D_CLASE_INSTRUCCION, 
			S_CLASE_INSTRUCCION,			O_CLASE_INSTRUCCION,
			C_CLASE_INSTRUCCION,
			L_CLASE_INSTRUCCION			)		
	VALUES	
		(	@PP_K_CLASE_INSTRUCCION,		@PP_D_CLASE_INSTRUCCION,	
			@PP_S_CLASE_INSTRUCCION,		@PP_O_CLASE_INSTRUCCION,
			@PP_C_CLASE_INSTRUCCION,
			@PP_L_CLASE_INSTRUCCION		)

	-- =========================================================
GO



EXECUTE [dbo].[PG_CI_CLASE_INSTRUCCION] 0, 0,  1, 'INSTRUCCIONES',  'INS', 1, '', 1
GO



-- ///////////////////////////////////////////////////////////////
-- //					TIPO_INSTRUCCION
-- ///////////////////////////////////////////////////////////////

CREATE TABLE [dbo].[TIPO_INSTRUCCION] (
	[K_TIPO_INSTRUCCION]			[INT] NOT NULL,
	[D_TIPO_INSTRUCCION]			[VARCHAR] (100) NOT NULL,
	[S_TIPO_INSTRUCCION]			[VARCHAR] (10) NOT NULL,
	[O_TIPO_INSTRUCCION]			[INT] NOT NULL,
	[C_TIPO_INSTRUCCION]			[VARCHAR] (255) NOT NULL,
	[L_TIPO_INSTRUCCION]			[INT] NOT NULL,
	[K_CLASE_INSTRUCCION]			[INT] NOT NULL
) ON [PRIMARY]
GO


-- //////////////////////////////////////////////////////////////


ALTER TABLE [dbo].[TIPO_INSTRUCCION]
	ADD CONSTRAINT [PK_TIPO_INSTRUCCION]
		PRIMARY KEY CLUSTERED ([K_TIPO_INSTRUCCION])
GO


CREATE UNIQUE NONCLUSTERED 
	INDEX [UN_TIPO_INSTRUCCION_01_DESCRIPCION] 
	   ON [dbo].[TIPO_INSTRUCCION] ( [D_TIPO_INSTRUCCION] )
GO


ALTER TABLE [dbo].[TIPO_INSTRUCCION] ADD 
	CONSTRAINT [FK_TIPO_INSTRUCCION_01] 
		FOREIGN KEY ( [L_TIPO_INSTRUCCION] ) 
		REFERENCES [dbo].[ESTATUS_ACTIVO] ( [K_ESTATUS_ACTIVO] ),
	CONSTRAINT [FK_TIPO_INSTRUCCION_02] 
		FOREIGN KEY ( [K_CLASE_INSTRUCCION] ) 
		REFERENCES [dbo].[CLASE_INSTRUCCION] ( [K_CLASE_INSTRUCCION] )
GO



-- //////////////////////////////////////////////////////////////


IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[PG_CI_TIPO_INSTRUCCION]') AND type in (N'P', N'PC'))
	DROP PROCEDURE [dbo].[PG_CI_TIPO_INSTRUCCION]
GO


CREATE PROCEDURE [dbo].[PG_CI_TIPO_INSTRUCCION]
	@PP_L_DEBUG							INT,
	@PP_K_SISTEMA_EXE					INT,
	@PP_K_TIPO_INSTRUCCION				INT,
	@PP_D_TIPO_INSTRUCCION				VARCHAR(100),
	@PP_S_TIPO_INSTRUCCION				VARCHAR(10),
	@PP_O_TIPO_INSTRUCCION				INT,
	@PP_C_TIPO_INSTRUCCION				VARCHAR(255),
	@PP_L_TIPO_INSTRUCCION				INT,
	@PP_K_CLASE_INSTRUCCION				INT		
AS

	INSERT INTO TIPO_INSTRUCCION
		(	K_TIPO_INSTRUCCION,				D_TIPO_INSTRUCCION, 
			S_TIPO_INSTRUCCION,				O_TIPO_INSTRUCCION,
			C_TIPO_INSTRUCCION,
			L_TIPO_INSTRUCCION,
			K_CLASE_INSTRUCCION				)
	VALUES	
		(	@PP_K_TIPO_INSTRUCCION,			@PP_D_TIPO_INSTRUCCION,	
			@PP_S_TIPO_INSTRUCCION,			@PP_O_TIPO_INSTRUCCION,
			@PP_C_TIPO_INSTRUCCION,
			@PP_L_TIPO_INSTRUCCION,
			@PP_K_CLASE_INSTRUCCION			)

	-- =========================================================
GO


-- =============================================== #1, 'INSTRUCCIONES',  'INS'
EXECUTE [dbo].[PG_CI_TIPO_INSTRUCCION] 0, 0,  101, 'TRASPASO',		'TRA', 101, '', 1,  1
EXECUTE [dbo].[PG_CI_TIPO_INSTRUCCION] 0, 0,  102, 'CXP',			'CXP', 101, '', 1,  1

GO



-- ///////////////////////////////////////////////////////////////
-- //				ESTATUS_INSTRUCCION				
-- ///////////////////////////////////////////////////////////////
			

CREATE TABLE [dbo].[ESTATUS_INSTRUCCION] (
	[K_ESTATUS_INSTRUCCION]				[INT] NOT NULL,
	[D_ESTATUS_INSTRUCCION]				[VARCHAR] (100) NOT NULL,
	[S_ESTATUS_INSTRUCCION]				[VARCHAR] (10) NOT NULL,
	[O_ESTATUS_INSTRUCCION]				[INT] NOT NULL,
	[C_ESTATUS_INSTRUCCION]				[VARCHAR] (255) NOT NULL,
	[L_ESTATUS_INSTRUCCION]				[INT] NOT NULL
) ON [PRIMARY]
GO


-- //////////////////////////////////////////////////////////////


ALTER TABLE [dbo].[ESTATUS_INSTRUCCION]
	ADD CONSTRAINT [PK_ESTATUS_INSTRUCCION]
		PRIMARY KEY CLUSTERED ([K_ESTATUS_INSTRUCCION])
GO


CREATE UNIQUE NONCLUSTERED 
	INDEX [UN_ESTATUS_INSTRUCCION_01_DESCRIPCION] 
	   ON [dbo].[ESTATUS_INSTRUCCION] ( [D_ESTATUS_INSTRUCCION] )
GO


ALTER TABLE [dbo].[ESTATUS_INSTRUCCION] ADD 
	CONSTRAINT [FK_ESTATUS_INSTRUCCION_01] 
		FOREIGN KEY ( [L_ESTATUS_INSTRUCCION] ) 
		REFERENCES [dbo].[ESTATUS_ACTIVO] ( [K_ESTATUS_ACTIVO] )
GO


-- //////////////////////////////////////////////////////////////


IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[PG_CI_ESTATUS_INSTRUCCION]') AND type in (N'P', N'PC'))
	DROP PROCEDURE [dbo].[PG_CI_ESTATUS_INSTRUCCION]
GO


CREATE PROCEDURE [dbo].[PG_CI_ESTATUS_INSTRUCCION]
	@PP_L_DEBUG							INT,
	@PP_K_SISTEMA_EXE					INT,
	@PP_K_ESTATUS_INSTRUCCION			INT,
	@PP_D_ESTATUS_INSTRUCCION			VARCHAR(100),
	@PP_S_ESTATUS_INSTRUCCION			VARCHAR(10),
	@PP_O_ESTATUS_INSTRUCCION			INT,
	@PP_C_ESTATUS_INSTRUCCION			VARCHAR(255),
	@PP_L_ESTATUS_INSTRUCCION			INT
AS
	
	INSERT INTO ESTATUS_INSTRUCCION	
		(	K_ESTATUS_INSTRUCCION,				D_ESTATUS_INSTRUCCION, 
			S_ESTATUS_INSTRUCCION,				O_ESTATUS_INSTRUCCION,
			C_ESTATUS_INSTRUCCION,
			L_ESTATUS_INSTRUCCION				)		
	VALUES	
		(	@PP_K_ESTATUS_INSTRUCCION,			@PP_D_ESTATUS_INSTRUCCION,	
			@PP_S_ESTATUS_INSTRUCCION,			@PP_O_ESTATUS_INSTRUCCION,
			@PP_C_ESTATUS_INSTRUCCION,
			@PP_L_ESTATUS_INSTRUCCION			)

	-- =========================================================
GO



EXECUTE [dbo].[PG_CI_ESTATUS_INSTRUCCION] 0,0, 1, 'EN PROCESO',	'PROC', 1, '', 1
EXECUTE [dbo].[PG_CI_ESTATUS_INSTRUCCION] 0,0, 2, 'PROGRAMADA',	'PROG', 1, '', 1
EXECUTE [dbo].[PG_CI_ESTATUS_INSTRUCCION] 0,0, 3, 'AUTORIZADA',	'AUTR', 1, '', 1
EXECUTE [dbo].[PG_CI_ESTATUS_INSTRUCCION] 0,0, 4, 'EJECUTADA',	'EJEC', 1, '', 1
EXECUTE [dbo].[PG_CI_ESTATUS_INSTRUCCION] 0,0, 5, 'CONCILIADA',	'CONC', 1, '', 1
EXECUTE [dbo].[PG_CI_ESTATUS_INSTRUCCION] 0,0, 6, 'CANCELADA',	'CANC', 1, '', 1
GO




-- ///////////////////////////////////////////////////////////////
-- //					FORMA_INSTRUCCION
-- ///////////////////////////////////////////////////////////////

CREATE TABLE [dbo].[FORMA_INSTRUCCION] (
	[K_FORMA_INSTRUCCION]			[INT] NOT NULL,
	[D_FORMA_INSTRUCCION]			[VARCHAR] (100) NOT NULL,
	[S_FORMA_INSTRUCCION]			[VARCHAR] (10) NOT NULL,
	[O_FORMA_INSTRUCCION]			[INT] NOT NULL,
	[C_FORMA_INSTRUCCION]			[VARCHAR] (255) NOT NULL,
	[L_FORMA_INSTRUCCION]			[INT] NOT NULL
) ON [PRIMARY]
GO


-- //////////////////////////////////////////////////////////////


ALTER TABLE [dbo].[FORMA_INSTRUCCION]
	ADD CONSTRAINT [PK_FORMA_INSTRUCCION]
		PRIMARY KEY CLUSTERED ([K_FORMA_INSTRUCCION])
GO


CREATE UNIQUE NONCLUSTERED 
	INDEX [UN_FORMA_INSTRUCCION_01_DESCRIPCION] 
	   ON [dbo].[FORMA_INSTRUCCION] ( [D_FORMA_INSTRUCCION] )
GO


ALTER TABLE [dbo].[FORMA_INSTRUCCION] ADD 
	CONSTRAINT [FK_FORMA_INSTRUCCION_01] 
		FOREIGN KEY ( [L_FORMA_INSTRUCCION] ) 
		REFERENCES [dbo].[ESTATUS_ACTIVO] ( [K_ESTATUS_ACTIVO] )
GO


-- //////////////////////////////////////////////////////////////


IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[PG_CI_FORMA_INSTRUCCION]') AND type in (N'P', N'PC'))
	DROP PROCEDURE [dbo].[PG_CI_FORMA_INSTRUCCION]
GO


CREATE PROCEDURE [dbo].[PG_CI_FORMA_INSTRUCCION]
	@PP_L_DEBUG					INT,
	@PP_K_SISTEMA_EXE			INT,
	@PP_K_FORMA_INSTRUCCION		INT,
	@PP_D_FORMA_INSTRUCCION		VARCHAR(100),
	@PP_S_FORMA_INSTRUCCION		VARCHAR(10),
	@PP_O_FORMA_INSTRUCCION		INT,
	@PP_C_FORMA_INSTRUCCION		VARCHAR(255),
	@PP_L_FORMA_INSTRUCCION		INT
AS
	
	INSERT INTO FORMA_INSTRUCCION
		(	K_FORMA_INSTRUCCION,			D_FORMA_INSTRUCCION, 
			S_FORMA_INSTRUCCION,			O_FORMA_INSTRUCCION,
			C_FORMA_INSTRUCCION,
			L_FORMA_INSTRUCCION			)		
	VALUES	
		(	@PP_K_FORMA_INSTRUCCION,		@PP_D_FORMA_INSTRUCCION,	
			@PP_S_FORMA_INSTRUCCION,		@PP_O_FORMA_INSTRUCCION,
			@PP_C_FORMA_INSTRUCCION,
			@PP_L_FORMA_INSTRUCCION		)

	-- =========================================================
GO


EXECUTE [dbo].[PG_CI_FORMA_INSTRUCCION] 0, 0, 1, 'EFECTIVO',		'EFE', 1, '', 1
EXECUTE [dbo].[PG_CI_FORMA_INSTRUCCION] 0, 0, 2, 'CHEQUE',			'CHE', 1, '', 1
EXECUTE [dbo].[PG_CI_FORMA_INSTRUCCION] 0, 0, 3, 'TRANSFERENCIA',	'TRA', 1, '', 1
EXECUTE [dbo].[PG_CI_FORMA_INSTRUCCION] 0, 0, 4, 'CONDONACIÓN',		'CON', 1, '', 1
GO






-- ///////////////////////////////////////////////////////////////
-- // INSTRUCCION					
-- ///////////////////////////////////////////////////////////////
	

CREATE TABLE [dbo].[INSTRUCCION] (
	-- =============================== CONTROL
	[K_INSTRUCCION]						[INT] NOT NULL,
	[K_TIPO_INSTRUCCION]				[INT] NOT NULL,
	[K_ESTATUS_INSTRUCCION]				[INT] NOT NULL,
	[K_FORMA_INSTRUCCION]				[INT] NOT NULL,
	[L_CAPTURA_MANUAL]					[INT] NOT NULL,
	-- =============================== INFORMACION
	[K_RESUMEN_FLUJO_DIARIO_X_UNO]		[INT] NOT NULL,
	[K_CUENTA_BANCO]					[INT] NOT NULL			DEFAULT 0,
	[F_INSTRUCCION]						[DATE] NOT NULL,	
	-- ===============================
	[K_RAZON_SOCIAL]					[INT] NOT NULL			DEFAULT 0,
	[K_UNIDAD_OPERATIVA]				[INT] NOT NULL			DEFAULT 0,
	[K_PROVEEDOR]						[INT] NOT NULL			DEFAULT 0,
	-- =============================== 
	[BENEFICIARIO]						VARCHAR(100) NOT NULL	DEFAULT '',
	[REFERENCIA_1]						VARCHAR(500) NOT NULL	DEFAULT '',
	[REFERENCIA_2]						VARCHAR(500) NOT NULL	DEFAULT '',
	[MONTO_INSTRUCCION]					DECIMAL(19,4) NOT NULL	DEFAULT 0
) ON [PRIMARY]
GO


-- //////////////////////////////////////////////////////


ALTER TABLE [dbo].[INSTRUCCION]
	ADD CONSTRAINT [PK_INSTRUCCION]
		PRIMARY KEY CLUSTERED ([K_INSTRUCCION])
GO
 


ALTER TABLE [dbo].[INSTRUCCION] ADD 
	CONSTRAINT [FK_INSTRUCCION_01] 
		FOREIGN KEY ([K_CUENTA_BANCO])
		REFERENCES [dbo].[CUENTA_BANCO] ([K_CUENTA_BANCO])
GO

/*
ALTER TABLE [dbo].[INSTRUCCION] ADD 
	CONSTRAINT [FK_INSTRUCCION_02] 
		FOREIGN KEY ([K_RESUMEN_FLUJO_DIARIO_X_UNO])
		REFERENCES [dbo].[RESUMEN_FLUJO_DIARIO_X_UNO] ([K_RESUMEN_FLUJO_DIARIO_X_UNO])
GO
*/

ALTER TABLE [dbo].[INSTRUCCION] ADD 
	CONSTRAINT [FK_INSTRUCCION_03] 
		FOREIGN KEY ([K_ESTATUS_INSTRUCCION]) 
		REFERENCES [dbo].[ESTATUS_INSTRUCCION] ([K_ESTATUS_INSTRUCCION]),
	CONSTRAINT [FK_INSTRUCCION_04] 
		FOREIGN KEY ([K_TIPO_INSTRUCCION]) 
		REFERENCES [dbo].[TIPO_INSTRUCCION] ([K_TIPO_INSTRUCCION]),
	CONSTRAINT [FK_INSTRUCCION_05] 
		FOREIGN KEY ([K_FORMA_INSTRUCCION]) 
		REFERENCES [dbo].[FORMA_INSTRUCCION] ([K_FORMA_INSTRUCCION])
GO



ALTER TABLE [dbo].[INSTRUCCION] ADD 
	CONSTRAINT [FK_INSTRUCCION_01_RZS] 
		FOREIGN KEY ([K_RAZON_SOCIAL]) 
		REFERENCES [dbo].[RAZON_SOCIAL] ([K_RAZON_SOCIAL]),
	CONSTRAINT [FK_INSTRUCCION_01_UNO] 
		FOREIGN KEY ([K_UNIDAD_OPERATIVA]) 
		REFERENCES [dbo].[UNIDAD_OPERATIVA] ([K_UNIDAD_OPERATIVA]),
	CONSTRAINT [FK_INSTRUCCION_01_PRV] 
		FOREIGN KEY ([K_PROVEEDOR]) 
		REFERENCES [dbo].[PROVEEDOR] ([K_PROVEEDOR])
GO
	


-- //////////////////////////////////////////////////////////////


ALTER TABLE [dbo].[INSTRUCCION] 
	ADD		[K_USUARIO_ALTA]				[INT] NOT NULL,
			[F_ALTA]						[DATETIME] NOT NULL,
			[K_USUARIO_CAMBIO]				[INT] NOT NULL,
			[F_CAMBIO]						[DATETIME] NOT NULL,
			[L_BORRADO]						[INT] NOT NULL,
			[K_USUARIO_BAJA]				[INT] NULL,
			[F_BAJA]						[DATETIME] NULL;
GO


ALTER TABLE [dbo].[INSTRUCCION] ADD 
	CONSTRAINT [FK_INSTRUCCION_USUARIO_ALTA]  
		FOREIGN KEY ([K_USUARIO_ALTA]) 
		REFERENCES [dbo].[USUARIO] ([K_USUARIO]),
	CONSTRAINT [FK_INSTRUCCION_USUARIO_CAMBIO]  
		FOREIGN KEY ([K_USUARIO_CAMBIO]) 
		REFERENCES [dbo].[USUARIO] ([K_USUARIO]),
	CONSTRAINT [FK_INSTRUCCION_USUARIO_BAJA]  
		FOREIGN KEY ([K_USUARIO_BAJA]) 
		REFERENCES [dbo].[USUARIO] ([K_USUARIO])
GO


-- //////////////////////////////////////////////////////

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[PG_CI_INSTRUCCION]') AND type in (N'P', N'PC'))
	DROP PROCEDURE [dbo].[PG_CI_INSTRUCCION]
GO


CREATE PROCEDURE [dbo].[PG_CI_INSTRUCCION]
	@PP_L_DEBUG							INT,
	@PP_K_SISTEMA_EXE					INT,
	@PP_K_INSTRUCCION					INT,
	@PP_D_INSTRUCCION					VARCHAR(100),
	@PP_K_ESTATUS_INSTRUCCION			INT,
	@PP_K_TIPO_INSTRUCCION				INT
AS

	INSERT INTO INSTRUCCION
		(	K_INSTRUCCION,				
			K_ESTATUS_INSTRUCCION,		
			K_TIPO_INSTRUCCION			)
	VALUES	
		(	@PP_K_INSTRUCCION,			
			@PP_K_ESTATUS_INSTRUCCION,
			@PP_K_TIPO_INSTRUCCION		)
	
	-- ==============================================
GO



-- //////////////////////////////////////////////////////////////
-- //////////////////////////////////////////////////////////////
-- //////////////////////////////////////////////////////////////
